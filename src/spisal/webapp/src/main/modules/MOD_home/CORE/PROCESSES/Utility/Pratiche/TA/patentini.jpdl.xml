<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="selectGas">


<start-state name="start-state1">
		<transition to="coming from?"></transition>
	</start-state>


	<node name="backup gas">
		<event type="node-enter">
			<action name="1" expression="#{CodeValuePhiAction.injectEmptyList('CodeValuePhiList')}"></action>
			<action name="2" expression="#{not empty Patentini.gas ? CodeValuePhiList.list.addAll(Patentini.gas) : ''}"></action>
		</event>
		<transition to="gas popup"></transition>
	</node>

	<task-node name="gas popup">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/select_gas')}"></action>
		</event>
		<transition to="operation?"></transition>
	</task-node>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{CodeValuePhiAction.eject()}"></action>
			<action name="2" expression="#{Patentini.setGas(CodeValuePhiList.list)}"></action>
			<action name="3" expression="#{CodeValuePhiAction.ejectList()}"></action>
			<action name="4" expression="#{PatentiniAction.eject()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<decision name="operation?" expression="#{button.mnemonic}">
		<transition to="eject" name="BtnCancel"></transition>
		<transition to="end-state1" name="BtnOk"></transition>
	</decision>

	<decision name="coming from?" expression="#{(button.getMnemonic())}">
		<transition to="backup gas" name="setGas"></transition>
		<transition to="decision1" name="patSearch"></transition>
		<transition to="new" name="patNew"></transition>
		<transition to="del" name="patDel"></transition>
	</decision>

	<node name="search">
		<event type="node-enter">
			<action name="1" expression="#{PatentiniAction.eject()}"></action>
			<action name="2" expression="#{PatentiniAction.equal.put('isActive',true)}"></action>
			<action name="3" expression="#{PatentiniAction.filterPerson(Procpratiche.praticheRiferimenti.richiedenteUtente)}"></action>
			<action name="4" expression="#{PatentiniAction.read()}"></action>
			<action name="5" expression="#{PatentiniAction.injectFirst()}"></action>
			<action name="6" expression="#{PatentiniAction.injectCopy(Patentini, ParereTecnico.patType.code)}"></action>
		</event>
		<transition to="end-state2"></transition>
	</node>

	<node name="new">
		<event type="node-enter">
			<action name="1" expression="#{PatentiniList.list.add(PatentiniAction.newEntity())}"></action>
		</event>
		<transition to="end-state3"></transition>
	</node>

	<node name="del">
		<event type="node-enter">
			<action name="1" expression="#{PatentiniList.list.remove(Patentini)}"></action>
		</event>
		<transition to="end-state3"></transition>
	</node>

	<decision name="decision1" expression="#{not empty Procpratiche.praticheRiferimenti.richiedenteUtente}">
		<transition to="search" name="true"></transition>
		<transition to="clean results" name="false"></transition>
	</decision>

	<node name="clean results">
		<event type="node-enter">
			<action name="1" expression="#{PatentiniAction.injectEmptyList()}"></action>
		</event>
		<transition to="end-state2"></transition>
	</node>


	<end-state name="end-state1"></end-state>

	<end-state name="end-state2"></end-state>

	<end-state name="end-state3"></end-state>


</process-definition>