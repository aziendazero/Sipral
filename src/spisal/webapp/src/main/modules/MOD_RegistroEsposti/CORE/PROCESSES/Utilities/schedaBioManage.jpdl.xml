<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="schedaBioManage">


	<start-state name="start-state1">
		<transition to="prev Op?"></transition>
	</start-state>


	<process-state name="companies">
		<sub-process name="MOD_Company/CORE/PROCESSES/companies" binding="late"></sub-process>
		<transition to="unset temporary"></transition>
	</process-state>

	<node name="set temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
			<action name="2" expression="#{SchedaEspostiAction.temporary.put('dataTermine',null)}"></action>
		</event>
		<transition to="companies"></transition>
	</node>

	<node name="unset temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="button from sub?"></transition>
	</node>

	<decision name="company or sede?" expression="#{not empty Sedi ? 'sede' : 'company'}">
		<transition to="link sede and company" name="sede"></transition>
		<transition to="link company" name="company"></transition>
	</decision>

	<node name="link sede and company">
		<event type="node-enter">
			<action name="1" expression="#{SchedaEspostiAction.link('sedi',Sedi)}"></action>
			<action name="2" expression="#{SchedaEspostiAction.link('personeGiuridiche',PersoneGiuridiche)}"></action>
		</event>
		<transition to="link stuff"></transition>
	</node>

	<node name="link company">
		<event type="node-enter">
			<action name="1" expression="#{SchedaEspostiAction.link('personeGiuridiche',PersoneGiuridiche)}"></action>
			<action name="2" expression="#{SediAction.injectSedePrincipale(PersoneGiuridiche.sedi)}"></action>
			<action name="3" expression="#{SchedaEspostiAction.link('sedi',Sedi)}"></action>
		</event>
		<transition to="link stuff"></transition>
	</node>

	<decision name="button from sub?" expression="#{(button.getMnemonic())}">
		<transition to="remove oldScheda" name="BtnBack"></transition>
		<transition to="init Lists" name="BtnSave"></transition>
	</decision>

	<node name="remove oldScheda">
		<event type="node-enter">
			<action name="1" expression="#{SchedaEspostiAction.temporary.remove('oldScheda')}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<task-node name="edit esposto">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_RegistroEsposti/CORE/FORMS/espostiBioEdit')}"></action>
		</event>
		<transition to="next?"></transition>
	</task-node>

	<decision name="next?" expression="#{(button.getMnemonic())}">
		<transition to="backup Sede" name="editAzienda"></transition>
		<transition to="manageCodes" name="schedaInail"></transition>
		<transition to="manageCodes" name="schedaAteco"></transition>
		<transition to="first save?" name="BtnSave"></transition>
		<transition to="refresh" name="BtnBack"></transition>
		<transition to="bio" name="delSubstance1"></transition>
		<transition to="bio" name="addSubstance1"></transition>
		<transition to="manageCodes" name="lavInail"></transition>
		<transition to="manageCodes" name="lavAteco"></transition>
		<transition to="lavorazioni" name="delLavorazione"></transition>
		<transition to="lavorazioni" name="addLavorazione"></transition>
		<transition to="dipendenti" name="dipendentiEspostiDel"></transition>
		<transition to="dipendenti" name="dipendentiEdit"></transition>
		<transition to="dipendenti" name="dipendentiNew"></transition>
		<transition to="bio" name="delSubstance2"></transition>
		<transition to="bio" name="addSubstance2"></transition>
	</decision>

	<process-state name="dati Azienda">
		<sub-process name="MOD_Company/CORE/PROCESSES/companyManagement?stateless=true" binding="late"></sub-process>
		<transition to="restore Sede"></transition>
	</process-state>

	<node name="backup Sede">
		<event type="node-enter">
			<action name="1" expression="#{SchedaEspostiAction.temporary.put('sede',Sedi)}"></action>
			<action name="2" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
			<action name="3" expression="#{SediAction.injectList(PersoneGiuridiche.sedi,'SediList')}"></action>
		</event>
		<transition to="dati Azienda"></transition>
	</node>

	<node name="restore Sede">
		<event type="node-enter">
			<action name="1" expression="#{SediAction.inject(SchedaEspostiAction.temporary['sede'])}"></action>
			<action name="2" expression="#{SchedaEspostiAction.temporary.remove('sede')}"></action>
			<action name="3" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="edit esposto"></transition>
	</node>

	<process-state name="manageCodes">
		<sub-process name="MOD_RegistroEsposti/CORE/PROCESSES/Utilities/manageCodes" binding="late"></sub-process>
		<transition to="edit esposto"></transition>
	</process-state>

	<decision name="first save?" expression="#{SchedaEsposti.internalId le 0}">
		<transition to="link author'n UOC" name="true"></transition>
		<transition to="link stuff" name="false"></transition>
	</decision>

	<node name="init Lists">
		<event type="node-enter">
			<action name="1" expression="#{SostanzeAction.injectEmptyList('Sostanze1List')}"></action>
			<action name="2" expression="#{SostanzeAction.injectEmptyList('ToRemoveSostanze1List')}"></action>
			<action name="3" expression="#{SostanzeAction.injectEmptyList('Sostanze2List')}"></action>
			<action name="4" expression="#{SostanzeAction.injectEmptyList('ToRemoveSostanze2List')}"></action>
			<action name="5" expression="#{LavorazioniCorrelateAction.injectEmptyList('LavorazioniCorrelateList')}"></action>
			<action name="6" expression="#{LavorazioniCorrelateAction.injectEmptyList('ToRemoveLavorazioniList')}"></action>
			<action name="7" expression="#{EspostiAction.injectEmptyList('EspostiList')}"></action>
			<action name="8" expression="#{EspostiAction.injectEmptyList('ToRemoveEspostiList')}"></action>
		</event>
		<transition to="checkAndClone"></transition>
	</node>

	<node name="link stuff">
		<event type="node-enter">
			<action name="1" expression="#{SostanzeAction.injectEmptyList('SostanzeList')}"></action>
			<action name="2" expression="#{SostanzeList.list.addAll(Sostanze1List.list)}"></action>
			<action name="3" expression="#{SostanzeList.list.addAll(Sostanze2List.list)}"></action>
			<action name="4" expression="#{SostanzeAction.injectEmptyList('ToRemoveSostanzeList')}"></action>
			<action name="5" expression="#{ToRemoveSostanzeList.list.addAll(ToRemoveSostanze1List.list)}"></action>
			<action name="6" expression="#{ToRemoveSostanzeList.list.addAll(ToRemoveSostanze2List.list)}"></action>
			<action name="7" expression="#{SchedaEspostiAction.linkUnlinkSostanze(SostanzeList.list, ToRemoveSostanzeList.list)}"></action>
			<action name="8" expression="#{SchedaEspostiAction.linkUnlinkLavorazioni(LavorazioniCorrelateList.list,ToRemoveLavorazioniList.list)}"></action>
			<action name="9" expression="#{SchedaEspostiAction.linkUnlinkEsposti(EspostiList.list,ToRemoveEspostiList.list)}"></action>
			<action name="10" expression="#{SostanzeAction.eject()}"></action>
			<action name="11" expression="#{LavorazioniCorrelateAction.eject()}"></action>
			<action name="12" expression="#{EspostiAction.eject()}"></action>
			<action name="13" expression="#{SostanzeAction.ejectList('SostanzeList')}"></action>
			<action name="14" expression="#{SostanzeAction.ejectList('ToRemoveSostanzeList')}"></action>
		</event>
		<transition to="super-state1/create"></transition>
	</node>

	<super-state name="super-state1">
		<node name="create">
			<event type="node-enter">
				<action name="1" expression="#{SchedaEspostiAction.setCodeValue('tipologia','PHIDIC','SubstanceType','SUBTYPE3')}"></action>
				<action name="2" expression="#{SchedaEspostiAction.create()}"></action>
				<action name="3" expression="#{SchedaEspostiAction.closePreviousScheda()}"></action>
				<action name="4" expression="#{SostanzeAction.setSelectedEntitiesList(ToRemoveSostanze1List.list)}"></action>
				<action name="5" expression="#{SostanzeAction.delete()}"></action>
				<action name="6" expression="#{SostanzeAction.injectEmptyList('ToRemoveSostanze1List')}"></action>
				<action name="7" expression="#{SostanzeAction.setSelectedEntitiesList(ToRemoveSostanze2List.list)}"></action>
				<action name="8" expression="#{SostanzeAction.delete()}"></action>
				<action name="9" expression="#{SostanzeAction.injectEmptyList('ToRemoveSostanze2List')}"></action>
				<action name="10" expression="#{LavorazioniCorrelateAction.setSelectedEntitiesList(ToRemoveLavorazioniList.list)}"></action>
				<action name="11" expression="#{LavorazioniCorrelateAction.delete()}"></action>
				<action name="12" expression="#{LavorazioniCorrelateAction.injectEmptyList('ToRemoveLavorazioniList')}"></action>
				<action name="13" expression="#{EspostiAction.setSelectedEntitiesList(ToRemoveEspostiList.list)}"></action>
				<action name="14" expression="#{EspostiAction.create()}"></action>
				<action name="15" expression="#{EspostiAction.injectEmptyList('ToRemoveEspostiList')}"></action>
				<action name="16" expression="#{not empty SchedaEspostiAction.temporary['dataTermine'] ? PersoneGiuridiche.setDataTermine(SchedaEspostiAction.temporary['dataTermine']) : ''}"></action>
				<action name="17" expression="#{SchedaEspostiAction.temporary.put('disable',not empty SchedaEsposti.endValidity or not empty SchedaEspostiAction.temporary['dataTermine'])}"></action>
				<action name="18" expression="#{SchedaEspostiAction.temporary['iamSubprocess'] ? SchedaEspostiAction.link('protocollo',Protocollo) : ''}"></action>
			</event>
			<transition to="../edit esposto"></transition>
		</node>
	</super-state>

	<process-state name="bio">
		<sub-process name="MOD_RegistroEsposti/CORE/PROCESSES/Utilities/bioManage" binding="late"></sub-process>
		<transition to="gruppi"></transition>
	</process-state>

	<node name="refresh">
		<event type="node-enter">
			<action name="1" expression="#{SchedaEspostiAction.refresh()}"></action>
			<action name="2" expression="#{SostanzeAction.refresh(SostanzeList.list)}"></action>
			<action name="3" expression="#{SostanzeAction.refresh(ToRemoveSostanzeList.list)}"></action>
			<action name="4" expression="#{SostanzeAction.ejectList()}"></action>
			<action name="5" expression="#{SostanzeAction.ejectList('ToRemoveSostanzeList')}"></action>
			<action name="6" expression="#{LavorazioniCorrelateAction.refresh(LavorazioniCorrelateList.list)}"></action>
			<action name="7" expression="#{LavorazioniCorrelateAction.refresh(ToRemoveLavorazioniList.list)}"></action>
			<action name="8" expression="#{LavorazioniCorrelateAction.ejectList()}"></action>
			<action name="9" expression="#{LavorazioniCorrelateAction.ejectList('ToRemoveLavorazioniList')}"></action>
			<action name="10" expression="#{EspostiAction.refresh(EspostiList.list)}"></action>
			<action name="11" expression="#{EspostiAction.refresh(ToRemoveEspostiList.list)}"></action>
			<action name="12" expression="#{EspostiAction.ejectList()}"></action>
			<action name="13" expression="#{EspostiAction.ejectList('ToRemoveEspostiList')}"></action>
		</event>
		<transition to="remove oldScheda"></transition>
	</node>

	<process-state name="lavorazioni">
		<sub-process name="MOD_RegistroEsposti/CORE/PROCESSES/Utilities/lavorazioniManage" binding="late"></sub-process>
		<transition to="edit esposto"></transition>
	</process-state>

	<decision name="prev Op?" expression="#{(button.getMnemonic())}">
		<transition to="set temporary" name="schedaEspostiNew"></transition>
		<transition to="disabled" name="schedaEspostiEdit"></transition>
		<transition to="super-state2/delete scheda" name="schedaEspostiDel"></transition>
	</decision>

	<node name="init related entities">
		<event type="node-enter">
			<action name="1" expression="#{LavorazioniCorrelateAction.injectEmptyList('LavorazioniCorrelateList')}"></action>
			<action name="2" expression="#{LavorazioniCorrelateAction.injectEmptyList('ToRemoveLavorazioniList')}"></action>
			<action name="3" expression="#{LavorazioniCorrelateList.list.addAll(SchedaEsposti.lavorazioniCorrelate)}"></action>
			<action name="4" expression="#{EspostiAction.injectEmptyList('EspostiList')}"></action>
			<action name="5" expression="#{EspostiAction.injectEmptyList('ToRemoveEspostiList')}"></action>
			<action name="6" expression="#{EspostiList.list.addAll(SchedaEsposti.esposti)}"></action>
			<action name="7" expression="#{EspostiAction.injectList(SchedaEsposti.esposti)}"></action>
			<action name="8" expression="#{SchedaEspostiAction.loadOldScheda()}"></action>
			<action name="9" expression="#{SostanzeAction.injectEmptyList('Sostanze1List')}"></action>
			<action name="10" expression="#{SostanzeAction.injectEmptyList('ToRemoveSostanze1List')}"></action>
			<action name="11" expression="#{SostanzeAction.injectEmptyList('Sostanze2List')}"></action>
			<action name="12" expression="#{SostanzeAction.injectEmptyList('ToRemoveSostanze2List')}"></action>
			<action name="13" expression="#{SostanzeAction.cleanRestrictions()}"></action>
			<action name="14" expression="#{SostanzeAction.equal.put('isActive',true)}"></action>
			<action name="15" expression="#{SostanzeAction.equal.put('gruppo3',true)}"></action>
			<action name="16" expression="#{SostanzeAction.equal.put('schedaEsposti.internalId',SchedaEsposti.internalId)}"></action>
			<action name="17" expression="#{Sostanze1List.list.addAll(SostanzeAction.select())}"></action>
			<action name="18" expression="#{SostanzeAction.equal.put('gruppo3',false)}"></action>
			<action name="19" expression="#{Sostanze2List.list.addAll(SostanzeAction.select())}"></action>
			<action name="20" expression="#{PersoneGiuridicheAction.eject()}"></action>
			<action name="21" expression="#{SediAction.eject()}"></action>
			<action name="22" expression="#{PersoneGiuridicheAction.inject(SchedaEsposti.personeGiuridiche)}"></action>
			<action name="23" expression="#{SediAction.inject(SchedaEsposti.sedi)}"></action>
			<action name="24" expression="#{not empty Sostanze1List and not Sostanze1List.isEmpty() ? SchedaEspostiAction.temporary.put('gruppo3',true) : SchedaEspostiAction.temporary.put('gruppo3',false)}"></action>
			<action name="25" expression="#{not empty Sostanze2List and not Sostanze2List.isEmpty() ? SchedaEspostiAction.temporary.put('gruppo4',true) : SchedaEspostiAction.temporary.put('gruppo4',false)}"></action>
		</event>
		<transition to="edit esposto"></transition>
	</node>

	<super-state name="super-state2">
		<node name="delete scheda">
			<event type="node-enter">
				<action name="1" expression="#{SchedaEsposti.setSedi(null)}"></action>
				<action name="2" expression="#{SchedaEsposti.setPersoneGiuridiche(null)}"></action>
				<action name="3" expression="#{SchedaEsposti.setIsActive(false)}"></action>
				<action name="4" expression="#{SchedaEspostiAction.create()}"></action>
				<action name="5" expression="#{EspostiAction.ejectList()}"></action>
				<action name="6" expression="#{SchedaEspostiAction.openPreviousScheda()}"></action>
			</event>
			<transition to="../end-state2"></transition>
		</node>
	</super-state>

	<process-state name="dipendenti">
		<sub-process name="MOD_RegistroEsposti/CORE/PROCESSES/Utilities/dipendentiManage" binding="late"></sub-process>
		<transition to="edit esposto"></transition>
	</process-state>

	<node name="link author'n UOC">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.equal.put('code.code','UOC')}"></action>
			<action name="2" expression="#{ServiceDeliveryLocationAction.read()}"></action>
			<action name="3" expression="#{ServiceDeliveryLocationAction.injectFirst()}"></action>
			<action name="4" expression="#{SchedaEspostiAction.link('serviceDeliveryLocation',ServiceDeliveryLocation)}"></action>
			<action name="5" expression="#{ServiceDeliveryLocationAction.cleanRestrictions()}"></action>
			<action name="6" expression="#{ServiceDeliveryLocationAction.ejectList()}"></action>
			<action name="7" expression="#{ServiceDeliveryLocationAction.eject()}"></action>
			<action name="8" expression="#{SchedaEspostiAction.link('author',userBean.getCurrentEmployee())}"></action>
		</event>
		<transition to="company or sede?"></transition>
	</node>

	<node name="checkAndClone">
		<event type="node-enter">
			<action name="1" expression="#{SchedaEspostiAction.checkAndClone(PersoneGiuridiche, Sedi, true)}"></action>
			<action name="2" expression="#{empty Sedi ? SediAction.injectSedePrincipale(PersoneGiuridiche.sedi) : ''}"></action>
		</event>
		<transition to="edit esposto"></transition>
	</node>

	<node name="disabled">
		<event type="node-enter">
			<action name="1" expression="#{SchedaEspostiAction.temporary.put('dataTermine', SchedaEsposti.personeGiuridiche.dataTermine)}"></action>
			<action name="2" expression="#{SchedaEspostiAction.temporary.put('disable',not empty SchedaEsposti.endValidity or not empty SchedaEspostiAction.temporary['dataTermine'])}"></action>
		</event>
		<transition to="init related entities"></transition>
	</node>

	<node name="gruppi">
		<event type="node-enter">
			<action name="1" expression="#{not empty Sostanze1List and not Sostanze1List.isEmpty() ? SchedaEspostiAction.temporary.put('gruppo3',true) : SchedaEspostiAction.temporary.put('gruppo3',false)}"></action>
			<action name="2" expression="#{not empty Sostanze2List and not Sostanze2List.isEmpty() ? SchedaEspostiAction.temporary.put('gruppo4',true) : SchedaEspostiAction.temporary.put('gruppo4',false)}"></action>
		</event>
		<transition to="edit esposto"></transition>
	</node>


	<end-state name="end-state1"></end-state>

	<end-state name="end-state2"></end-state>


</process-definition>