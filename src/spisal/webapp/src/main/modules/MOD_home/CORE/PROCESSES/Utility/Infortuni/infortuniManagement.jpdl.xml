<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="infortuniManagement">


	<start-state name="start-state1">
		<transition to="Button?"></transition>
	</start-state>


	<decision name="Button?" expression="#{button.value}">
		<transition to="injectInchiesta" name="BtnMngInf"></transition>
		<transition to="CreateNewEntity" name="BtnNewInf"></transition>
		<transition to="delPopUp" name="BtnDelInf"></transition>
	</decision>

	<task-node name="manage infortunio">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/infortuni')}"></action>
		</event>
		<transition to="Button2?"></transition>
	</task-node>

	<decision name="Button2?" expression="#{(button.getMnemonic())}">
		<transition to="eject list" name="BtnBack"></transition>
		<transition to="Eject and set temporary" name="BtnAddCmp"></transition>
		<transition to="Eject and set temporary 2" name="BtbExtCmpMng"></transition>
		<transition to="Eject and set temporary 2" name="BtbExtCmpSrc"></transition>
		<transition to="PopUpManagement" name="BtnForma"></transition>
		<transition to="PopUpManagement" name="BtnComportamento"></transition>
		<transition to="PopUpManagement" name="BtnRischio"></transition>
		<transition to="PopUpManagement" name="BtnAgente"></transition>
		<transition to="set temporary" name="BtnAddPrs"></transition>
		<transition to="super-state1/Save" name="BtnSave"></transition>
		<transition to="inject ateco" name="compartoAtecoWA"></transition>
		<transition to="manage updates" name="ShowWA_infortunatoDiffPopup"></transition>
		<transition to="inject cantiere" name="BtnCantiereEdit"></transition>
		<transition to="Clean" name="BtnCln"></transition>
		<transition to="operations" name="operation"></transition>
		<transition to="get device location" name="getDeviceLocation"></transition>
		<transition to="pick location from map" name="pickLocationFromMap"></transition>
		<transition to="reverse geocoding" name="reverseGeocode"></transition>
		<transition to="super-state5/save anyway" name="BtnNotify"></transition>
	</decision>

	<process-state name="Search Person">
		<sub-process name="MOD_person/CORE/PROCESSES/ManageMulti" binding="late"></sub-process>
		<transition to="remove temporary 1"></transition>
	</process-state>

	<process-state name="Search Company">
		<sub-process name="MOD_Company/CORE/PROCESSES/companies" binding="late"></sub-process>
		<transition to="remove temporary 2"></transition>
	</process-state>

	<super-state name="super-state2">
		<node name="linkPerson">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.create()}"></action>
				<action name="2" expression="#{InfortuniAction.link('person',Person)}"></action>
			</event>
			<transition to="../manage infortunio"></transition>
		</node>
		<node name="linkCompany">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.link('personeGiuridiche',PersoneGiuridiche)}"></action>
			</event>
			<transition to="SedeSelected?"></transition>
		</node>
		<node name="linkSede">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.link('sedi',Sedi)}"></action>
			</event>
			<transition to="save"></transition>
		</node>
		<decision name="SedeSelected?" expression="#{not empty Sedi}">
			<transition to="linkSede" name="true"></transition>
			<transition to="unlinkSede" name="false"></transition>
		</decision>
		<node name="unlinkSede">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.unLink('sedi',Infortuni.sedi)}"></action>
			</event>
			<transition to="save"></transition>
		</node>
		<node name="save">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.create()}"></action>
				<action name="2" expression="#{InfortuniAction.copyAteco(PersoneGiuridiche,Sedi)}"></action>
			</event>
			<transition to="../manage infortunio"></transition>
		</node>
	</super-state>

	<node name="Eject and set temporary">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.eject()}"></action>
			<action name="2" expression="#{SediAction.eject()}"></action>
			<action name="3" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="Search Company"></transition>
	</node>

	<super-state name="super-state3">
		<node name="linkCompany2">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.link('personeGiuridicheExt',PersoneGiuridiche)}"></action>
				<action name="2" expression="#{Infortuni.infortuniExt.setAddr(Sedi.addr.cloneAd())}"></action>
				<action name="3" expression="#{Infortuni.setCantiere(null)}"></action>
			</event>
			<transition to="Sede Selected 2?"></transition>
		</node>
		<decision name="Sede Selected 2?" expression="#{not empty Sedi}">
			<transition to="linkSede2" name="true"></transition>
			<transition to="unlinkSede2" name="false"></transition>
		</decision>
		<node name="unlinkSede2">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.unLink('sediExt',Infortuni.sediExt)}"></action>
			</event>
			<transition to="save"></transition>
		</node>
		<node name="linkSede2">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.link('sediExt',Sedi)}"></action>
			</event>
			<transition to="save"></transition>
		</node>
		<node name="save">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.create()}"></action>
			</event>
			<transition to="../manage infortunio"></transition>
		</node>
		<node name="link cantiere">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.link('cantiere',Cantiere)}"></action>
				<action name="2" expression="#{Infortuni.infortuniExt.setAddr(Cantiere.addr.cloneAd())}"></action>
				<action name="3" expression="#{Infortuni.setPersoneGiuridicheExt(null)}"></action>
				<action name="4" expression="#{Infortuni.setSediExt(null)}"></action>
				<action name="5" expression="#{InfortuniExt.setAddr(Cantiere.addr)}"></action>
				<action name="6" expression="#{CantiereAction.eject()}"></action>
			</event>
			<transition to="save"></transition>
		</node>
	</super-state>

	<node name="Eject and set temporary 2">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.eject()}"></action>
			<action name="2" expression="#{SediAction.eject()}"></action>
			<action name="3" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="Search Company 2"></transition>
	</node>

	<process-state name="Search Company 2">
		<sub-process name="MOD_Company/CORE/PROCESSES/companies" binding="late"></sub-process>
		<transition to="remove temporary 3"></transition>
	</process-state>

	<node name="eject list">
		<event type="node-enter">
			<action name="1" expression="#{InfortuniAction.refresh()}"></action>
			<action name="2" expression="#{InfortuniAction.eject()}"></action>
			<action name="3" expression="#{InfortuniAction.ejectList()}"></action>
			<action name="4" expression="#{InfortuniExtAction.refresh()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<node name="injectInchiesta">
		<event type="node-enter">
			<action name="1" expression="#{InchiestaInfortunioAction.injectFirst(Procpratiche.inchiestaInfortunio)}"></action>
			<action name="2" expression="#{InfortuniExtAction.inject(Infortuni.infortuniExt)}"></action>
		</event>
		<transition to="manage infortunio"></transition>
	</node>

	<process-state name="operations">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Generico/operations" binding="late"></sub-process>
		<transition to="update age inf"></transition>
	</process-state>

	<node name="set temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
			<action name="2" expression="#{PersonAction.eject()}"></action>
		</event>
		<transition to="Search Person"></transition>
	</node>

	<node name="remove temporary 1">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
			<action name="2" expression="#{InfortuniExt.setAgeDeath(function.age(Person.birthTime, Infortuni.data))}"></action>
		</event>
		<transition to="Button4?"></transition>
	</node>

	<decision name="Button4?" expression="#{(button.getMnemonic())}">
		<transition to="super-state2/linkPerson" name="BtnSave"></transition>
		<transition to="manage infortunio" name="BtnBack"></transition>
	</decision>

	<node name="remove temporary 2">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="Button5?"></transition>
	</node>

	<decision name="Button5?" expression="#{(button.getMnemonic())}">
		<transition to="super-state2/linkCompany" name="BtnSave"></transition>
		<transition to="manage infortunio" name="BtnBack"></transition>
	</decision>

	<node name="remove temporary 3">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="Decision6"></transition>
	</node>

	<decision name="Decision6" expression="#{(button.getMnemonic())}">
		<transition to="super-state3/linkCompany2" name="BtnSave"></transition>
		<transition to="manage infortunio" name="BtnBack"></transition>
	</decision>

	<process-state name="PopUpManagement">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Infortuni/popUpManagement" binding="late"></sub-process>
		<transition to="manage infortunio"></transition>
	</process-state>

	<super-state name="super-state1">
		<node name="Save">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.create()}"></action>
				<action name="2" expression="#{InfortuniAction.link('procpratiche',Procpratiche)}"></action>
			</event>
			<transition to="../manage infortunio"></transition>
		</node>
	</super-state>

	<node name="inject ateco">
		<event type="node-enter">
			<action name="1" expression="#{CodeValueAtecoAction.inject(Infortuni.comparto)}"></action>
		</event>
		<transition to="select ateco ui"></transition>
	</node>

	<process-state name="select ateco ui">
		<sub-process name="MOD_RegistroEsposti/CORE/PROCESSES/Utilities/filterAteco" binding="late"></sub-process>
		<transition to="link"></transition>
	</process-state>

	<node name="link">
		<event type="node-enter">
			<action name="1" expression="#{not empty CodeValueAteco ? Infortuni.setComparto(CodeValueAteco) : ''}"></action>
			<action name="2" expression="#{CodeValueAtecoAction.eject()}"></action>
		</event>
		<transition to="manage infortunio"></transition>
	</node>

	<process-state name="manage updates">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Pratiche/personUpdates" binding="late"></sub-process>
		<transition to="manage infortunio"></transition>
	</process-state>

	<node name="inject cantiere">
		<event type="node-enter">
			<action name="1" expression="#{button.setMnemonic('editCantiere')}"></action>
			<action name="2" expression="#{CantiereAction.inject(Infortuni.cantiere)}"></action>
			<action name="3" expression="#{empty Cantiere ? button.setMnemonic('newCantiere') : ''}"></action>
			<action name="4" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="manage cantieri"></transition>
	</node>

	<process-state name="manage cantieri">
		<sub-process name="MOD_Cantieri/PROCESSES/GestioneCantieri" binding="late"></sub-process>
		<transition to="not linked yet?"></transition>
	</process-state>

	<decision name="not linked yet?" expression="#{Cantiere.internalId gt 0 and Cantiere.internalId ne Infortuni.cantiere.internalId}">
		<transition to="super-state3/link cantiere" name="true"></transition>
		<transition to="ejectCantiere" name="false"></transition>
	</decision>

	<node name="ejectCantiere">
		<event type="node-enter">
			<action name="1" expression="#{CantiereAction.eject()}"></action>
		</event>
		<transition to="manage infortunio"></transition>
	</node>

	<node name="Clean">
		<event type="node-enter">
			<action name="1" expression="#{Infortuni.infortuniExt.setAddr(null)}"></action>
			<action name="2" expression="#{Infortuni.infortuniExt.setLongitudine(null)}"></action>
			<action name="3" expression="#{Infortuni.infortuniExt.setLatitudine(null)}"></action>
			<action name="4" expression="#{Infortuni.setSediExt(null)}"></action>
			<action name="5" expression="#{Infortuni.setPersoneGiuridicheExt(null)}"></action>
			<action name="6" expression="#{Infortuni.setCantiere(null)}"></action>
			<action name="7" expression="#{Infortuni.place.code=='OwnCompany' and Infortuni.sedi!=null ? Infortuni.infortuniExt.setAddr(Infortuni.sedi.addr.cloneAd()) : ''}"></action>
			<action name="8" expression="#{Infortuni.place.code=='OwnCompany' and Infortuni.sedi!=null ? Infortuni.infortuniExt.setLatitudine(Infortuni.sedi.latitudine) : ''}"></action>
			<action name="9" expression="#{Infortuni.place.code=='OwnCompany' and Infortuni.sedi!=null ? Infortuni.infortuniExt.setLongitudine(Infortuni.sedi.longitudine) : ''}"></action>
		</event>
		<transition to="manage infortunio"></transition>
	</node>

	<node name="CreateNewEntity">
		<event type="node-enter">
			<action name="1" expression="#{InfortuniAction.eject()}"></action>
			<action name="2" expression="#{InfortuniExtAction.eject()}"></action>
			<action name="3" expression="#{InfortuniAction.inject(InfortuniAction.newEntity())}"></action>
			<action name="4" expression="#{InfortuniExtAction.inject(InfortuniExtAction.newEntity())}"></action>
			<action name="5" expression="#{InfortuniAction.presetNotePrognosi(Infortuni)}"></action>
			<action name="6" expression="#{InfortuniList.size()&gt;0?Infortuni.setData(InfortuniList.get(0).getData()):''}"></action>
			<action name="7" expression="#{InfortuniAction.link('infortuniExt',InfortuniExt)}"></action>
			<action name="8" expression="#{ProcpraticheAction.copyAccidentLocationFromProtocollo(Protocollo)}"></action>
		</event>
		<transition to="manage infortunio"></transition>
	</node>

	<task-node name="delPopUp">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Infortunato_alert')}"></action>
		</event>
		<transition to="ButtonMnemonic"></transition>
	</task-node>

	<decision name="ButtonMnemonic" expression="#{button.mnemonic}">
		<transition to="end-state2" name="BtnCancel"></transition>
		<transition to="super-state4/Delete Infortunato" name="BtnSave"></transition>
	</decision>

	<super-state name="super-state4">
		<node name="Delete Infortunato">
			<event type="node-enter">
				<action name="1" expression="#{ProcpraticheAction.unLink('infortuni',Infortuni)}"></action>
				<action name="2" expression="#{InfortuniAction.unLink('procpratiche',Procpratiche)}"></action>
				<action name="3" expression="#{InfortuniAction.unLink('infortuniExt',InfortuniExt)}"></action>
				<action name="4" expression="#{InfortuniAction.delete()}"></action>
				<action name="5" expression="#{InfortuniExtAction.delete()}"></action>
				<action name="6" expression="#{InfortuniAction.eject()}"></action>
				<action name="7" expression="#{InfortuniAction.ejectList()}"></action>
			</event>
			<transition to="../end-state2"></transition>
		</node>
	</super-state>

	<process-state name="get device location">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Infortuni/getDeviceLocationInfortuni" binding="late"></sub-process>
		<transition to="manage infortunio"></transition>
	</process-state>

	<process-state name="pick location from map">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Infortuni/pickLocationFromMapInfortuni" binding="late"></sub-process>
		<transition to="manage infortunio"></transition>
	</process-state>

	<process-state name="reverse geocoding">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Infortuni/reverseGeocodingInfortuni" binding="late"></sub-process>
		<transition to="manage infortunio"></transition>
	</process-state>

	<node name="update age inf">
		<event type="node-enter">
			<action name="1" expression="#{Infortuni.person.birthTime ne null and Infortuni.data ne null ? InfortuniExt.setAgeDeath(function.age(Infortuni.person.birthTime, Infortuni.data)) : InfortuniExt.setAgeDeath('')}"></action>
		</event>
		<transition to="manage infortunio"></transition>
	</node>

	<super-state name="super-state5">
		<node name="save anyway">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniAction.create()}"></action>
				<action name="2" expression="#{InfortuniAction.link('procpratiche',Procpratiche)}"></action>
			</event>
			<transition to="../data complete?"></transition>
		</node>
	</super-state>

	<node name="check pre notif">
		<event type="node-enter">
			<action name="1" expression="#{InfortuniAction.temporary.put('notif',not InfortuniAction.checkPreNotifications())}"></action>
		</event>
		<transition to="manage infortunio"></transition>
	</node>

	<decision name="data complete?" expression="#{InfortuniAction.checkPreNotifications()}">
		<transition to="send notification and set flag" name="true"></transition>
		<transition to="manage infortunio" name="false"></transition>
	</decision>

	<node name="send notification and set flag">
		<event type="node-enter">
			<action name="1" expression="#{InfortuniExt.setNotificaDecesso(InfortuniAction.sendNotification())}"></action>
		</event>
		<transition to="super-state6/save only ext"></transition>
	</node>

	<super-state name="super-state6">
		<node name="save only ext">
			<event type="node-enter">
				<action name="1" expression="#{InfortuniExtAction.create()}"></action>
			</event>
			<transition to="../manage infortunio"></transition>
		</node>
	</super-state>


	<end-state name="end-state1"></end-state>

	<end-state name="end-state2"></end-state>


</process-definition>
