<?xml version="1.0" encoding="UTF-8"?>
<process-definition  xmlns=""  name="PHI_CI.war/processes/MOD_Employees/CORE/SaveUpdateMulti">
<description>UC26 - sottoprocesso di gestione degli utenti</description>
		
	<start-state name="start-state1">
		
		<transition to="empty employee?"></transition>
	</start-state>	
		
		

	<task-node name="form ruol">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
		
		
			<action expression="#{ViewManager.setViewId('/MOD_Employees/CORE/FORMS/f_add_role')}" name="main"></action>
		</event>
		<transition to="salva ?"></transition>		
	</task-node>


	<task-node name="form utente">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
		
		
			<action expression="#{ViewManager.setViewId('/MOD_Employees/CORE/FORMS/f_create_employee_MULTI')}" name="main"></action>
		</event>
		<transition to="bottone"></transition>		
	</task-node>

	
	<node name="search all roles">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeRoleAction.equal.put('employee.internalId',Employee.internalId)}"></action>
			<action name="2" expression="#{EmployeeRoleAction.setReadPageSize(10)}"></action>
			<action name="3" expression="#{EmployeeRoleAction.read()}"></action>
		</event>
		<transition to="form utente"></transition>
	</node>
			
	
	
	<node name="Refresh Role">
		<event type="node-enter">
		
		
			<action expression="#{EmployeeRoleAction.refresh()}" name="pre"></action>
		</event>
		<transition to="eject all EmpRole"></transition>
	</node>
			
	
	
	<node name="eject all EmpRole">
		<event type="node-enter">
		
		
			<action expression="#{EmployeeRoleAction.ejectList('EmployeeRoleList')}" name="pre"></action>
		</event>
		<transition to="search all roles"></transition>
	</node>
			
	
	
	<node name="eject ruolo">
		<event type="node-enter">  <!-- FIXME -->
		<action name="1" expression="#{EmployeeRoleAction.eject()}"></action>
			<action name="2" expression="#{EmployeeRoleAction.inject(EmployeeRoleAction.newEntity())}"></action>
</event>
		<transition to="form ruol"></transition>
	</node>
			
	
	 
	<decision name="salva ?" expression="#{(button.getMnemonic())}">
	<transition to="is new Role?" name="BACK"></transition>
		<transition to="is new User?" name="SAVE"></transition>
	
	</decision>
	 
	 
	 
	<decision name="bottone" expression="#{(button.getMnemonic())}">
	<transition to="eject ruolo" name="NEWROLE"></transition>
	<transition to="form ruol" name="EDITROLE"></transition>
	<transition to="Username == ID?" name="Save"></transition>
		<transition to="end-state1" name="BACK"></transition>
		<transition to="delete employee" name="Delete"></transition>
		<transition to="reset confirmation" name="RESET"></transition>
		<transition to="super-state5/reset login count" name="RESETCOUNT"></transition>
		<transition to="super-state6/try remove Role" name="DELETEROLE"></transition>
	
	</decision>
	 
	 
	 
	<decision name="is new Role?" expression="#{EmployeeRole.internalId lt 0}">
	<transition to="eject all EmpRole" name="true"></transition>
	<transition to="Refresh Role" name="false"></transition>
	
	</decision>
	 
	 
	<super-state name="super-state2">
		
		
	
	
	<node name="salva ruolo ">
		<event type="node-enter">
				<action name="1" expression="#{EmployeeAction.link('employeeRole',EmployeeRole)}"></action>
				<action name="2" expression="#{Employee.setLoginCount(0)}"></action>
				<action name="3" expression="#{EmployeeAction.create()}"></action>
			</event>
			<transition to="salva utente"></transition>
	</node>
		<node name="salva utente">
			<event type="node-enter">
				<action name="1" expression="#{EmployeeAction.onPrePersist()}"></action>
				<action name="2" expression="#{EmployeeAction.create()}"></action>
			</event>
			<transition to="../eject all EmpRole"></transition>
		</node>
			
		
	
		
	</super-state>
	
	
	
	<decision name="empty employee?" expression="#{empty Employee}">
		<transition to="search all roles" name="false"></transition>
		<transition to="creationNewUser" name="true"></transition>
	</decision>

	<super-state name="super-state3">
		<node name="reset password">
			<event type="node-enter">
				<action name="1" expression="#{EmployeeAction.temporary.put('uncryptedPassword', EmployeeAction.setRandomPassword())}"></action>
				<action name="2" expression="#{Employee.setLastChangedPassword(null)}"></action>
				<action name="3" expression="#{EmployeeAction.create()}"></action>
			</event>
			<transition to="../confirm form"></transition>
		</node>
	</super-state>

	<task-node name="confirm form">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Employees/CORE/FORMS/f_confirm_reset_password')}"></action>
		</event>
		<transition to="form utente"></transition>
	</task-node>

	<decision name="Username == ID?" expression="#{(not empty Employee.getId('PERSID')) and (Employee.getId('PERSID').getExtension() == Employee.username)}">
		<transition to="form utente" name="true"></transition>
		<transition to="super-state2/salva utente" name="false"></transition>
	</decision>

	<node name="crypt pwd and set login count">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeAction.setPassword(Employee.password)}"></action>
			<action name="2" expression="#{Employee.setLoginCount(0)}"></action>
			<action name="3" expression="#{EmployeeAction.temporary.put('isNewUser', false)}"></action>
		</event>
		<transition to="super-state2/salva ruolo "></transition>
	</node>

	<node name="delete employee">
		<event type="node-enter">
			<action name="2" expression="#{EmployeeAction.delete()}"></action>
			<action name="3" expression="#{EmployeeAction.eject()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<decision name="is new User?" expression="#{EmployeeAction.temporary['isNewUser'] eq true}">
		<transition to="crypt pwd and set login count" name="true"></transition>
		<transition to="super-state2/salva ruolo " name="false"></transition>
	</decision>

	<super-state name="super-state5">
		<node name="reset login count">
			<event type="node-enter">
				<action name="1" expression="#{Employee.setLoginCount(0)}"></action>
				<action name="2" expression="#{EmployeeAction.create()}"></action>
			</event>
			<transition to="../form utente"></transition>
		</node>
	</super-state>

	<decision name="decision1" expression="#{(button.getMnemonic())}">
		<transition to="super-state3/reset password" name="OK"></transition>
		<transition to="form utente" name="BtnCancel"></transition>
	</decision>

	<task-node name="reset confirmation">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_Employees/CORE/FORMS/f_askConfirmPasswordReset')}"></action>
		</event>
		<transition to="decision1"></transition>
	</task-node>

	<super-state name="super-state6">
		<decision name="try remove Role" expression="#{EmployeeRoleAction.tryToRemove()}">
			<transition to="../eject all EmpRole" name="true"></transition>
			<transition to="../popup avviso ruolo" name="false"></transition>
		</decision>
	</super-state>

	<task-node name="popup avviso ruolo">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_Employees/CORE/FORMS/f_roleDeleteImpossible')}"></action>
		</event>
		<transition to="eject all EmpRole"></transition>
	</task-node>

	<node name="creationNewUser">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeAction.temporary.put('isNewUser', true)}"></action>
		</event>
		<transition to="form utente"></transition>
	</node>
	
	
	
	<end-state name="end-state1">
	</end-state>
	
	

 <action name="security" expression=""></action>

</process-definition>

