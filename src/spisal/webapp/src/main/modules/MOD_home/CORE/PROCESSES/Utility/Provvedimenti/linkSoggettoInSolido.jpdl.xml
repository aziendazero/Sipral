<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="linkSoggettoAttivita">


	<start-state name="start-state1">
		<transition to="Button?"></transition>
	</start-state>


	<decision name="Button?" expression="#{(button.getMnemonic())}">
		<transition to="isSoggettoInSolido?" name="BtnSoggettoInSolido"></transition>
	</decision>

	<decision name="CvRichiedente?" expression="#{ProtocolloAction.temporary['inSolido'].code}">
		<transition to="Search Ditta" name="Ditta"></transition>
		<transition to="Search Utente" name="Utente"></transition>
	</decision>

	<process-state name="Search Ditta">
		<sub-process name="MOD_Company/CORE/PROCESSES/companies" binding="late"></sub-process>
		<transition to="Back1?"></transition>
	</process-state>

	<process-state name="Search Utente">
		<sub-process name="MOD_person/CORE/PROCESSES/ManageMulti" binding="late"></sub-process>
		<transition to="Back4?"></transition>
	</process-state>

	<node name="Link Ditta">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoInSolidoAction.link('ditta',PersoneGiuridiche)}"></action>
		</event>
		<transition to="empty sede?"></transition>
	</node>

	<decision name="Back1?" expression="#{(button.getMnemonic())}">
		<transition to="eject 1" name="BtnBack"></transition>
		<transition to="Link Ditta" name="BtnSave"></transition>
	</decision>

	<decision name="Back4?" expression="#{(button.getMnemonic())}">
		<transition to="eject 1" name="BtnBack"></transition>
		<transition to="Link Utente" name="BtnSave"></transition>
	</decision>

	<node name="Link Utente">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoInSolidoAction.link('utente',Person)}"></action>
			<action name="2" expression="#{ProvvedimentiAction.link('soggettoInSolido',SoggettoInSolido)}"></action>
		</event>
		<transition to="super-state1/Save Soggetto"></transition>
	</node>

	<super-state name="super-state1">
		<node name="Save Soggetto">
			<event type="node-enter">
				<action name="1" expression="#{ProvvedimentiAction.create()}"></action>
				<action name="2" expression="#{ProvvedimentiAction.link('soggettoInSolido',SoggettoInSolido)}"></action>
			</event>
			<transition to="../eject 1"></transition>
		</node>
	</super-state>

	<node name="set temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="CvRichiedente?"></transition>
	</node>

	<node name="eject 1">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.eject()}"></action>
			<action name="2" expression="#{SediAction.eject()}"></action>
			<action name="3" expression="#{PersoneAction.eject()}"></action>
			<action name="4" expression="#{SoggettoInSolidoAction.eject()}"></action>
		</event>
		<transition to="end-state2"></transition>
	</node>

	<node name="Create new">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoInSolidoAction.newEntity()}"></action>
		</event>
		<transition to="setCode"></transition>
	</node>

	<decision name="isSoggettoInSolido?" expression="#{Provvedimenti.soggettoInSolido eq null}">
		<transition to="Create new" name="true"></transition>
		<transition to="Inject" name="false"></transition>
	</decision>

	<node name="setCode">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoInSolido.setCode(ProtocolloAction.temporary['inSolido'])}"></action>
		</event>
		<transition to="set temporary"></transition>
	</node>

	<node name="Inject">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoInSolidoAction.inject(Provvedimenti.soggettoInSolido)}"></action>
		</event>
		<transition to="setCode"></transition>
	</node>

	<decision name="empty sede?" expression="#{empty Sedi}">
		<transition to="Link sede" name="false"></transition>
		<transition to="unlinkSede" name="true"></transition>
	</decision>

	<node name="Link sede">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoInSolidoAction.link('sede',Sedi)}"></action>
		</event>
		<transition to="super-state1/Save Soggetto"></transition>
	</node>

	<node name="unlinkSede">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoInSolidoAction.unLink('sede',SoggettoInSolido.sede)}"></action>
		</event>
		<transition to="super-state1/Save Soggetto"></transition>
	</node>


	<end-state name="end-state2"></end-state>


</process-definition>