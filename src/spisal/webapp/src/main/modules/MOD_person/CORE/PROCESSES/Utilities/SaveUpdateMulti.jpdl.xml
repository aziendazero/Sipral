<?xml version="1.0" encoding="UTF-8"?>
<process-definition  xmlns=""  name="SaveUpdateMulti">
<description>UC26 - sottoprocesso di gestione degli utenti</description>
		
	<start-state name="start-state1">
		
		<transition to="Inject MMG and situaz prof"></transition>
	</start-state>	
		
		

	<task-node name="Person UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
		
		
			<action expression="#{ViewManager.setViewId('/MOD_person/CORE/FORMS/create_person')}" name="main"></action>
		</event>
		<transition to="ButtonMnemonic"></transition>		
	</task-node>

	
	<decision name="ButtonMnemonic" expression="#{(button.getMnemonic())}">
	<transition to="eject" name="BACK"></transition>
		<transition to="Delete Person" name="Delete"></transition>
		<transition to="Search ASL" name="ASL"></transition>
		<transition to="Add Temporary" name="BtnProcPratiche"></transition>
		<transition to="generate CF" name="generaCF"></transition>
		<transition to="Set Temporary" name="MMG"></transition>
		<transition to="already existing" name="Save"></transition>
		<transition to="inverse geocode address" name="invGeocode1"></transition>
		<transition to="inverse geocode residence" name="invGeocode2"></transition>
		<transition to="inverse geocode domicile" name="invGeocode3"></transition>
		<transition to="Manage AUR Update" name="AURUpdate"></transition>
	
	</decision>
	 
	 
	 
	<super-state name="super-state1">
		
		
	
	
	<node name="Save Person">
		<event type="node-enter">
				<action name="1" expression="#{(SituazioneProfessionale.type ne null or SituazioneProfessionale.validFrom ne null or SituazioneProfessionale.validTo ne null or SituazioneProfessionale.note ne null) ? Person.setProfessionalSituation(SituazioneProfessionale) : ''}"></action>
				<action name="2" expression="#{PersonAction.create()}"></action>
			</event>
			<transition to="../reinject situaz prof"></transition>
	</node>
			
		
	
		
	</super-state>

	<node name="Delete Person">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.delete()}"></action>
			<action name="2" expression="#{PersonAction.eject()}"></action>
		</event>
		<transition to="eject"></transition>
	</node>

	<process-state name="Search ASL">
		<sub-process name="MOD_HBS/CORE/PROCESSES/Search Asl" binding="late"></sub-process>
		<transition to="isASLSelected?"></transition>
	</process-state>

	<decision name="isASLSelected?" expression="#{!empty Organization}">
		<transition to="Person UI" name="false"></transition>
		<transition to="linkASLToPerson" name="true"></transition>
	</decision>

	<node name="linkASLToPerson">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.link('currentOrg',Organization)}"></action>
		</event>
		<transition to="Person UI"></transition>
	</node>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{processManager.currentProcess eq 'MOD_person/CORE/PROCESSES/ManageMulti' ? ProcpraticheAction.eject() : ''}"></action>
			<action name="2" expression="#{PhysicianAction.eject()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<process-state name="Gestione Pratiche">
		<sub-process name="MOD_person/CORE/PROCESSES/Utilities/inverseGeocodeResidenza" binding="late"></sub-process>
		<transition to="Remove Temporary"></transition>
	</process-state>

	<node name="Add Temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('personManagement',true)}"></action>
			<action name="2" expression="#{ProcpraticheAction.temporary.put('completed', true)}"></action>
			<action name="3" expression="#{ProcpraticheAction.temporary.put('nullified', true)}"></action>
			<action name="4" expression="#{ProcpraticheAction.temporary.put('held', true)}"></action>
			<action name="5" expression="#{ProcpraticheAction.temporary.put('riferimento', vocabularies.getCodeValue('PHIDIC', 'TargetSource', 'Utente', 'C'))}"></action>
		</event>
		<transition to="Gestione Pratiche"></transition>
	</node>

	<node name="Remove Temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('personManagement',false)}"></action>
			<action name="2" expression="#{ProcpraticheAction.temporary.put('completed', false)}"></action>
			<action name="3" expression="#{ProcpraticheAction.temporary.put('nullified', false)}"></action>
			<action name="4" expression="#{ProcpraticheAction.temporary.put('held', false)}"></action>
		</event>
		<transition to="Person UI"></transition>
	</node>

	<process-state name="generate CF">
		<sub-process name="MOD_person/CORE/PROCESSES/Utilities/GeneraCodiceFiscale" binding="late"></sub-process>
		<transition to="Person UI"></transition>
	</process-state>

	<process-state name="Search MMG">
		<sub-process name="MOD_Anagrafiche/CORE/PROCESSES/mediciGestione" binding="late"></sub-process>
		<transition to="isMMGSelected?"></transition>
	</process-state>

	<decision name="isMMGSelected?" expression="#{!empty Physician and button.mnemonic eq 'BtnSave'}">
		<transition to="Inject MMG and situaz prof" name="false"></transition>
		<transition to="linkMMGToPerson" name="true"></transition>
	</decision>

	<node name="linkMMGToPerson">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.link('physician',Physician)}"></action>
		</event>
		<transition to="Inject MMG and situaz prof"></transition>
	</node>

	<node name="Set Temporary">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.temporary.put('search', true)}"></action>
		</event>
		<transition to="Search MMG"></transition>
	</node>

	<decision name="already existing" expression="#{Person.internalId gt 0}">
		<transition to="super-state1/Save Person" name="true"></transition>
		<transition to="super-state2/save New person" name="false"></transition>
	</decision>

	<super-state name="super-state2">
		<node name="save New person">
			<event type="node-enter">
				<action name="1" expression="#{!empty Physician?PhysicianAction.create():''}"></action>
				<action name="2" expression="#{!empty Physician?PhysicianAction.refresh():''}"></action>
				<action name="3" expression="#{!empty Physician?Person.setPhysician(Physician):''}"></action>
				<action name="4" expression="#{(SituazioneProfessionale.type ne null or SituazioneProfessionale.validFrom ne null or SituazioneProfessionale.validTo ne null or SituazioneProfessionale.note ne null) ? SituazioneProfessionaleAction.create() : ''}"></action>
				<action name="5" expression="#{(SituazioneProfessionale.type ne null or SituazioneProfessionale.validFrom ne null or SituazioneProfessionale.validTo ne null or SituazioneProfessionale.note ne null) ? Person.setProfessionalSituation(SituazioneProfessionale) : ''}"></action>
				<action name="6" expression="#{PersonAction.create()}"></action>
			</event>
			<transition to="../reinject situaz prof"></transition>
		</node>
	</super-state>

	<node name="Inject MMG and situaz prof">
		<event type="node-enter">
			<action name="1" expression="#{Person.physician ne null?PhysicianAction.inject(Person.physician):PhysicianAction.eject()}"></action>
			<action name="2" expression="#{Person.professionalSituation eq null ?SituazioneProfessionaleAction.inject(SituazioneProfessionaleAction.newEntity()):SituazioneProfessionaleAction.inject(Person.professionalSituation)}"></action>
		</event>
		<transition to="Person UI"></transition>
	</node>

	<process-state name="inverse geocode address">
		<sub-process name="MOD_person/CORE/PROCESSES/Utilities/inverseGeocodeRecapito" binding="late"></sub-process>
		<transition to="Person UI"></transition>
	</process-state>

	<process-state name="inverse geocode residence">
		<sub-process name="MOD_person/CORE/PROCESSES/Utilities/inverseGeocodeResidenza" binding="late"></sub-process>
		<transition to="Person UI"></transition>
	</process-state>

	<process-state name="inverse geocode domicile">
		<sub-process name="MOD_person/CORE/PROCESSES/Utilities/inverseGeocodeDomicilio" binding="late"></sub-process>
		<transition to="Person UI"></transition>
	</process-state>

	<process-state name="Manage AUR Update">
		<sub-process name="MOD_person/CORE/PROCESSES/Utilities/AurPersonUpdate" binding="late"></sub-process>
		<transition to="Person UI"></transition>
	</process-state>

	<node name="reinject situaz prof">
		<event type="node-enter">
			<action name="1" expression="#{Person.professionalSituation ne null ?SituazioneProfessionaleAction.inject(Person.professionalSituation):''}"></action>
		</event>
		<transition to="Person UI"></transition>
	</node>
	
	
	
	<end-state name="end-state1">
	</end-state>
	
	

 <action name="security" expression=""></action>

</process-definition>

