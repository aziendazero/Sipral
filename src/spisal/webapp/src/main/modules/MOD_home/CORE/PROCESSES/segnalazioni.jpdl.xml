<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="protocollo">


	<start-state name="start">
		<transition to="set temporary"></transition>
	</start-state>


	<task-node name="home">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/segnalazioni')}"></action>
		</event>
		<transition to="StatesManagement?"></transition>
	</task-node>

	<node name="read">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.setWorkingLine('uos.area')}"></action>
			<action name="2" expression="#{ServiceDeliveryLocationAction.cleanRestrictions()}"></action>
			<action name="3" expression="#{ProtocolloAction.orderBy.put('data','descending')}"></action>
			<action name="4" expression="#{ProtocolloAction.orderBy.put('internalId','descending')}"></action>
			<action name="5" expression="#{ProtocolloAction.filterBy()}"></action>
			<action name="6" expression="#{ProtocolloAction.setStates()}"></action>
			<action name="7" expression="#{ProtocolloAction.setCodes()}"></action>
			<action name="8" expression="#{ProtocolloAction.setUlss()}"></action>
			<action name="9" expression="#{ProtocolloAction.setUos()}"></action>
			<action name="10" expression="#{ProtocolloAction.temporary.put('showUOC', spisalUserAction.show('UOC'))}"></action>
			<action name="11" expression="#{ProtocolloAction.temporary.put('showULSS', spisalUserAction.show('ULSS'))}"></action>
			<action name="12" expression="#{ProtocolloAction.temporary.put('showUOS', spisalUserAction.show('UOS'))}"></action>
			<action name="13" expression="#{ProtocolloAction.filterCommittente()}"></action>
			<action name="14" expression="#{ProtocolloAction.filterPnc()}"></action>
			<action name="15" expression="#{ProtocolloAction.select.add('serviceDeliveryLocation.name.giv')}"></action>
			<action name="16" expression="#{ProtocolloAction.setReadPageSize(20)}"></action>
			<action name="17" expression="#{ProtocolloAction.temporary.put('rowCount',ProtocolloAction.countResults())}"></action>
			<action name="18" expression="#{ProtocolloAction.read()}"></action>
		</event>
		<transition to="home"></transition>
	</node>

	<decision name="button?" expression="#{(button.getMnemonic())}">
		<transition to="Close Filter Types" name="BtnRefresh"></transition>
		<transition to="Close Filter Types" name="BtnFilterApply"></transition>
		<transition to="clean restrictions" name="BtnFilterCancel"></transition>
		<transition to="alfresco edit" name="BtnSegnalazioneEdit"></transition>
		<transition to="injectList of docs" name="BtnSegnAlfrescoDocEdit"></transition>
		<transition to="Gestione segnalazioni" name="BtnManagement"></transition>
		<transition to="inject" name="row"></transition>
		<transition to="eject" name="BtnNew"></transition>
		<transition to="icd9" name="icd9Popup"></transition>
		<transition to="readComplexTypes" name="BtnFilterType"></transition>
		<transition to="Manage Link Multi" name="BtnLinkMulti"></transition>
		<transition to="home" name="cleanFilters"></transition>
		<transition to="notificheCantieri" name="notifiche"></transition>
	</decision>

	<task-node name="alfresco edit">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/alfresco/edit')}"></action>
		</event>
		<transition to="home"></transition>
	</task-node>

	<super-state name="super-state2">
		<process-state name="Gestione Stati">
			<sub-process name="MOD_home/CORE/PROCESSES/Utility/Segnalazioni/gestioneStatiSegnalazione" binding="late"></sub-process>
			<transition to="../read"></transition>
		</process-state>
	</super-state>

	<decision name="StatesManagement?" expression="#{(button.getMnemonic()=='BtnStatesManagement')}">
		<transition to="clear stateMessage" name="false"></transition>
		<transition to="super-state2/Gestione Stati" name="true"></transition>
	</decision>

	<process-state name="Gestione segnalazioni">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Segnalazioni/gestioneSegnalazioni" binding="late"></sub-process>
		<transition to="eject Entity remain"></transition>
	</process-state>

	<node name="clean restrictions">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.clear()}"></action>
			<action name="2" expression="#{ProtocolloAction.cleanRestrictions()}"></action>
			<action name="3" expression="#{ProtocolloAction.temporary.put('filter', true)}"></action>
			<action name="4" expression="#{PersonAction.eject()}"></action>
			<action name="5" expression="#{PersoneGiuridicheAction.eject()}"></action>
			<action name="6" expression="#{SediAction.eject()}"></action>
			<action name="7" expression="#{EmployeeAction.eject()}"></action>
			<action name="8" expression="#{CantiereAction.eject()}"></action>
			<action name="9" expression="#{ProtocolloAction.initializeComplexTypes()}"></action>
			<action name="10" expression="#{ProtocolloAction.temporary.put('filterType', false)}"></action>
			<action name="11" expression="#{ProtocolloAction.temporary.put('new', true)}"></action>
		</event>
		<transition to="select"></transition>
	</node>

	<node name="inject">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeRoleAction.injectList(Protocollo.richiedenteInterno.employeeRole)}"></action>
		</event>
		<transition to="home"></transition>
	</node>

	<node name="New Segnalazione 2">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.inject(ProtocolloAction.newEntity())}"></action>
			<action name="2" expression="#{ProtocolloAction.setCodeValue('statusCode','STATUS','GENERIC','new')}"></action>
			<action name="3" expression="#{ProtocolloAction.link('author',userBean.getCurrentEmployee())}"></action>
		</event>
		<transition to="Gestione segnalazioni"></transition>
	</node>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.eject()}"></action>
		</event>
		<transition to="New Segnalazione 2"></transition>
	</node>

	<node name="set temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('filter', true)}"></action>
			<action name="2" expression="#{ProtocolloAction.temporary.put('filterType', false)}"></action>
			<action name="3" expression="#{ProtocolloAction.initializeComplexTypes()}"></action>
			<action name="4" expression="#{ProtocolloAction.temporary.put('new', true)}"></action>
			<action name="5" expression="#{EmployeeAction.eject()}"></action>
		</event>
		<transition to="select"></transition>
	</node>

	<process-state name="alfresco document">
		<sub-process name="MOD_Document/CORE/PROCESSES/alfrescoDocument" binding="late"></sub-process>
		<transition to="WORKACCIDENT"></transition>
	</process-state>

	<node name="injectList of docs">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.temporary.put('entity2Link', Protocollo)}"></action>
			<action name="2" expression="#{AlfrescoDocumentAction.injectList(Protocollo.documenti)}"></action>
			<action name="3" expression="#{AlfrescoDocumentAction.findLastChangeInfo(AlfrescoDocumentList.getList())}}"></action>
		</event>
		<transition to="alfresco document"></transition>
	</node>

	<node name="select">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.setFullLike(true)}"></action>
			<action name="2" expression="#{ProtocolloAction.select.add('statusCode.code')}"></action>
			<action name="3" expression="#{ProtocolloAction.select.add('nullifieReason')}"></action>
			<action name="4" expression="#{ProtocolloAction.select.add('cancelReason')}"></action>
			<action name="5" expression="#{ProtocolloAction.select.add('data')}"></action>
			<action name="6" expression="#{ProtocolloAction.select.add('code')}"></action>
			<action name="7" expression="#{ProtocolloAction.select.add('uos.area')}"></action>
			<action name="8" expression="#{ProtocolloAction.select.add('serviceDeliveryLocation.name.giv')}"></action>
			<action name="9" expression="#{ProtocolloAction.select.add('nprotocollo')}"></action>
			<action name="10" expression="#{ProtocolloAction.select.add('applicant')}"></action>
			<action name="11" expression="#{ProtocolloAction.select.add('richiedente.code')}"></action>
			<action name="12" expression="#{ProtocolloAction.select.add('riferimento.code')}"></action>
			<action name="13" expression="#{ProtocolloAction.select.add('richiedenteInterno.name.giv')}"></action>
			<action name="14" expression="#{ProtocolloAction.select.add('richiedenteInterno.name.fam')}"></action>
			<action name="15" expression="#{ProtocolloAction.select.add('richiedenteUtente.name.giv')}"></action>
			<action name="16" expression="#{ProtocolloAction.select.add('richiedenteUtente.name.fam')}"></action>
			<action name="17" expression="#{ProtocolloAction.select.add('richiedenteMedico.name.fam')}"></action>
			<action name="18" expression="#{ProtocolloAction.select.add('richiedenteMedico.name.giv')}"></action>
			<action name="19" expression="#{ProtocolloAction.select.add('richiedenteDitta.denominazione')}"></action>
			<action name="20" expression="#{ProtocolloAction.select.add('riferimentoCantiere.addr.cty')}"></action>
			<action name="21" expression="#{ProtocolloAction.select.add('riferimentoCantiere.addr.str')}"></action>
			<action name="22" expression="#{ProtocolloAction.select.add('riferimentoCantiere.addr.bnr')}"></action>
			<action name="23" expression="#{ProtocolloAction.select.add('riferimentoCantiere.idPnc')}"></action>
			<action name="24" expression="#{ProtocolloAction.select.add('riferimentoCantiere.latitudine')}"></action>
			<action name="25" expression="#{ProtocolloAction.select.add('riferimentoCantiere.longitudine')}"></action>
			<action name="26" expression="#{ProtocolloAction.select.add('riferimentoCantiere.original.internalId')}"></action>
			<action name="27" expression="#{ProtocolloAction.select.add('riferimentoCantiere.pncForced')}"></action>
			<action name="28" expression="#{ProtocolloAction.select.add('riferimentoDitta.denominazione')}"></action>
			<action name="29" expression="#{ProtocolloAction.select.add('riferimentoInterno.name.giv')}"></action>
			<action name="30" expression="#{ProtocolloAction.select.add('riferimentoInterno.name.fam')}"></action>
			<action name="31" expression="#{ProtocolloAction.select.add('riferimentoUtente.name.giv')}"></action>
			<action name="32" expression="#{ProtocolloAction.select.add('riferimentoUtente.name.fam')}"></action>
			<action name="33" expression="#{ProtocolloAction.select.add('riferimentoUtente.mpi')}"></action>
			<action name="34" expression="#{ProtocolloAction.select.add('infortunio.gravita')}"></action>
			<action name="35" expression="#{ProtocolloAction.select.add('infortunio.noteprognosi')}"></action>
			<action name="36" expression="#{ProtocolloAction.select.add('infortunio.ggPrognosi1')}"></action>
			<action name="37" expression="#{ProtocolloAction.select.add('infortunio.ggPrognosi2')}"></action>
			<action name="38" expression="#{ProtocolloAction.select.add('riferimentoEntita.code')}"></action>
			<action name="39" expression="#{ProtocolloAction.select.add('riferimentoEntita.displayName')}"></action>
			<action name="40" expression="#{ProtocolloAction.select.add('riferimentoIMO')}"></action>
			<action name="41" expression="#{ProtocolloAction.select.add('riferimentoTarga')}"></action>
			<action name="42" expression="#{ProtocolloAction.select.add('urgente')}"></action>
			<action name="43" expression="#{ProtocolloAction.select.add('ubicazioneX')}"></action>
			<action name="44" expression="#{ProtocolloAction.select.add('ubicazioneY')}"></action>
			<action name="45" expression="#{ProtocolloAction.select.add('ubicazione.code')}"></action>
			<action name="46" expression="#{TipologiaCantiereAction.equal.put('isActive',true)}"></action>
			<action name="47" expression="#{TipologiaCantiereAction.select.add('type')}"></action>
		</event>
		<transition to="WORKACCIDENT"></transition>
	</node>

	<decision name="WORKACCIDENT" expression="#{ProtocolloAction.temporary.get('workingLine')=='WORKACCIDENT'}">
		<transition to="read" name="false"></transition>
		<transition to="select 4 WORKACCIDENT" name="true"></transition>
	</decision>

	<node name="select 4 WORKACCIDENT">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.select.add('infortunio.gravita')}"></action>
			<action name="2" expression="#{ProtocolloAction.select.add('infortunio.noteprognosi')}"></action>
			<action name="3" expression="#{ProtocolloAction.select.add('infortunio.ggPrognosi2')}"></action>
		</event>
		<transition to="read"></transition>
	</node>

	<process-state name="icd9">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Segnalazioni/filterIcd9" binding="late"></sub-process>
		<transition to="set filter"></transition>
	</process-state>

	<node name="set filter">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.like.remove('malattiaProfessionale.diagCode')}"></action>
			<action name="2" expression="#{not empty CodeValueIcd9 ? ProtocolloAction.like.put('malattiaProfessionale.diagCode.oid',CodeValueIcd9.getOid()) : ''}"></action>
		</event>
		<transition to="home"></transition>
	</node>

	<node name="Close Filter Types">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('filterType', false)}"></action>
		</event>
		<transition to="select"></transition>
	</node>

	<task-node name="Filter Types">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/filter_types_segnalazione')}"></action>
		</event>
		<transition to="selectFilters?"></transition>
	</task-node>

	<process-state name="Manage Link Multi">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Segnalazioni/manageLinkMulti" binding="late"></sub-process>
		<transition to="WORKACCIDENT"></transition>
	</process-state>

	<node name="clear stateMessage">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('stateMessage')}"></action>
		</event>
		<transition to="button?"></transition>
	</node>

	<decision name="selectFilters?" expression="#{(button.getMnemonic())}">
		<transition to="setComplexTypesFilter" name="BtnOK"></transition>
		<transition to="clear temps" name="BtnCancel"></transition>
	</decision>

	<node name="setComplexTypesFilter">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.setComplexTypesFilter(ComplexTypesList)}"></action>
		</event>
		<transition to="clear temps"></transition>
	</node>

	<node name="readComplexTypes">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.setAllowedWorkingLines()}"></action>
			<action name="2" expression="#{ProtocolloAction.readComplexTypes(ProtocolloAction.temporary['complexTypes'])}"></action>
		</event>
		<transition to="Filter Types"></transition>
	</node>

	<node name="eject Entity remain">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.eject()}"></action>
			<action name="2" expression="#{CantiereAction.eject()}"></action>
			<action name="3" expression="#{OperatoreAction.eject()}"></action>
			<action name="4" expression="#{PersoneGiuridicheAction.eject()}"></action>
		</event>
		<transition to="home"></transition>
	</node>

	<node name="clear temps">
		<event type="node-enter">
			<action name="1" expression="#{CodeValueAction.temporary.remove('allowedCodes')}"></action>
			<action name="2" expression="#{CodeValueAction.temporary.remove('allowedDomains')}"></action>
		</event>
		<transition to="WORKACCIDENT"></transition>
	</node>

	<process-state name="notificheCantieri">
		<sub-process name="MOD_Cantieri/PROCESSES/Utility/notifichePnc" binding="late"></sub-process>
		<transition to="home"></transition>
	</process-state>

	<action name="security" expression="admin;direttore;"></action>

</process-definition>