<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="fascicolazioneGestioneTipi">


	<start-state name="start-state1">
		<transition to="coming from?"></transition>
	</start-state>


	<decision name="coming from?" expression="#{(button.getMnemonic())}">
		<transition to="inject new" name="newType"></transition>
		<transition to="pratiche?" name="delType"></transition>
		<transition to="set temporary" name="editType"></transition>
	</decision>

	<node name="not admin">
		<event type="node-enter">
			<action name="2" expression="#{TagFascicoloAction.setDefaultTagType()}"></action>
		</event>
		<transition to="preselect UOC"></transition>
	</node>

	<task-node name="edit type">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_fascicolazione/CORE/FORMS/editFascicolo')}"></action>
		</event>
		<transition to="next"></transition>
	</task-node>

	<decision name="next" expression="#{(button.getMnemonic())}">
		<transition to="refresh" name="BtnBack"></transition>
		<transition to="date end ge date start?" name="BtnSave"></transition>
		<transition to="readUOC" name="BtnUOC"></transition>
		<transition to="read UOS" name="BtnUOS"></transition>
		<transition to="only 1 UOC" name="BtnUOCsingle"></transition>
		<transition to="read ulss" name="BtnULSS"></transition>
		<transition to="gestione cambio tipo" name="BtnChangeType"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="create">
			<event type="node-enter">
				<action name="1" expression="#{TagFascicoloAction.create()}"></action>
			</event>
			<transition to="../edit type"></transition>
		</node>
	</super-state>

	<node name="refresh">
		<event type="node-enter">
			<action name="1" expression="#{(TagFascicolo.internalId gt 0) ? rimPdm2CA.refresh(TagFascicolo) : rimPdm2CA.evict(TagFascicolo)}"></action>
		</event>
		<transition to="set Fascicolo to link pratica"></transition>
	</node>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.eject()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<super-state name="super-state2">
		<node name="delete">
			<event type="node-enter">
				<action name="1" expression="#{TagFascicoloAction.delete()}"></action>
			</event>
			<transition to="../eject"></transition>
		</node>
	</super-state>

	<node name="preselect UOC">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.temporary.remove('errorMessage')}"></action>
		</event>
		<transition to="edit type"></transition>
	</node>

	<node name="readUOC">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.cleanRestrictions()}"></action>
			<action name="2" expression="#{ServiceDeliveryLocationAction.equal.put('isActive',true)}"></action>
			<action name="3" expression="#{ServiceDeliveryLocationAction.equal.put('code.code','uoc')}"></action>
			<action name="4" expression="#{ServiceDeliveryLocationAction.read()}"></action>
			<action name="5" expression="#{TagFascicoloAction.injectList(TagFascicolo.distretti, 'DistrettiList')}"></action>
		</event>
		<transition to="associa UOC"></transition>
	</node>

	<task-node name="associa UOC">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/associa_uoc_fascicolo')}"></action>
		</event>
		<transition to="Save UOC?"></transition>
	</task-node>

	<decision name="Save UOC?" expression="#{(button.getMnemonic())}">
		<transition to="clean only 1 UOC" name="BtnBack"></transition>
		<transition to="add uoc" name="ADDUOC"></transition>
		<transition to="remove ulss" name="DELUOC"></transition>
		<transition to="super-state3/save uoc link" name="BtnBack"></transition>
	</decision>

	<node name="read UOS">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.cleanRestrictions()}"></action>
			<action name="2" expression="#{ServiceDeliveryLocationAction.equal.put('code.code','uos')}"></action>
			<action name="3" expression="#{ServiceDeliveryLocationAction.equal.put('isActive',true)}"></action>
			<action name="4" expression="#{TagFascicoloAction.addFilterForUos()}"></action>
			<action name="5" expression="#{ServiceDeliveryLocationAction.read()}"></action>
			<action name="6" expression="#{TagFascicoloAction.injectList(TagFascicolo.linee, 'LineeList')}"></action>
		</event>
		<transition to="associa UOS"></transition>
	</node>

	<task-node name="associa UOS">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_fascicolazione/CORE/FORMS/fascicolo_associa_uos')}"></action>
		</event>
		<transition to="decision1"></transition>
	</task-node>

	<decision name="decision1" expression="#{(button.getMnemonic())}">
		<transition to="super-state4/save uos link" name="BtnBack"></transition>
		<transition to="remove uos" name="DELUOS"></transition>
		<transition to="add uos" name="ADDUOS"></transition>
	</decision>

	<task-node name="delete confirmation">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="really delete?"></transition>
	</task-node>

	<decision name="really delete?" expression="#{(button.getMnemonic())}">
		<transition to="end-state1" name="BtnCancel"></transition>
		<transition to="super-state2/delete" name="BtnDel"></transition>
	</decision>

	<node name="add uoc">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.addDistretto(ServiceDeliveryLocation)}"></action>
		</event>
		<transition to="readUOC"></transition>
	</node>

	<node name="remove ulss">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.removeDistretto(Distretti)}"></action>
		</event>
		<transition to="readUOC"></transition>
	</node>

	<super-state name="super-state3">
		<node name="save uoc link">
			<event type="node-enter">
				<action name="1" expression="#{(TagFascicoloAction.checkErrors()) ? TagFascicoloAction.create() : ''}"></action>
			</event>
			<transition to="../preselect UOC"></transition>
		</node>
	</super-state>

	<super-state name="super-state4">
		<node name="save uos link">
			<event type="node-enter">
				<action name="1" expression="#{TagFascicoloAction.checkErrors() ? TagFascicoloAction.create() : TagFascicoloAction.temporary.put('ciao','ciao')}"></action>
			</event>
			<transition to="../preselect UOC"></transition>
		</node>
	</super-state>

	<node name="add uos">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.addLinea(ServiceDeliveryLocation)}"></action>
		</event>
		<transition to="read UOS"></transition>
	</node>

	<node name="remove uos">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.removeLinea(ServiceDeliveryLocation)}"></action>
		</event>
		<transition to="read UOS"></transition>
	</node>

	<decision name="requirements satisfied?" expression="#{(TagFascicoloAction.checkErrors())}">
		<transition to="edit type" name="false"></transition>
		<transition to="super-state1/create" name="true"></transition>
	</decision>

	<decision name="admin?" expression="#{Param['p.fascicolazione.editFascicolo.tipoFascicolo'].value}">
		<transition to="preselect UOC" name="true"></transition>
		<transition to="not admin" name="false"></transition>
	</decision>

	<node name="inject new">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.eject()}"></action>
			<action name="2" expression="#{TagFascicoloAction.inject(TagFascicoloAction.newEntity())}"></action>
		</event>
		<transition to="preselect UOC"></transition>
	</node>

	<node name="set Fascicolo to link pratica">
		<event type="node-enter">
			<action name="1" expression="#{!empty TagFascicolo and TagFascicolo.internalId gt 0 ? TagFascicoloAction.temporary.put('newFascicoloToLink', TagFascicolo) : TagFascicoloAction.temporary.remove('newFascicoloToLink')}"></action>
		</event>
		<transition to="eject"></transition>
	</node>

	<node name="only 1 UOC">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.temporary.put('onlySingleUoc',true)}"></action>
		</event>
		<transition to="readUOC"></transition>
	</node>

	<node name="clean only 1 UOC">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.temporary.remove('onlySingleUoc')}"></action>
		</event>
		<transition to="preselect UOC"></transition>
	</node>

	<node name="read ulss">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.cleanRestrictions()}"></action>
			<action name="2" expression="#{ServiceDeliveryLocationAction.equal.put('code.code','ulss')}"></action>
			<action name="3" expression="#{ServiceDeliveryLocationAction.equal.put('isActive',true)}"></action>
			<action name="4" expression="#{ServiceDeliveryLocationAction.read()}"></action>
			<action name="5" expression="#{TagFascicoloAction.injectList(TagFascicolo.ulss, 'UlssList')}"></action>
		</event>
		<transition to="associa ULSS fasc"></transition>
	</node>

	<task-node name="associa ULSS fasc">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/associa_ulss_fascicolo')}"></action>
		</event>
		<transition to="save ULSS?"></transition>
	</task-node>

	<decision name="save ULSS?" expression="#{button.mnemonic}">
		<transition to="super-state5/save ulss link" name="BtnBack"></transition>
		<transition to="addUlss" name="ADDULSS"></transition>
		<transition to="delUlss" name="DELULSS"></transition>
	</decision>

	<super-state name="super-state5">
		<node name="save ulss link">
			<event type="node-enter">
				<action name="1" expression="#{TagFascicoloAction.checkErrors() ? TagFascicoloAction.create() : TagFascicoloAction.temporary.put('ciao','ciao')}"></action>
			</event>
			<transition to="../preselect UOC"></transition>
		</node>
	</super-state>

	<node name="addUlss">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.addUlss(ServiceDeliveryLocation)}"></action>
		</event>
		<transition to="read ulss"></transition>
	</node>

	<node name="delUlss">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.removeUlss(ServiceDeliveryLocation)}"></action>
		</event>
		<transition to="read ulss"></transition>
	</node>

	<task-node name="undeletable">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/fascicoloUndeletable')}"></action>
		</event>
		<transition to="end-state1"></transition>
	</task-node>

	<decision name="pratiche?" expression="#{!empty TagFascicolo.getProcpratiche() and TagFascicolo.getProcpratiche().size() gt 0}">
		<transition to="delete confirmation" name="false"></transition>
		<transition to="undeletable" name="true"></transition>
	</decision>

	<node name="set temporary">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.temporary.put('prevType',TagFascicolo.tagType)}"></action>
		</event>
		<transition to="preselect UOC"></transition>
	</node>

	<process-state name="gestione cambio tipo">
		<sub-process name="MOD_fascicolazione/CORE/PROCESSES/fascicolazioneGestioneCambioTipi" binding="late"></sub-process>
		<transition to="edit type"></transition>
	</process-state>

	<node name="refesh">
		<event type="node-enter">
			<action name="1" expression="#{TagFascicoloAction.temporary.put('errorMessage',&quot;Modifica annullata.&lt;br/&gt;La data di fine validità deve essere successiva all'inizio validità. &quot;)}"></action>
			<action name="2" expression="#{TagFascicoloAction.refresh()}"></action>
		</event>
		<transition to="edit type"></transition>
	</node>

	<decision name="date end ge date start?" expression="#{TagFascicolo.endValidity ne null ? (TagFascicolo.endValidity ge TagFascicolo.startValidity ? true : false ) : true}">
		<transition to="refesh" name="false"></transition>
		<transition to="requirements satisfied?" name="true"></transition>
	</decision>


	<end-state name="end-state1"></end-state>


</process-definition>