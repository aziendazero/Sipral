<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="manageSIPerSedi">


	<start-state name="start-state1">
		<transition to="backup sede"></transition>
	</start-state>


	<node name="backup sede">
		<event type="node-enter">
			<action name="1" expression="#{SediAction.temporary.put('SelectedSede',Sedi)}"></action>
		</event>
		<transition to="button value?"></transition>
	</node>

	<node name="reinject selected sede">
		<event type="node-enter">
			<action name="1" expression="#{SediAction.eject()}"></action>
			<action name="2" expression="#{SediAction.inject(SediAction.temporary.get('SelectedSede'))}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<decision name="button value?" expression="#{button.value}">
		<transition to="Copy from parent" name="BtnSINew"></transition>
		<transition to="inject si per sedi" name="BtnSIMng"></transition>
		<transition to="super-state3/delete si per sedi" name="BtnSIDel"></transition>
	</decision>

	<node name="Copy from parent">
		<event type="node-enter">
			<action name="1" expression="#{SediInstallazioneAction.inject(SediInstallazioneAction.newEntity())}"></action>
			<action name="2" expression="#{SediInstallazioneAction.copyFromSede(Sedi)}"></action>
			<action name="3" expression="#{ImpiantoAction.injectEmptyList()}"></action>
		</event>
		<transition to="Edit SI"></transition>
	</node>

	<task-node name="Edit SI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Company/CORE/FORMS/create_sede_installazione')}"></action>
		</event>
		<transition to="form button?"></transition>
	</task-node>

	<decision name="form button?" expression="#{button.mnemonic}">
		<transition to="eject" name="BtnBack"></transition>
		<transition to="sede only install?" name="BtnSave"></transition>
		<transition to="backup si and pg" name="BtnImpAdd"></transition>
		<transition to="backup si and pg" name="BtnImpDel"></transition>
		<transition to="backup si and pg" name="BtnImpMng"></transition>
	</decision>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{(SediInstallazione.internalId gt 0 and rimPdm2CA.contains(SediInstallazione)) ? '' : (SediAction.temporary.get('SedeSelezionata') ne null ? SediAction.inject(SediAction.temporary.get('SedeSelezionata')) : '')}"></action>
			<action name="2" expression="#{SediAction.refresh()}"></action>
			<action name="3" expression="#{SediInstallazioneAction.eject()}"></action>
			<action name="4" expression="#{SediInstallazioneAction.ejectList()}"></action>
			<action name="5" expression="#{ImpiantoAction.eject()}"></action>
			<action name="6" expression="#{ImpiantoAction.ejectList()}"></action>
			<action name="7" expression="#{ImpiantoAction.cleanRestrictions()}"></action>
		</event>
		<transition to="reinject selected sede"></transition>
	</node>

	<decision name="sede only install?" expression="#{Sedi.soloInstImp==true}">
		<transition to="super-state1/save sede only install" name="true"></transition>
		<transition to="Set Sede" name="false"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="save sede only install">
			<event type="node-enter">
				<action name="1" expression="#{SediAction.create()}"></action>
				<action name="2" expression="#{Sedi.addSediInstallazione(SediInstallazione)}"></action>
			</event>
			<transition to="../Set Sede"></transition>
		</node>
	</super-state>

	<node name="Set Sede">
		<event type="node-enter">
			<action name="1" expression="#{SediInstallazione.setSede(Sedi)}"></action>
		</event>
		<transition to="super-state2/save si per sedi"></transition>
	</node>

	<super-state name="super-state2">
		<node name="save si per sedi">
			<event type="node-enter">
				<action name="1" expression="#{SediInstallazioneAction.create()}"></action>
				<action name="2" expression="#{Sedi.setSedeAddebito(SediAction.temporary['sedeAdd'])}"></action>
			</event>
			<transition to="../Edit SI"></transition>
		</node>
	</super-state>

	<node name="inject si per sedi">
		<event type="node-enter">
			<action name="1" expression="#{SediInstallazioneAction.inject(SediInstallazionePerSedi)}"></action>
		</event>
		<transition to="injetc Impianti"></transition>
	</node>

	<node name="injetc Impianti">
		<event type="node-enter">
			<action name="1" expression="#{ImpiantoAction.equal.put('sedeInstallazione',SediInstallazione)}"></action>
			<action name="2" expression="#{ImpiantoAction.read()}"></action>
			<action name="3" expression="#{empty Sedi ? SediAction.inject(SediAction.temporary.get('SelectedSede')) : ''}"></action>
		</event>
		<transition to="Edit SI"></transition>
	</node>

	<super-state name="super-state3">
		<node name="delete si per sedi">
			<event type="node-enter">
				<action name="1" expression="#{SediInstallazionePerSediAction.create()}"></action>
				<action name="2" expression="#{SediInstallazionePerSediAction.unLink('sede',Sedi)}"></action>
			</event>
			<transition to="../eject"></transition>
		</node>
	</super-state>

	<process-state name="Manage Impianti">
		<sub-process name="MOD_Company/CORE/PROCESSES/manageImpianti" binding="late"></sub-process>
		<transition to="restore si and pg"></transition>
	</process-state>

	<node name="backup si and pg">
		<event type="node-enter">
			<action name="1" expression="#{SediInstallazioneAction.temporary.put('currentSI', SediInstallazione)}"></action>
			<action name="2" expression="#{SediInstallazioneAction.temporary.put('currentPG', PersoneGiuridiche)}"></action>
		</event>
		<transition to="Manage Impianti"></transition>
	</node>

	<node name="restore si and pg">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.inject(SediInstallazioneAction.temporary.get('currentPG'))}"></action>
			<action name="2" expression="#{SediInstallazioneAction.inject(SediInstallazioneAction.temporary.get('currentSI'))}"></action>
		</event>
		<transition to="injetc Impianti"></transition>
	</node>


	<end-state name="end-state1"></end-state>


</process-definition>