<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="gestioneProvvedimenti">


	<start-state name="start-state1">
		<transition to="inject prov activity"></transition>
	</start-state>


	<task-node name="Create Provvedimenti UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/provvedimenti_new')}"></action>
		</event>
		<transition to="Button1?"></transition>
	</task-node>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{GruppiAction.refreshGroups(Provvedimenti)}"></action>
			<action name="2" expression="#{ProvvedimentiAction.refresh()}"></action>
			<action name="3" expression="#{ArticoliAction.refresh(ArticoliList.list)}"></action>
			<action name="4" expression="#{ProvvedimentiAction.eject()}"></action>
			<action name="5" expression="#{SoggettoAction.eject()}"></action>
			<action name="6" expression="#{SoggettoAction.ejectList()}"></action>
			<action name="7" expression="#{CaricheAction.eject()}"></action>
			<action name="8" expression="#{CaricheAction.ejectList()}"></action>
			<action name="9" expression="#{ProvvedimentiAction.eject()}"></action>
			<action name="10" expression="#{ProvvedimentiAction.ejectList()}"></action>
			<action name="11" expression="#{ArticoliAction.eject()}"></action>
			<action name="12" expression="#{ArticoliAction.ejectList()}"></action>
			<action name="13" expression="#{PersoneArticoliAction.ejectList('PersoneArticoli03List')}"></action>
			<action name="14" expression="#{PersoneArticoliAction.ejectList('PersoneArticoli06List')}"></action>
			<action name="15" expression="#{Iter758Action.eject()}"></action>
			<action name="16" expression="#{DisposizioniAction.eject()}"></action>
			<action name="17" expression="#{SospensioneEx14Action.eject()}"></action>
			<action name="18" expression="#{SospensioneEx14Action.ejectList()}"></action>
			<action name="19" expression="#{SospensioneEx14Action.temporary.clear()}"></action>
			<action name="20" expression="#{not empty ProvvedimentiAction.temporary['attivita'] ? AttivitaAction.inject(ProvvedimentiAction.temporary['attivita']) : ''}"></action>
			<action name="21" expression="#{ProvvedimentiAction.temporary.remove('attivita')}"></action>
		</event>
		<transition to="end-state2"></transition>
	</node>

	<node name="New Entity">
		<event type="node-enter">
			<action name="1" expression="#{ProvvedimentiAction.inject(ProvvedimentiAction.newEntity())}"></action>
			<action name="2" expression="#{ProvvedimentiAction.setCodeValue('statusCode','PHIDIC','Status','active')}"></action>
			<action name="3" expression="#{ProvvedimentiAction.setCodeValue('type','PHIDIC','PevType','758')}"></action>
			<action name="4" expression="#{ProvvedimentiAction.link('soggetto',Soggetto)}"></action>
			<action name="5" expression="#{ProvvedimentiAction.link('soggettoInSolido',SoggettoAction.newEntity())}"></action>
			<action name="6" expression="#{SoggettoAction.eject()}"></action>
			<action name="7" expression="#{SospensioneEx14Action.temporary.put('esitoSospensione',vocabularies.getCodeValue('PHIDIC','resultSosp','ado','C'))}"></action>
		</event>
		<transition to="isSoggettoUtente?"></transition>
	</node>

	<node name="Clone Provvedimento">
		<event type="node-enter">
			<action name="1" expression="#{ProvvedimentiAction.inject(ProvvedimentiAction.copy(Provvedimenti))}"></action>
			<action name="2" expression="#{ProvvedimentiAction.setNumero(Procpratiche.uoc)}"></action>
		</event>
		<transition to="super-state8/Save Provvedimento"></transition>
	</node>

	<task-node name="Del PopUp 1">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="Button4?"></transition>
	</task-node>

	<decision name="Button4?" expression="#{(button.getMnemonic())}">
		<transition to="eject" name="BtnCancel"></transition>
		<transition to="super-state3/Delete" name="BtnDel"></transition>
	</decision>

	<super-state name="super-state3">
		<node name="Delete">
			<event type="node-enter">
				<action name="1" expression="#{Provvedimenti.setIsActive(false)}"></action>
				<action name="2" expression="#{ProvvedimentiAction.decreaseProvvedimentiCounter()}"></action>
				<action name="3" expression="#{ProvvedimentiAction.create()}"></action>
			</event>
			<transition to="../refresh list"></transition>
		</node>
	</super-state>

	<decision name="Button1?" expression="#{(button.getMnemonic())}">
		<transition to="eject" name="BtnBack"></transition>
		<transition to="Articoli Management" name="BtnArtNew"></transition>
		<transition to="Articoli Management" name="BtnArtMng"></transition>
		<transition to="Articoli Management" name="BtnArtDel"></transition>
		<transition to="Nuova carica" name="BtnPosNew"></transition>
		<transition to="Groups Management" name="BtnArtGrp"></transition>
		<transition to="PopUp Internal Positions" name="BtnPosInternal"></transition>
		<transition to="Copia data CIPMMD" name="BtnCopyCIPMMD"></transition>
		<transition to="Obbligati In Solido" name="BtnSoggettoInSolido"></transition>
		<transition to="Copia data CIPM" name="BtnCopyCIPM"></transition>
		<transition to="Update Scadenze Gruppo" name="BtnSave"></transition>
		<transition to="operations" name="operation"></transition>
		<transition to="injectList of Provvedimenti docs" name="BtnProvvedimentiDocs"></transition>
		<transition to="PersoneArticoliManagement" name="BtnPersNew06"></transition>
		<transition to="PersoneArticoliManagement" name="BtnPersMng"></transition>
		<transition to="PersoneArticoliManagement" name="BtnPersDel"></transition>
		<transition to="PersoneArticoliManagement" name="BtnPersNew03"></transition>
	</decision>

	<super-state name="super-state8">
		<node name="Save Provvedimento">
			<event type="node-enter">
				<action name="1" expression="#{ProvvedimentiAction.setNumero(Procpratiche.uoc)}"></action>
				<action name="2" expression="#{ProvvedimentiAction.increaseProvvedimentiCounter()}"></action>
				<action name="3" expression="#{Procpratiche.addProvvedimenti(Provvedimenti)}"></action>
				<action name="4" expression="#{ProvvedimentiAction.link('procpratiche',Procpratiche)}"></action>
				<action name="5" expression="#{Attivita.addProvvedimenti(Provvedimenti)}"></action>
				<action name="6" expression="#{ProvvedimentiAction.link('attivita',Attivita)}"></action>
				<action name="7" expression="#{Procpratiche.addAttivita(Attivita)}"></action>
				<action name="8" expression="#{AttivitaAction.link('procpratiche',Procpratiche)}"></action>
				<action name="9" expression="#{ProcpraticheAction.create()}"></action>
			</event>
			<transition to="../BtnSave?"></transition>
		</node>
	</super-state>

	<decision name="Button5?" expression="#{(button.getMnemonic())}">
		<transition to="Manage Type 1" name="BtnProvvMng"></transition>
		<transition to="Check Articoli" name="BtnProvvDel"></transition>
		<transition to="Clone Provvedimento" name="BtnProvvCln"></transition>
		<transition to="inject2" name="BtnProvvInfo"></transition>
		<transition to="New Entity" name="BtnProvvNew"></transition>
	</decision>

	<decision name="isSoggettoUtente?" expression="#{Provvedimenti.soggetto ne null and Provvedimenti.soggetto.code.code.equals('Utente')}">
		<transition to="Create Provvedimenti UI" name="true"></transition>
		<transition to="isSoggettoDitta?" name="false"></transition>
	</decision>

	<decision name="isSoggettoDitta?" expression="#{Provvedimenti.soggetto ne null and Provvedimenti.soggetto.code.code.equals('Ditta') and Provvedimenti.soggetto.ditta ne null}">
		<transition to="isSedeSelected?" name="true"></transition>
		<transition to="Create Provvedimenti UI" name="false"></transition>
	</decision>

	<node name="read cariche">
		<event type="node-enter">
			<action name="1" expression="#{CaricheAction.cleanRestrictions()}"></action>
			<action name="2" expression="#{CaricheAction.equal.put('sede.internalId',(empty Sedi?-1:Sedi.internalId))}"></action>
			<action name="3" expression="#{CaricheAction.select.add('carica.displayName')}"></action>
			<action name="4" expression="#{CaricheAction.select.add('sediPersone.name.fam')}"></action>
			<action name="5" expression="#{CaricheAction.select.add('sediPersone.name.giv')}"></action>
			<action name="6" expression="#{CaricheAction.select.add('sediPersone.fiscalCode')}"></action>
			<action name="7" expression="#{CaricheAction.select.add('dataInizio')}"></action>
			<action name="8" expression="#{CaricheAction.select.add('dataFine')}"></action>
			<action name="9" expression="#{CaricheAction.read()}"></action>
		</event>
		<transition to="Create Provvedimenti UI"></transition>
	</node>

	<process-state name="Articoli Management">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/gestioneArticoli" binding="late"></sub-process>
		<transition to="Manage Type 1"></transition>
	</process-state>

	<decision name="Check Articoli" expression="#{(Provvedimenti.getArticoli() ne null and Provvedimenti.getArticoli().size()&gt;0)}">
		<transition to="Del PopUp 1" name="false"></transition>
		<transition to="Del PopUp 2" name="true"></transition>
	</decision>

	<task-node name="Del PopUp 2">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Provvedimento_alert')}"></action>
		</event>
		<transition to="Button4?"></transition>
	</task-node>

	<task-node name="Info Provvedimento">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/provvedimenti_details')}"></action>
		</event>
		<transition to="eject"></transition>
	</task-node>

	<node name="inject2">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoAction.inject(Provvedimenti.soggetto)}"></action>
			<action name="2" expression="#{ArticoliAction.injectList(Provvedimenti.articoli)}"></action>
			<action name="3" expression="#{ArticoliAction.injectList(Provvedimenti.articoli)}"></action>
			<action name="4" expression="#{MiglioramentiAction.injectList(Provvedimenti.miglioramenti,'MiglioramentiList')}"></action>
		</event>
		<transition to="Info Provvedimento"></transition>
	</node>

	<decision name="isSedeSelected?" expression="#{Provvedimenti.soggetto.sede ne null}">
		<transition to="inject sede" name="true"></transition>
		<transition to="read cariche" name="false"></transition>
	</decision>

	<node name="inject sede">
		<event type="node-enter">
			<action name="1" expression="#{SediAction.inject(Provvedimenti.soggetto.sede)}"></action>
		</event>
		<transition to="read cariche"></transition>
	</node>

	<decision name="BtnSave?" expression="#{(button.getMnemonic()=='BtnSave' or button.getMnemonic()=='BtnPosAdd')}">
		<transition to="eject" name="false"></transition>
		<transition to="Manage Type 2" name="true"></transition>
	</decision>

	<process-state name="Nuova carica">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/gestioneCaricaEsterna" binding="late"></sub-process>
		<transition to="Manage Type 2"></transition>
	</process-state>

	<process-state name="Manage Type 1">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/manageType" binding="late"></sub-process>
		<transition to="isSoggettoUtente?"></transition>
	</process-state>

	<process-state name="Manage Type 2">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/manageType" binding="late"></sub-process>
		<transition to="Create Provvedimenti UI"></transition>
	</process-state>

	<process-state name="Groups Management">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/groupsManagement" binding="late"></sub-process>
		<transition to="Create Provvedimenti UI"></transition>
	</process-state>

	<task-node name="PopUp Internal Positions">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Add_internal_positions')}"></action>
		</event>
		<transition to="Add?"></transition>
	</task-node>

	<decision name="Add?" expression="#{(button.getMnemonic()=='BtnPosAdd')}">
		<transition to="Create Provvedimenti UI" name="false"></transition>
		<transition to="super-state2/Crea persona" name="true"></transition>
	</decision>

	<node name="Copia data CIPM">
		<event type="node-enter">
			<action name="1" expression="#{Articoli.gruppo.setComunicazioneInottemperanzaPM(Articoli.gruppo.comunicazioneInottemperanza)}"></action>
		</event>
		<transition to="Create Provvedimenti UI"></transition>
	</node>

	<node name="Copia data CIPMMD">
		<event type="node-enter">
			<action name="1" expression="#{Articoli.gruppo.setOttemperanzaModiDiversiPM(Articoli.gruppo.ottemperanzaModiDiversi)}"></action>
		</event>
		<transition to="Create Provvedimenti UI"></transition>
	</node>

	<process-state name="Obbligati In Solido">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/linkSoggettoInSolido" binding="late"></sub-process>
		<transition to="Manage Type 2"></transition>
	</process-state>

	<process-state name="operations">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Generico/operations" binding="late"></sub-process>
		<transition to="Create Provvedimenti UI"></transition>
	</process-state>

	<node name="Update Scadenze Gruppo">
		<event type="node-enter">
			<action name="1" expression="#{GruppiAction.updateScadenze(Provvedimenti)}"></action>
		</event>
		<transition to="check sosp"></transition>
	</node>

	<node name="inject prov activity">
		<event type="node-enter">
			<action name="1" expression="#{ProvvedimentiAction.temporary.put('attivita',Attivita)}"></action>
			<action name="2" expression="#{not empty Provvedimenti.attivita ? AttivitaAction.inject(Provvedimenti.attivita) : ''}"></action>
		</event>
		<transition to="Button5?"></transition>
	</node>

	<node name="refresh list">
		<event type="node-enter">
			<action name="1" expression="#{ProvvedimentiAction.read()}"></action>
		</event>
		<transition to="eject"></transition>
	</node>

	<node name="injectList of Provvedimenti docs">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.temporary.put('entity2Link', Provvedimenti)}"></action>
			<action name="2" expression="#{AlfrescoDocumentAction.injectList(Provvedimenti.documenti)}"></action>
		</event>
		<transition to="get lastchange"></transition>
	</node>

	<node name="get lastchange">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.findLastChangeInfo(AlfrescoDocumentList.getList())}}"></action>
			<action name="2" expression="#{Provvedimenti.type.code == 'ex14' and not empty Provvedimenti.articoli ? PersoneArticoliAction.injectPersoneArticoliProvvedimento(Provvedimenti.articoli.get(0)) : ''}"></action>
			<action name="3" expression="#{Provvedimenti.type.code == 'ex14' ? ProvvedimentiAction.injectArticoliProvvedimentoSosp(ArticoliList.list) : ''}"></action>
		</event>
		<transition to="alfresco document"></transition>
	</node>

	<process-state name="alfresco document">
		<sub-process name="MOD_Document/CORE/PROCESSES/alfrescoDocument" binding="late"></sub-process>
		<transition to="Create Provvedimenti UI"></transition>
	</process-state>

	<super-state name="super-state1">
		<node name="Link Carica">
			<event type="node-enter">
				<action name="1" expression="#{CaricheAction.create()}"></action>
				<action name="2" expression="#{CaricheAction.link('provvedimenti',Provvedimenti)}"></action>
				<action name="3" expression="#{Provvedimenti.setCarica(Cariche)}"></action>
				<action name="4" expression="#{SediPersoneAction.inject(Cariche.sediPersone)}"></action>
				<action name="5" expression="#{SediPersoneAction.link('person',Person)}"></action>
			</event>
			<transition to="../Manage Type 1"></transition>
		</node>
	</super-state>

	<super-state name="super-state2">
		<node name="Crea persona">
			<event type="node-enter">
				<action name="1" expression="#{CaricheAction.managePerson(Cariche)}"></action>
				<action name="2" expression="#{PersonAction.create()}"></action>
			</event>
			<transition to="../super-state1/Link Carica"></transition>
		</node>
	</super-state>

	<process-state name="PersoneArticoliManagement">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/gestionePersoneArticoli" binding="late"></sub-process>
		<transition to="Manage Type 1"></transition>
	</process-state>

	<decision name="check sosp" expression="#{ProvvedimentiAction.checkIfSospensione()}">
		<transition to="super-state8/Save Provvedimento" name="true"></transition>
		<transition to="BtnSave?" name="false"></transition>
	</decision>


	<end-state name="end-state2"></end-state>	

</process-definition>
