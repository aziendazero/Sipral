<?xml version="1.0" encoding="UTF-8"?>
<process-definition  xmlns=""  name="PHI_DIARIO.war/processes/MOD_Medical_Diary/CORE/Medical_diary">
<description>no description</description>
		
	<start-state name="start-state">
		
		<transition to="isEncounterSelected?"></transition>
	</start-state>	
		
		

	<task-node name="Medical Diary UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
		
		

			<action expression="#{ViewManager.setViewId('/MOD_Medical_Diary/CORE/FORMS/f_medical_diary')}" name="main"></action>
		</event>
		<transition to="Exit?"></transition>		
	</task-node>


	<task-node name="Create Note UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
		
		

			<action expression="#{ViewManager.setViewId('/MOD_Medical_Diary/CORE/FORMS/f_create_note')}" name="main"></action>
		</event>
		<transition to="Create Note?"></transition>		
	</task-node>


	<task-node name="Show Note">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
		
		

			<action expression="#{ViewManager.setViewId('/MOD_Medical_Diary/CORE/FORMS/f_show_note')}" name="main"></action>
		</event>
		<transition to="Read Notes"></transition>		
	</task-node>

	
	<node name="Read Notes">
		<event type="node-enter">
			<action name="1" expression="#{AnnotationAction.eject()}"></action>
			<action name="2" expression="#{AnnotationAction.equal.put('patientEncounter',PatientEncounter)}"></action>
			<action name="3" expression="#{AnnotationAction.orderBy.put('availabilityTime','descending')}"></action>
			<action name="4" expression="#{AnnotationAction.read()}"></action>
		</event>
		<transition to="Medical Diary UI"></transition>
	</node>
			
	
	
	<node name="Inject Employee BL">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeAction.inject(userBean.currentEmployee)}"></action>
		</event>
		<transition to="Inject WARD"></transition>
	</node>
			
	
	
	<node name="eject note">
		<event type="node-enter">
			<action name="1" expression="#{AnnotationAction.eject()}"></action>
		</event>
		<transition to="Read Notes"></transition>
	</node>
			
	
	
	<node name="Inject WARD">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.inject(PatientEncounter.assignedSDL)}"></action>
		</event>
		<transition to="show only valid"></transition>
	</node>
			
	
	 
	<decision name="isEncounterSelected?" expression="#{!empty PatientEncounter}">
	<transition to="Search Encounter" name="false"></transition>
	<transition to="Inject Employee BL" name="true"></transition>
	
	</decision>
	 
	 
	 
	<decision name="Create Note?" expression="#{(button.getMnemonic())}">
	<transition to="super-state1/Create Note" name="save"></transition>
	<transition to="eject note" name="back"></transition>
	
	</decision>
	 
	 
	 
	<decision name="Exit?" expression="#{(button.getMnemonic())}">
	<transition to="Show Note" name="show"></transition>
	<transition to="eject Annotation" name="new"></transition>
	<transition to="end-state" name="back"></transition>
	<transition to="Read Notes" name="read"></transition>
	<transition to="super-state2/DeleteNote" name="canc"></transition>
		<transition to="sign pdf UI" name="SIGN"></transition>
	
	</decision>
	 
	 
	<process-state name="Search Encounter">
	
	<sub-process name="MOD_ADT/CORE/PROCESSES/Encounter/Search" binding="late"></sub-process>
	<transition to="Inject Employee BL"></transition>
	</process-state>
	 
	 
	
	<super-state name="super-state2">
		
		
	
	<process-state name="DeleteNote">
	
	<sub-process name="MOD_Medical_Diary/CORE/PROCESSES/Delete_note" binding="late"></sub-process>
	<transition to="../Read Notes"></transition>
		
	</process-state>	
		
	</super-state>
	
	
	
	<super-state name="super-state1">
		
		
	
	
	<node name="Create Note">
		<event type="node-enter">
				<action name="1" expression="#{AnnotationAction.link('assignedSDL',ServiceDeliveryLocation)}"></action>
				<action name="2" expression="#{AnnotationAction.link('author',userBean.currentEmployee)}"></action>
				<action name="3" expression="#{AnnotationAction.link('patientEncounter',PatientEncounter)}"></action>
				<action name="4" expression="#{Annotation.setAvailabilityTime(function.currentDateTime())}"></action>
				<action name="5" expression="#{AnnotationAction.create()}"></action>
			</event>
		<transition to="../Read Notes"></transition>
	</node>	
		
	</super-state>

	<node name="eject Annotation">
		<event type="node-enter">
			<action name="1" expression="#{AnnotationAction.eject()}"></action>
			<action name="2" expression="#{Annotation.setAvailabilityTime(function.currentDateTime())}"></action>
		</event>
		<transition to="Create Note UI"></transition>
	</node>

	<node name="show only valid">
		<event type="node-enter">
			<action name="1" expression="#{AnnotationAction.equal.put('isActive',true)}"></action>
		</event>
		<transition to="Read Notes"></transition>
	</node>

	<task-node name="sign pdf UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Medical_Diary/CORE/FORMS/signature')}"></action>

		</event>
		<transition to="Read Notes"></transition>
	</task-node>
	
	
	
	<end-state name="end-state">
	</end-state>
	
	

 <action name="security" expression=""></action>

</process-definition>

