<?xml version="1.0" encoding="UTF-8"?>
<process-definition  xmlns=""  name="Manage All">
<description>no description</description>
		
	<start-state name="start-state1">
		<transition to="node1"></transition>
	</start-state>	
		
		

	<task-node name="manage HBS UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
		
		
			<action expression="#{ViewManager.setViewId('/MOD_HBS/CORE/FORMS/f_HBS_management')}" name="main"></action>
		</event>
		<transition to="sdloc type to save?"></transition>		
	</task-node>

	
	<decision name="sdloc type to save?" expression="#{(button.getMnemonic())}">
	<transition to="super-state5/delASL" name="delASL"></transition>
		<transition to="manage HBS UI" name="NEXT"></transition>
		<transition to="ReadLocation" name="ADDLOC"></transition>
		<transition to="eject emp" name="ADDEMPWARDUP"></transition>
		<transition to="super-state4/save SDL" name="saveUOC"></transition>
		<transition to="super-state4/save SDL" name="saveUOS"></transition>
		<transition to="Search ASL" name="addASL"></transition>
		<transition to="FIXME CHANGE THIS, needed by ManageMulti to show save button, change and refractor!" name="EDITEmployee"></transition>
		<transition to="popup upload logo" name="EDITLogo"></transition>
		<transition to="set temp" name="AddDir"></transition>
		<transition to="set temp 2 CA" name="AddRDP_cantiere"></transition>
		<transition to="set temp 3 AZ" name="AddRDP_aziende"></transition>
		<transition to="set temp 2 AM" name="AddRDP_amianto"></transition>
		<transition to="set temp 2" name="AddRDP"></transition>
		<transition to="Gestione Scadenze" name="BtnScadenze"></transition>
		<transition to="super-state4/save SDL" name="saveARPAV"></transition>
		<transition to="Copy Telecom" name="saveULSS"></transition>
	
	</decision>
	 
	 
	
	<super-state name="super-state4">
		
		
	
	
	<node name="save SDL">
		<event type="node-enter">
		
		
			<action expression="#{ServiceDeliveryLocationAction.create()}" name="main"></action>
		</event>
			<transition to="../manage HBS UI"></transition>
	</node>
			
		
	
		
	</super-state>
	
	
	
	<super-state name="super-state3">
		<node name="set RDP">
			<event type="node-enter">
				<action name="1" expression="#{OperatoreAction.create()}"></action>
				<action name="2" expression="#{(ServiceDeliveryLocationAction.temporary.get('RDPtype')==null) ? OperatoreAction.link('rdpOf',ServiceDeliveryLocation) : ''}"></action>
			</event>
			<transition to="../remove tmp" name=""></transition>
		</node>
		<node name="del RDP">
			<event type="node-enter">
				<action name="1" expression="#{OperatoreAction.delRDP(ServiceDeliveryLocation)}"></action>
			</event>
			<transition to="set RDP"></transition>
		</node>
	</super-state>

	<node name="node1">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.put('singleDianoemaCode',ServiceDeliveryLocation.externalCostCenter.get(0))}"></action>
		</event>
		<transition to="manage HBS UI"></transition>
	</node>

	<super-state name="super-state5">
		<node name="delASL">
			<event type="node-enter">
				<action name="1" expression="#{ServiceDeliveryLocationAction.unLink('organization', ServiceDeliveryLocation.organization)}"></action>
				<action name="2" expression="#{ServiceDeliveryLocationAction.create()}"></action>
			</event>
			<transition to="../manage HBS UI"></transition>
		</node>
	</super-state>

	<node name="ReadLocation">
			<event type="node-enter">
			<action name="1" expression="#{LocationAction.setFilterBySdl(false)}"></action>
			<action name="2" expression="#{LocationAction.equal.put('code.code', 'LOC')}"></action>
			<action name="3" expression="#{LocationAction.read()}"></action>
		</event>
		<transition to="Locations List"></transition>
	</node>

	<task-node name="Locations List">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_HBS/CORE/FORMS/f_hospital_complex_management')}"></action>
		</event>
		<transition to="getMnemonic"></transition>
	</task-node>

	<decision name="getMnemonic" expression="#{(button.getMnemonic())}">
		<transition to="super-state6/LinkSDL" name="ADD"></transition>
		<transition to="eject Location" name="BACK"></transition>
	</decision>

	<super-state name="super-state6">
		<node name="LinkSDL">
			<event type="node-enter">
				<action name="1" expression="#{ServiceDeliveryLocationAction.link('serviceDeliveryLocation',Location)}"></action>
				<action name="2" expression="#{ServiceDeliveryLocationAction.create()}"></action>
			</event>
			<transition to="../eject Location"></transition>
		</node>
	</super-state>

	<node name="eject Location">
		<event type="node-enter">
			<action name="1" expression="#{LocationAction.eject()}"></action>
			<action name="2" expression="#{LocationAction.ejectList('LocationList')}"></action>
		</event>
		<transition to="manage HBS UI"></transition>
	</node>

	<super-state name="super-state7">
		<node name="addemplwardUP">
			<event type="node-enter">
				<action name="1" expression="#{ServiceDeliveryLocation.setResponsible(Employee)}"></action>
			</event>
			<transition to="../manage HBS UI"></transition>
		</node>
	</super-state>

	<process-state name="search employee 3">
		<sub-process name="MOD_Employees/CORE/PROCESSES/Search" binding="late"></sub-process>
		<transition to="super-state7/addemplwardUP"></transition>
	</process-state>

	<node name="eject emp">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeAction.cleanRestrictions()}"></action>
			<action name="2" expression="#{EmployeeAction.ejectList('EmployeeList')}"></action>
			<action name="3" expression="#{EmployeeAction.eject()}"></action>
		</event>
		<transition to="search employee 3"></transition>
	</node>

	<process-state name="Search ASL">
		<sub-process name="MOD_HBS/CORE/PROCESSES/Search Asl" binding="late"></sub-process>
		<transition to="mnemonic 1"></transition>
	</process-state>

	<super-state name="super-state1">
		<node name="addASL">
			<event type="node-enter">
				<action name="1" expression="#{ServiceDeliveryLocationAction.link('organization',Organization)}"></action>
				<action name="2" expression="#{ServiceDeliveryLocation.getName().setFam(Organization.name.giv)}"></action>
				<action name="3" expression="#{ServiceDeliveryLocationAction.create()}"></action>
			</event>
			<transition to="../manage HBS UI"></transition>
		</node>
	</super-state>

	<decision name="mnemonic 1" expression="#{(button.getMnemonic())}">
		<transition to="manage HBS UI" name="back"></transition>
		<transition to="super-state1/addASL" name="next"></transition>
	</decision>

	<decision name="mnemonic 2" expression="#{(button.getMnemonic())}">
		<transition to="manage HBS UI" name="BtnBack"></transition>
		<transition to="super-state3/set RDP" name="BtnSaveRDP"></transition>
	</decision>

	<process-state name="Search employee">
		<sub-process name="MOD_Employees/CORE/PROCESSES/ManageMulti" binding="late"></sub-process>
		<transition to="link employee"></transition>
	</process-state>

	<node name="link employee">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocation.setResponsible(Employee)}"></action>
			<action name="2" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="manage HBS UI"></transition>
	</node>

	<node name="FIXME CHANGE THIS, needed by ManageMulti to show save button, change and refractor!">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="Search employee"></transition>
	</node>

	<task-node name="popup upload logo">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_HBS/CORE/FORMS/popup/uploadLogo')}"></action>
		</event>
		<transition to="manage HBS UI"></transition>
	</task-node>

	<node name="set temp 2">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.put('searchRDP',true)}"></action>
		</event>
		<transition to="Search Operatori 2"></transition>
	</node>

	<node name="remove temp 2">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.remove('searchRDP')}"></action>
		</event>
		<transition to="is vigilanza?"></transition>
	</node>

	<process-state name="Search Operatori 2">
		<sub-process name="MOD_Employees/CORE/PROCESSES/gestioneOperatori" binding="late"></sub-process>
		<transition to="remove temp 2"></transition>
	</process-state>

	<node name="set temp">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.put('searchDir',true)}"></action>
		</event>
		<transition to="search operatori"></transition>
	</node>

	<node name="remove temp">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.remove('searchDir')}"></action>
		</event>
		<transition to="mnemonic 3"></transition>
	</node>

	<process-state name="search operatori">
		<sub-process name="MOD_Employees/CORE/PROCESSES/gestioneOperatori" binding="late"></sub-process>
		<transition to="remove temp"></transition>
	</process-state>

	<decision name="mnemonic 3" expression="#{(button.getMnemonic())}">
		<transition to="manage HBS UI" name="BtnBack"></transition>
		<transition to="super-state2/set Director" name="BtnSaveDir"></transition>
	</decision>

	<super-state name="super-state2">
		<node name="set Director">
			<event type="node-enter">
				<action name="1" expression="#{OperatoreAction.create()}"></action>
				<action name="2" expression="#{OperatoreAction.link('directorOf',ServiceDeliveryLocation)}"></action>
			</event>
			<transition to="../manage HBS UI"></transition>
		</node>
		<node name="del Director">
			<event type="node-enter">
				<action name="1" expression="#{OperatoreAction.delDirector(ServiceDeliveryLocation)}"></action>
			</event>
			<transition to="set Director"></transition>
		</node>
	</super-state>

	<node name="set temp 2 CA">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.put('RDPtype',vocabularies.getCodeValue('PHIDIC', 'Types', 'Yard', 'C'))}"></action>
		</event>
		<transition to="set temp 2"></transition>
	</node>

	<node name="set temp 3 AZ">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.put('RDPtype',vocabularies.getCodeValue('PHIDIC', 'Types', 'Generic', 'C'))}"></action>
		</event>
		<transition to="set temp 2"></transition>
	</node>

	<node name="set temp 2 AM">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.put('RDPtype',vocabularies.getCodeValue('PHIDIC', 'Types', 'Asbestos', 'C'))}"></action>
		</event>
		<transition to="set temp 2"></transition>
	</node>

	<node name="set vigilanza type">
		<event type="node-enter">
			<action name="1" expression="#{VigilanzaRdpTypeAction.equal.put('serviceDeliveryLocation',ServiceDeliveryLocation)}"></action>
			<action name="2" expression="#{VigilanzaRdpTypeAction.equal.put('vigilanzaType',ServiceDeliveryLocationAction.temporary.get('RDPtype'))}"></action>
			<action name="3" expression="#{VigilanzaRdpTypeAction.read()}"></action>
			<action name="4" expression="#{(VigilanzaRdpTypeList.isEmpty())? VigilanzaRdpTypeAction.newEntity() : VigilanzaRdpTypeAction.injectFirst()}"></action>
			<action name="5" expression="#{VigilanzaRdpTypeAction.link('serviceDeliveryLocation',ServiceDeliveryLocation)}"></action>
			<action name="6" expression="#{VigilanzaRdpType.setVigilanzaType(ServiceDeliveryLocationAction.temporary.get('RDPtype'))}"></action>
			<action name="7" expression="#{OperatoreAction.link('vigilanzaRdpType',VigilanzaRdpType)}"></action>
		</event>
		<transition to="mnemonic 2"></transition>
	</node>

	<decision name="is vigilanza?" expression="#{(ServiceDeliveryLocationAction.temporary.get('RDPtype')!=null)}">
		<transition to="mnemonic 2" name="false"></transition>
		<transition to="set vigilanza type" name="true"></transition>
	</decision>

	<node name="remove tmp">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.temporary.remove('RDPtype')}"></action>
			<action name="2" expression="#{OperatoreAction.eject()}"></action>
			<action name="3" expression="#{VigilanzaRdpTypeAction.eject()}"></action>
		</event>
		<transition to="manage HBS UI"></transition>
	</node>

	<process-state name="Gestione Scadenze">
		<sub-process name="MOD_HBS/CORE/PROCESSES/gestioneScadenze" binding="late"></sub-process>
		<transition to="manage HBS UI"></transition>
	</process-state>

	<node name="Copy Telecom">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocation.organization ne null?ServiceDeliveryLocation.organization.setTelecom(ServiceDeliveryLocation.telecom.cloneTel()):''}"></action>
		</event>
		<transition to="super-state4/save SDL"></transition>
	</node>
	
<action name="security" expression="admin;direttore;"></action>
	

</process-definition>

