<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="gestioneAttivita">


	<start-state name="start-state1">
		<transition to="coming from tab?"></transition>
	</start-state>


	<node name="Read Attivita">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.equal.put('procpratiche',Procpratiche)}"></action>
			<action name="2" expression="#{AttivitaAction.orderBy.put('dataInizio','descending')}"></action>
			<action name="3" expression="#{AttivitaAction.equal.put('isActive',true)}"></action>
			<action name="4" expression="#{AttivitaAction.setReadPageSize(10)}"></action>
			<action name="5" expression="#{AttivitaAction.read()}"></action>
			<action name="6" expression="#{AttivitaAction.temporary.put('fromTab',false)}"></action>
		</event>
		<transition to="Attivita"></transition>
	</node>

	<task-node name="Attivita">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/attivita')}"></action>
		</event>
		<transition to="Button?"></transition>
	</task-node>

	<decision name="Button?" expression="#{(button.getMnemonic())}">
		<transition to="CheckListNew" name="BtnAttivitaNew"></transition>
		<transition to="isAttivitaCompleted?" name="BtnAttivitaMng"></transition>
		<transition to="eject 3" name="BtnBack"></transition>
		<transition to="Clone Attivita" name="BtnAttivitaCln"></transition>
		<transition to="is deletable?" name="BtnDelAttivita"></transition>
		<transition to="injectList of attivita docs 2" name="BtnAttivitaDocs"></transition>
		<transition to="super-state10/setState" name="BtnAttivitaReOpen"></transition>
	</decision>

	<task-node name="Create Attivita UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/attivita_new')}"></action>
		</event>
		<transition to="Button3?"></transition>
	</task-node>

	<super-state name="super-state1">
		<node name="Save Attivita">
			<event type="node-enter">
				<action name="1" expression="#{AttivitaAction.create()}"></action>
				<action name="2" expression="#{ProcpraticheAction.link('attivita',Attivita)}"></action>
			</event>
			<transition to="../Button9?"></transition>
		</node>
	</super-state>

	<decision name="Button3?" expression="#{(button.getMnemonic())}">
		<transition to="refresh list" name="BtnBack"></transition>
		<transition to="Link Soggetti Attivita" name="BtnSgtMng"></transition>
		<transition to="Eject 2" name="BtnSgtNew"></transition>
		<transition to="Link Soggetti Attivita" name="BtnSgtDel"></transition>
		<transition to="Set Temporary" name="BtnGestioneOperatori"></transition>
		<transition to="Elimina operatori" name="BtnDelOPAttivita"></transition>
		<transition to="eject Misura" name="BtnMisNew"></transition>
		<transition to="measure popUp" name="BtnMisMng"></transition>
		<transition to="measure alert" name="BtnMisDel"></transition>
		<transition to="Time Spent popUp" name="BtnTimeSpent"></transition>
		<transition to="super-state7/Save Sequestro" name="BtnSearchCustodeGiudiziario"></transition>
		<transition to="super-state7/Save Sequestro" name="BtnSearchProprietario"></transition>
		<transition to="operations" name="operation"></transition>
		<transition to="Gestione Provvedimenti" name="BtnProvvNew"></transition>
		<transition to="Gestione Provvedimenti" name="BtnProvvMng"></transition>
		<transition to="Gestione Provvedimenti" name="BtnProvvDel"></transition>
		<transition to="Gestione Provvedimenti" name="BtnProvvCln"></transition>
		<transition to="Gestione Provvedimenti" name="BtnProvvInfo"></transition>
		<transition to="Gestione Oggetti" name="BtnAddOgg"></transition>
		<transition to="Gestione Oggetti" name="BtnEditOgg"></transition>
		<transition to="Gestione Oggetti" name="BtnDelOgg"></transition>
		<transition to="Link Luogo Attivita" name="BtnSearchLuogo"></transition>
		<transition to="Gestione Visita Medica" name="MedicAdd"></transition>
		<transition to="Gestione Visita Medica" name="MedicDelete"></transition>
		<transition to="Gestione Visita Medica" name="MedicDetail"></transition>
		<transition to="Gestione Visita Medica" name="delPrest"></transition>
		<transition to="Gestione Visita Medica" name="addPrest"></transition>
		<transition to="Gestione acquisizione informazioni" name="addDoc"></transition>
		<transition to="Gestione acquisizione informazioni" name="delDoc"></transition>
		<transition to="injectList of Attivita docs" name="BtnAttivitaAlfrescoDocEdit"></transition>
		<transition to="Gestione miglioramenti" name="BtnImpDel"></transition>
		<transition to="Gestione miglioramenti" name="BtnImpMng"></transition>
		<transition to="Gestione miglioramenti" name="BtnImpNew"></transition>
		<transition to="inject Cantiere" name="editCantiere"></transition>
		<transition to="restore readonly?" name="BtnBackBack"></transition>
		<transition to="injectList of Soggetto docs" name="BtnSoggettoDocs"></transition>
		<transition to="injectList of Provvedimenti docs" name="BtnProvvedimentiDocs"></transition>
		<transition to="Gestione Visita Medica" name="addPrestReg"></transition>
		<transition to="Gestione Visita Medica" name="delPrestReg"></transition>
		<transition to="CheckListSave" name="BtnSave"></transition>
		<transition to="MdL Management 4" name="BtnDiag"></transition>
		<transition to="Accertamento Management 4" name="BtnPrest"></transition>
		<transition to="super-state8/Save Attivita 3" name="BtnJump"></transition>
		<transition to="super-state8/Save Attivita 3" name="BtnChildNew"></transition>
		<transition to="Gestione Agenda" name="BtnAgenda"></transition>
		<transition to="get device location" name="getDeviceLocation"></transition>
		<transition to="pick location from map" name="pickLocationFromMap"></transition>
		<transition to="reverse geocoding" name="reverseGeocode"></transition>
		<transition to="CheckListSelect" name="CheckCheck"></transition>
		<transition to="Create Attivita UI" name="BtnCancel"></transition>
		<transition to="Quest Management" name="BtnQuestAdd"></transition>
		<transition to="Quest Management" name="BtnQuestDel"></transition>
		<transition to="Quest Management" name="BtnQuestEdit"></transition>
		<transition to="Sopralluogo Management" name="initSopralluogo"></transition>
	</decision>

	<node name="refresh list">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.refresh()}"></action>
			<action name="2" expression="#{AttivitaAction.eject()}"></action>
			<action name="3" expression="#{AttivitaAction.ejectList()}"></action>
			<action name="4" expression="#{SoggettoAction.eject()}"></action>
			<action name="5" expression="#{SoggettoAction.ejectList()}"></action>
			<action name="6" expression="#{RilevazioniAmbientaliAction.eject()}"></action>
			<action name="7" expression="#{MisureAction.eject()}"></action>
			<action name="8" expression="#{MisureAction.ejectList()}"></action>
			<action name="9" expression="#{SequestriAction.eject()}"></action>
			<action name="10" expression="#{OggettoAction.eject()}"></action>
			<action name="11" expression="#{OggettoAction.ejectList()}"></action>
			<action name="12" expression="#{VisitaMedicaAction.eject()}"></action>
			<action name="13" expression="#{PhysicianAction.eject()}"></action>
			<action name="14" expression="#{CodeValueIcd9Action.eject()}"></action>
			<action name="15" expression="#{CodeValueIcd9Action.ejectList()}"></action>
			<action name="16" expression="#{CodeValuePhiAction.eject()}"></action>
			<action name="17" expression="#{CodeValuePhiAction.ejectList()}"></action>
			<action name="18" expression="#{AcquisizioneInformazioniAction.eject()}"></action>
		</event>
		<transition to="re-read"></transition>
	</node>

	<node name="eject 1">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.eject()}"></action>
		</event>
		<transition to="super-state9/New Entity"></transition>
	</node>

	<process-state name="Link Soggetti Attivita">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/linkSoggettoAttivita" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<node name="read Soggetti e Partecipanti">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoAction.equal.put('attivita.internalId',Attivita.internalId)}"></action>
			<action name="2" expression="#{SoggettoAction.equal.put('isActive',true)}"></action>
			<action name="3" expression="#{SoggettoAction.orderBy.put('creationDate','descending')}"></action>
			<action name="4" expression="#{SoggettoAction.read()}"></action>
			<action name="5" expression="#{MisureAction.equal.put('attivita.internalId',Attivita.internalId)}"></action>
			<action name="6" expression="#{MisureAction.equal.put('isActive',true)}"></action>
			<action name="7" expression="#{MisureAction.read()}"></action>
			<action name="8" expression="#{PartecipantiAction.equal.put('attivita.internalId',Attivita.internalId)}"></action>
			<action name="9" expression="#{PartecipantiAction.equal.put('isActive',true)}"></action>
			<action name="10" expression="#{PartecipantiAction.orderBy.put('operatore.name.fam','ascending')}"></action>
			<action name="11" expression="#{PartecipantiAction.read()}"></action>
			<action name="12" expression="#{SequestriAction.inject(Attivita.sequestro)}"></action>
			<action name="13" expression="#{OggettoAction.injectList(Attivita.oggetti)}"></action>
			<action name="14" expression="#{ProvvedimentiAction.orderBy.put('data','descending')}"></action>
			<action name="15" expression="#{ProvvedimentiAction.equal.put('procpratiche',Procpratiche)}"></action>
			<action name="16" expression="#{ProvvedimentiAction.equal.put('isActive',true)}"></action>
			<action name="17" expression="#{ProvvedimentiAction.read()}"></action>
			<action name="18" expression="#{MiglioramentiAction.injectList(Attivita.miglioramenti,'MiglioramentiList')}"></action>
			<action name="19" expression="#{PrestazioniRegAction.inject(PrestazioniRegAction.newEntity())}"></action>
			<action name="20" expression="#{PrestazioniRegAction.equal.put('visitaMedica.internalId',Attivita.visitaMedica.internalId)}"></action>
			<action name="21" expression="#{PrestazioniRegAction.equal.put('isActive',true)}"></action>
			<action name="22" expression="#{PrestazioniRegAction.read()}"></action>
			<action name="23" expression="#{AttivitaParentAction.inject(Attivita.parent)}"></action>
			<action name="24" expression="#{AttivitaChildrenAction.equal.put('parent',Attivita)}"></action>
			<action name="25" expression="#{AttivitaChildrenAction.equal.put('isActive',true)}"></action>
			<action name="26" expression="#{AttivitaChildrenAction.read()}"></action>
			<action name="27" expression="#{QuestionarioAction.injectList(Attivita.questionario)}"></action>
		</event>
		<transition to="ejtCantiere"></transition>
	</node>

	<node name="Eject 2">
		<event type="node-enter">
			<action name="1" expression="#{SoggettoAction.eject()}"></action>
			<action name="2" expression="#{AcquisizioneInformazioniAction.eject()}"></action>
		</event>
		<transition to="Link Soggetti Attivita"></transition>
	</node>

	<node name="Inizialize Entity">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.setCodeValue('statusCode','PHIDIC','Status','active')}"></action>
			<action name="2" expression="#{AttivitaAction.copyAssignments(Procpratiche.operatori, Procpratiche.rdp.internalId, Procpratiche.rfp.internalId)}"></action>
			<action name="3" expression="#{AttivitaAction.initializeSubjects(Procpratiche)}"></action>
			<action name="4" expression="#{PartecipantiAction.injectList(Attivita.partecipanti,'PartecipantiList')}"></action>
			<action name="5" expression="#{AttivitaAction.copySoggFromProtocollo(Protocollo)}"></action>
			<action name="6" expression="#{SoggettoAction.injectList(Attivita.soggetto,'SoggettoList')}"></action>
			<action name="7" expression="#{AttivitaAction.setNumeroVerbale(Protocollo.serviceDeliveryLocation.parent)}"></action>
			<action name="8" expression="#{AttivitaAction.create()}"></action>
			<action name="9" expression="#{PrestazioniRegAction.inject(PrestazioniRegAction.newEntity())}"></action>
			<action name="10" expression="#{PrestazioniRegAction.injectEmptyList()}"></action>
			<action name="11" expression="#{OggettoAction.ejectList()}"></action>
			<action name="12" expression="#{not empty AttivitaAction.temporary.get('toLink')?AttivitaAction.link('parent', AttivitaAction.temporary.get('toLink')):''}"></action>
			<action name="13" expression="#{AttivitaAction.temporary.remove('toLink')}"></action>
			<action name="14" expression="#{Attivita.setDataInizio(function.currentDateTime())}"></action>
		</event>
		<transition to="MdL Management 2"></transition>
	</node>

	<node name="eject 3">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeAction.eject()}"></action>
			<action name="2" expression="#{EmployeeAction.ejectList()}"></action>
			<action name="3" expression="#{OperatoreAction.eject()}"></action>
			<action name="4" expression="#{OperatoreAction.ejectList()}"></action>
			<action name="5" expression="#{RilevazioniAmbientaliAction.eject()}"></action>
			<action name="6" expression="#{MisureAction.eject()}"></action>
			<action name="7" expression="#{MisureAction.ejectList()}"></action>
			<action name="8" expression="#{CantiereAction.ejectList()}"></action>
			<action name="9" expression="#{CantiereAction.eject()}"></action>
			<action name="10" expression="#{VisitaMedicaAction.eject()}"></action>
			<action name="11" expression="#{CodeValueIcd9Action.eject()}"></action>
			<action name="12" expression="#{CodeValueIcd9Action.ejectList()}"></action>
			<action name="13" expression="#{CodeValuePhiAction.eject()}"></action>
			<action name="14" expression="#{CodeValuePhiAction.ejectList()}"></action>
			<action name="15" expression="#{MiglioramentiAction.eject()}"></action>
			<action name="16" expression="#{MiglioramentiAction.ejectList()}"></action>
			<action name="17" expression="#{ProcpraticheAction.setActivitiesColor(Procpratiche)}"></action>
			<action name="18" expression="#{VisitaMdlAction.ejectList()}"></action>
			<action name="19" expression="#{VisitaMdlAction.eject()}"></action>
			<action name="20" expression="#{VisitaSpAction.eject()}"></action>
			<action name="21" expression="#{VisitaExtAction.eject()}"></action>
			<action name="22" expression="#{processManager.setReadOnly(false)}"></action>
			<action name="23" expression="#{ConclusioniMdlAction.eject()}"></action>
			<action name="24" expression="#{DiagMdlAction.eject()}"></action>
			<action name="25" expression="#{DiagMdlAction.ejectList()}"></action>
			<action name="26" expression="#{AccertaMdlAction.eject()}"></action>
			<action name="27" expression="#{AccertaMdlAction.ejectList()}"></action>
			<action name="28" expression="#{AccertSpAction.eject()}"></action>
			<action name="29" expression="#{AccertExtAction.eject()}"></action>
			<action name="30" expression="#{PrestMdlAction.eject()}"></action>
			<action name="31" expression="#{PrestMdlAction.ejectList()}"></action>
			<action name="32" expression="#{AttivitaChildrenAction.eject()}"></action>
			<action name="33" expression="#{AttivitaChildrenAction.ejectList()}"></action>
			<action name="34" expression="#{DiagMdlAction.eject()}"></action>
			<action name="35" expression="#{DiagMdlAction.ejectList()}"></action>
			<action name="36" expression="#{CousellingAction.eject()}"></action>
			<action name="37" expression="#{CousellingAction.ejectList()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<node name="Set Temporary">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.temporary.put('search', true)}"></action>
		</event>
		<transition to="Gestion Operatori"></transition>
	</node>

	<process-state name="Gestion Operatori">
		<sub-process name="MOD_Employees/CORE/PROCESSES/gestioneOperatori" binding="late"></sub-process>
		<transition to="Remove Temporary"></transition>
	</process-state>

	<node name="Remove Temporary">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.temporary.remove('search')}"></action>
		</event>
		<transition to="Button8?"></transition>
	</node>

	<node name="Set Incarichi">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.setAssignments(OperatoreList.list)}"></action>
		</event>
		<transition to="super-state2/Save Attivita 2"></transition>
	</node>

	<super-state name="super-state2">
		<node name="Save Attivita 2">
			<event type="node-enter">
				<action name="1" expression="#{AttivitaAction.create()}"></action>
			</event>
			<transition to="../read Soggetti e Partecipanti"></transition>
		</node>
	</super-state>

	<process-state name="Elimina operatori">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Pratiche/eliminaOperatori" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<node name="Clone Attivita">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.inject(AttivitaAction.copy(Attivita))}"></action>
			<action name="2" expression="#{AttivitaAction.setNumeroVerbale(Protocollo.serviceDeliveryLocation.parent)}"></action>
		</event>
		<transition to="super-state1/Save Attivita"></transition>
	</node>

	<task-node name="Del PopUp">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Attivita_alert')}"></action>
		</event>
		<transition to="Button4?"></transition>
	</task-node>

	<decision name="Button4?" expression="#{(button.getMnemonic())}">
		<transition to="coming from tab2?" name="BtnCancel"></transition>
		<transition to="super-state3/Delete Attivita" name="BtnSave"></transition>
	</decision>

	<super-state name="super-state3">
		<node name="Delete Attivita">
			<event type="node-enter">
				<action name="1" expression="#{AttivitaAction.create()}"></action>
				<action name="2" expression="#{Attivita.setIsActive(false)}"></action>
			</event>
			<transition to="../refresh list"></transition>
		</node>
	</super-state>

	<task-node name="measure popUp">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/add_measure')}"></action>
		</event>
		<transition to="remove temporary"></transition>
	</task-node>

	<decision name="Button5?" expression="#{(button.getMnemonic())}">
		<transition to="read Soggetti e Partecipanti" name="BtnCancel"></transition>
		<transition to="super-state4/Save Measure" name="BtnSave"></transition>
	</decision>

	<super-state name="super-state4">
		<node name="Save Measure">
			<event type="node-enter">
				<action name="1" expression="#{MisureAction.link('attivita',Attivita)}"></action>
				<action name="2" expression="#{MisureAction.create()}"></action>
			</event>
			<transition to="../Refresh Attivita"></transition>
		</node>
	</super-state>

	<node name="Refresh Attivita">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.refresh()}"></action>
		</event>
		<transition to="read Soggetti e Partecipanti"></transition>
	</node>

	<node name="eject Misura">
		<event type="node-enter">
			<action name="1" expression="#{MisureAction.eject()}"></action>
		</event>
		<transition to="measure popUp"></transition>
	</node>

	<task-node name="measure alert">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_misura_alert')}"></action>
		</event>
		<transition to="Button6?"></transition>
	</task-node>

	<decision name="Button6?" expression="#{(button.getMnemonic())}">
		<transition to="super-state5/Del Misure" name="BtnSave"></transition>
		<transition to="Button5?" name="BtnCancel"></transition>
	</decision>

	<super-state name="super-state5">
		<node name="Del Misure">
			<event type="node-enter">
				<action name="1" expression="#{Misure.setIsActive(false)}"></action>
				<action name="2" expression="#{MisureAction.create()}"></action>
			</event>
			<transition to="../Refresh Attivita"></transition>
		</node>
	</super-state>

	<task-node name="Time Spent popUp">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/time_spent')}"></action>
		</event>
		<transition to="Button7?"></transition>
	</task-node>

	<decision name="Button7?" expression="#{(button.getMnemonic())}">
		<transition to="Button5?" name="BtnCancel"></transition>
		<transition to="super-state6/Save Partecipante" name="BtnSave"></transition>
	</decision>

	<super-state name="super-state6">
		<node name="Save Partecipante">
			<event type="node-enter">
				<action name="1" expression="#{PartecipantiAction.create()}"></action>
			</event>
			<transition to="../Refresh Attivita"></transition>
		</node>
	</super-state>

	<decision name="Button8?">
		<transition to="Set Incarichi" name="BtnSave"></transition>
		<transition to="read Soggetti e Partecipanti" name="BtnBack"></transition>
	</decision>

	<process-state name="Link Soggetti Sequestro">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/linkSoggettiSequestro" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<super-state name="super-state7">
		<node name="Save Sequestro">
			<event type="node-enter">
				<action name="1" expression="#{AttivitaAction.create()}"></action>
				<action name="2" expression="#{SequestriAction.inject(Attivita.sequestro)}"></action>
			</event>
			<transition to="../Link Soggetti Sequestro"></transition>
		</node>
	</super-state>

	<process-state name="operations">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Generico/operations" binding="late"></sub-process>
		<transition to="super-state2/Save Attivita 2"></transition>
	</process-state>

	<decision name="Button9?" expression="#{(button.getMnemonic()=='BtnAttivitaCln')}">
		<transition to="inject code values" name="false"></transition>
		<transition to="refresh list" name="true"></transition>
	</decision>

	<process-state name="Gestione Provvedimenti">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/gestioneProvvedimenti" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="Gestione Oggetti">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Pratiche/gestioneOggetti" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="Link Luogo Attivita">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/linkLuogo" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="Gestione Visita Medica">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Pratiche/MP/visiteMediche" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="Gestione acquisizione informazioni">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/acquisizioneInformazioni" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<node name="injectList of Attivita docs">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.temporary.put('entity2Link', Attivita)}"></action>
			<action name="2" expression="#{AlfrescoDocumentAction.injectList(Attivita.documenti)}"></action>
		</event>
		<transition to="get lastchange"></transition>
	</node>

	<process-state name="alfresco document">
		<sub-process name="MOD_Document/CORE/PROCESSES/alfrescoDocument" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>

	<process-state name="inject code values">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/injectCodeValues" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>

	<super-state name="super-state9">
		<node name="New Entity">
			<event type="node-enter">
				<action name="1" expression="#{AttivitaAction.inject(AttivitaAction.newEntity())}"></action>
			</event>
			<transition to="../Inizialize Entity"></transition>
		</node>
	</super-state>

	<process-state name="Gestione miglioramenti">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Provvedimenti/gestioneMiglioramenti" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<node name="inject Cantiere">
		<event type="node-enter">
			<action name="1" expression="#{CantiereAction.inject(Attivita.luogoCantiere)}"></action>
		</event>
		<transition to="Edit Cantiere"></transition>
	</node>

	<process-state name="Edit Cantiere">
		<sub-process name="MOD_Cantieri/PROCESSES/Utility/manageCantieri" binding="late"></sub-process>
		<transition to="ejtCantiere"></transition>
	</process-state>

	<node name="ejtCantiere">
		<event type="node-enter">
			<action name="1" expression="#{CantiereAction.eject()}"></action>
		</event>
		<transition to="Button9?"></transition>
	</node>

	<node name="injectList of attivita docs 2">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.temporary.put('entity2Link', Attivita)}"></action>
			<action name="2" expression="#{AlfrescoDocumentAction.injectList(Attivita.documenti)}"></action>
			<action name="3" expression="#{AlfrescoDocumentAction.findLastChangeInfo(AlfrescoDocumentList.getList())}}"></action>
		</event>
		<transition to="alfresco document 2"></transition>
	</node>

	<process-state name="alfresco document 2">
		<sub-process name="MOD_Document/CORE/PROCESSES/alfrescoDocument" binding="late"></sub-process>
		<transition to="coming from tab2?"></transition>
	</process-state>

	<node name="injectList of Soggetto docs">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.temporary.put('entity2Link', Soggetto)}"></action>
			<action name="2" expression="#{AlfrescoDocumentAction.injectList(Soggetto.documenti)}"></action>
		</event>
		<transition to="get lastchange"></transition>
	</node>

	<node name="injectList of Provvedimenti docs">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.temporary.put('entity2Link', Provvedimenti)}"></action>
			<action name="2" expression="#{AlfrescoDocumentAction.injectList(Provvedimenti.documenti)}"></action>
		</event>
		<transition to="get lastchange"></transition>
	</node>

	<decision name="restore readonly?" expression="#{Procpratiche.statusCode.code=='completed' or Procpratiche.statusCode.code=='suspended'}">
		<transition to="ejectAttivita" name="false"></transition>
		<transition to="restsore readonly" name="true"></transition>
	</decision>

	<node name="restsore readonly">
		<event type="node-enter">
			<action name="1" expression="#{processManager.setReadOnly(false)}"></action>
		</event>
		<transition to="ejectAttivita"></transition>
	</node>

	<decision name="Conclusa?" expression="#{Attivita.statusCode.code eq 'completed'}">
		<transition to="Attivita isValid?" name="true"></transition>
		<transition to="setReadOnlyFalse1" name="false"></transition>
	</decision>

	<decision name="Attivita isValid?" expression="#{AttivitaAction.checkAttivita(Procpratiche.serviceDeliveryLocation.area.code)}">
		<transition to="Set In corso" name="false"></transition>
		<transition to="setReadOnlyTrue1" name="true"></transition>
	</decision>

	<node name="Set In corso">
		<event type="node-enter">
			<action name="1" expression="#{Attivita.setStatusCode(vocabularies.getCodeValue('PHIDIC', 'Status', 'active', 'C'))}"></action>
		</event>
		<transition to="setReadOnlyFalse2"></transition>
	</node>
	
	<node name="remove temporary">
		<event type="node-enter">
			<action name="1" expression="#{MisureAction.temporary.remove('lastValue')}"></action>
			<action name="2" expression="#{button.mnemonic eq 'BtnCancel' ? MisureAction.refresh() : ''}"></action>
		</event>
		<transition to="Button5?"></transition>
	</node>

	<decision name="coming from tab?" expression="#{button.mnemonic eq 'BtnActivityMng1'}">
		<transition to="Read Attivita" name="false"></transition>
		<transition to="mnemonic" name="true"></transition>
	</decision>

	<node name="re-read">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.equal.put('procpratiche',Procpratiche)}"></action>
			<action name="2" expression="#{AttivitaAction.orderBy.put('dataInizio','descending')}"></action>
			<action name="3" expression="#{AttivitaAction.equal.put('isActive',true)}"></action>
			<action name="4" expression="#{AttivitaAction.setReadPageSize(10)}"></action>
			<action name="5" expression="#{AttivitaAction.read()}"></action>
		</event>
		<transition to="coming from tab2?"></transition>
	</node>

	<decision name="coming from tab2?" expression="#{AttivitaAction.temporary['fromTab'] eq 'true'}">
		<transition to="eject 4" name="true"></transition>
		<transition to="Attivita" name="false"></transition>
	</decision>

	<node name="mnemonic">
		<event type="node-enter">
			<action name="1" expression="#{button.setMnemonic(button.value)}"></action>
			<action name="2" expression="#{AttivitaAction.temporary.put('fromTab',true)}"></action>
		</event>
		<transition to="Button?"></transition>
	</node>

	<node name="eject 4">
		<event type="node-enter">
			<action name="1" expression="#{EmployeeAction.eject()}"></action>
			<action name="2" expression="#{EmployeeAction.ejectList()}"></action>
			<action name="3" expression="#{OperatoreAction.eject()}"></action>
			<action name="4" expression="#{OperatoreAction.ejectList()}"></action>
			<action name="5" expression="#{RilevazioniAmbientaliAction.eject()}"></action>
			<action name="6" expression="#{MisureAction.eject()}"></action>
			<action name="7" expression="#{MisureAction.ejectList()}"></action>
			<action name="8" expression="#{CantiereAction.ejectList()}"></action>
			<action name="9" expression="#{CantiereAction.eject()}"></action>
			<action name="10" expression="#{VisitaMedicaAction.eject()}"></action>
			<action name="11" expression="#{CodeValueIcd9Action.eject()}"></action>
			<action name="12" expression="#{CodeValueIcd9Action.ejectList()}"></action>
			<action name="13" expression="#{CodeValuePhiAction.eject()}"></action>
			<action name="14" expression="#{CodeValuePhiAction.ejectList()}"></action>
			<action name="15" expression="#{MiglioramentiAction.eject()}"></action>
			<action name="16" expression="#{MiglioramentiAction.ejectList()}"></action>
			<action name="17" expression="#{ProcpraticheAction.setActivitiesColor(Procpratiche)}"></action>
			<action name="18" expression="#{VisitaMdlAction.ejectList()}"></action>
			<action name="19" expression="#{VisitaMdlAction.eject()}"></action>
			<action name="20" expression="#{VisitaSpAction.eject()}"></action>
			<action name="21" expression="#{VisitaExtAction.eject()}"></action>
			<action name="22" expression="#{processManager.setReadOnly(false)}"></action>
			<action name="23" expression="#{ConclusioniMdlAction.eject()}"></action>
			<action name="24" expression="#{DiagMdlAction.eject()}"></action>
			<action name="25" expression="#{DiagMdlAction.ejectList()}"></action>
			<action name="26" expression="#{AccertaMdlAction.eject()}"></action>
			<action name="27" expression="#{AccertaMdlAction.ejectList()}"></action>
			<action name="28" expression="#{AccertSpAction.eject()}"></action>
			<action name="29" expression="#{AccertExtAction.eject()}"></action>
			<action name="30" expression="#{PrestMdlAction.eject()}"></action>
			<action name="31" expression="#{PrestMdlAction.ejectList()}"></action>
			<action name="32" expression="#{AttivitaChildrenAction.eject()}"></action>
			<action name="33" expression="#{AttivitaChildrenAction.ejectList()}"></action>
			<action name="34" expression="#{DiagMdlAction.eject()}"></action>
			<action name="35" expression="#{DiagMdlAction.ejectList()}"></action>
			<action name="36" expression="#{AttivitaAction.eject()}"></action>
			<action name="37" expression="#{CousellingAction.eject()}"></action>
			<action name="38" expression="#{CousellingAction.ejectList()}"></action>
		</event>
		<transition to="end-state3"></transition>
	</node>

	<node name="ejectAttivita">
		<event type="node-enter">
			<action name="1" expression="#{AttivitaAction.refresh()}"></action>
			<action name="2" expression="#{AttivitaAction.eject()}"></action>
		</event>
		<transition to="end-state2"></transition>
	</node>

	<process-state name="MdL Management 1">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAttivitaMdL" binding="late"></sub-process>
		<transition to="Accertamento Management 1"></transition>
	</process-state>

	<process-state name="MdL Management 2">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAttivitaMdL" binding="late"></sub-process>
		<transition to="Accertamento Management 2"></transition>
	</process-state>

	<process-state name="MdL Management 3">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAttivitaMdL" binding="late"></sub-process>
		<transition to="Accertamento Management 3"></transition>
	</process-state>

	<process-state name="MdL Management 4">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAttivitaMdL" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="Accertamento Management 1">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAccertamento" binding="late"></sub-process>
		<transition to="Counselling Management 1"></transition>
	</process-state>

	<process-state name="Accertamento Management 2">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAccertamento" binding="late"></sub-process>
		<transition to="Counselling Management 2"></transition>
	</process-state>

	<process-state name="Accertamento Management 3">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAccertamento" binding="late"></sub-process>
		<transition to="Counselling Management 3"></transition>
	</process-state>

	<process-state name="Accertamento Management 4">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAccertamento" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="Counselling Management 1">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneCounselling" binding="late"></sub-process>
		<transition to="CheckListMng"></transition>
	</process-state>

	<process-state name="Counselling Management 2">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneCounselling" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>

	<process-state name="Counselling Management 3">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneCounselling" binding="late"></sub-process>
		<transition to="super-state1/Save Attivita"></transition>
	</process-state>

	<process-state name="Jump management">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/jumpAttivitaParentChildren" binding="late"></sub-process>
		<transition to="Button?"></transition>
	</process-state>

	<super-state name="super-state8">
		<node name="Save Attivita 3">
			<event type="node-enter">
				<action name="1" expression="#{AttivitaAction.create()}"></action>
				<action name="2" expression="#{ProcpraticheAction.link('attivita',Attivita)}"></action>
			</event>
			<transition to="../Button2"></transition>
		</node>
	</super-state>

	<decision name="Button2" expression="#{button.mnemonic}">
		<transition to="Jump management" name="BtnJump"></transition>
		<transition to="New child management" name="BtnChildNew"></transition>
	</decision>

	<process-state name="New child management">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/newChildren" binding="late"></sub-process>
		<transition to="Button?"></transition>
	</process-state>

	<process-state name="Gestione Agenda">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneAppuntamentoMdl" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<node name="get lastchange">
		<event type="node-enter">
			<action name="1" expression="#{AlfrescoDocumentAction.findLastChangeInfo(AlfrescoDocumentList.getList())}}"></action>
		</event>
		<transition to="alfresco document"></transition>
	</node>

	<process-state name="get device location">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/getDeviceLocationAttivita" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>

	<process-state name="pick location from map">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/pickLocationFromMapAttivita" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>

	<process-state name="reverse geocoding">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/reverseGeocodingAttivita" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>

	<decision name="is deletable?" expression="#{AttivitaAction.isDeletable(Attivita)}">
		<transition to="Del PopUp" name="true"></transition>
		<transition to="notDeleteable" name="false"></transition>
	</decision>

	<task-node name="notDeleteable">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/att_no_delete')}"></action>
		</event>
		<transition to="coming from tab2?"></transition>
	</task-node>

	<decision name="isAttivitaCompleted?" expression="#{Attivita.statusCode.code=='completed' and not (button.getMnemonic()=='BtnAttivitaNew' or button.value=='BtnAttivitaNew' or button.value=='BtnDelAttivita')}">
		<description>
			(userBean.getRole() == 'utente' and (not ProcpraticheAction.isCurrentUserOperatore(Procpratiche))) or 
Attivita.statusCode.code=='completed' or Procpratiche.statusCode.code=='completed' or Procpratiche.statusCode.code=='suspended'
		</description>
		<transition to="setReadOnlyFalse" name="false"></transition>
		<transition to="setReadOnlyTrue" name="true"></transition>
	</decision>

	<node name="setReadOnlyFalse">
		<event type="node-enter">
			<action name="1" expression="#{processManager.setReadOnly(false)}"></action>
		</event>
		<transition to="MdL Management 1"></transition>
	</node>

	<node name="setReadOnlyTrue">
		<event type="node-enter">
			<action name="1" expression="#{processManager.setReadOnly(true)}"></action>
		</event>
		<transition to="MdL Management 1"></transition>
	</node>

	<node name="setReadOnlyTrue1">
		<event type="node-enter">
			<action name="1" expression="#{processManager.setReadOnly(true)}"></action>
		</event>
		<transition to="MdL Management 3"></transition>
	</node>

	<node name="setReadOnlyFalse1">
		<event type="node-enter">
			<action name="1" expression="#{processManager.setReadOnly(false)}"></action>
		</event>
		<transition to="MdL Management 3"></transition>
	</node>

	<node name="setReadOnlyFalse2">
		<event type="node-enter">
			<action name="1" expression="#{processManager.setReadOnly(false)}"></action>
		</event>
		<transition to="Button9?"></transition>
	</node>

	<super-state name="super-state10">
		<node name="setState">
			<event type="node-enter">
				<action name="1" expression="#{AttivitaAction.create()}"></action>
				<action name="2" expression="#{Attivita.setStatusCode(vocabularies.getCodeValue('PHIDIC', 'Status', 'active', 'C'))}"></action>
			</event>
			<transition to="../eject 3"></transition>
		</node>
	</super-state>

	<process-state name="CheckListSelect">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/CheckList/CheckListCompile" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>

	<process-state name="CheckListMng">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/CheckList/CheckListCompile" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="CheckListSave">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/CheckList/CheckListCompile" binding="late"></sub-process>
		<transition to="Conclusa?"></transition>
	</process-state>

	<process-state name="CheckListNew">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/CheckList/CheckListCompile" binding="late"></sub-process>
		<transition to="eject 1"></transition>
	</process-state>

	<node name="Questionari">
		<event type="node-enter">
			<action name="1" expression="#{ProcpraticheAction.prepareLists()}"></action>
		</event>
		<transition to="Read Attivita"></transition>
	</node>

	<process-state name="Quest Management">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Questionari/manageQuestionari" binding="late"></sub-process>
		<transition to="read Soggetti e Partecipanti"></transition>
	</process-state>

	<process-state name="Sopralluogo Management">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Attivita/gestioneSopralluogo" binding="late"></sub-process>
		<transition to="Create Attivita UI"></transition>
	</process-state>
	

	<end-state name="end-state1"></end-state>

	<end-state name="end-state2"></end-state>

	<end-state name="end-state3"></end-state>	

</process-definition>
