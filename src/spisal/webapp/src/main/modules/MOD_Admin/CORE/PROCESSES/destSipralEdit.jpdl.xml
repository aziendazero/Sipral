<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="destSipralEdit">


	<start-state name="start-state1">
		<transition to="coming from?"></transition>
	</start-state>


	<decision name="coming from?" expression="#{(button.getMnemonic())}">
		<transition to="inject new" name="destNew"></transition>
		<transition to="read aulss" name="destEdit"></transition>
		<transition to="del popup" name="destDel"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="destinatario delete">
			<event type="node-enter">
				<action name="1" expression="#{AulssAction.equal.put('destinatariSpisal',DestinatariSpisal)}"></action>
				<action name="2" expression="#{AulssAction.read()}"></action>
				<action name="3" expression="#{AulssAction.deleteCascade(AulssList.list, DestinatariSpisal)}"></action>
			</event>
			<transition to="../eject"></transition>
		</node>
	</super-state>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{DestinatariSpisalAction.eject()}"></action>
			<action name="2" expression="#{AulssAction.ejectList()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<node name="inject new">
		<event type="node-enter">
			<action name="1" expression="#{DestinatariSpisalAction.inject(DestinatariSpisalAction.newEntity())}"></action>
			<action name="2" expression="#{DestinatariSpisalAction.setCodeValue('messageType','PHIDIC','TipologiaNotificaSipral','segn')}"></action>
			<action name="3" expression="#{DestinatariSpisalAction.setCodeValue('tipoInvio','PHIDIC','TipoInvio','01')}"></action>
			<action name="4" expression="#{DestinatariSpisalAction.setCodeValue('workingLine','PHIDIC','WorkingLine','WorkAccident')}"></action>
			<action name="5" expression="#{DestinatariSpisal.setDescrizioneSipral('SEGNALAZIONE INFORTUNI MORTALI')}"></action>
		</event>
		<transition to="destinatario edit"></transition>
	</node>

	<task-node name="destinatario edit">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Admin/CORE/FORMS/destinatariSipralEdit')}"></action>
		</event>
		<transition to="next from new?"></transition>
	</task-node>

	<decision name="next from new?" expression="#{(button.getMnemonic())}">
		<transition to="new?" name="BtnBack"></transition>
		<transition to="super-state2/create" name="BtnSave"></transition>
		<transition to="delete comuni" name="BtnDelComuni"></transition>
		<transition to="expire aulss" name="BtnExpire"></transition>
		<transition to="add ulss" name="BtnAddAulss"></transition>
	</decision>

	<node name="eject and evict">
		<event type="node-enter">
			<action name="1" expression="#{DestinatariSpisalAction.ejectAndEvict()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<super-state name="super-state2">
		<node name="create">
			<event type="node-enter">
				<action name="1" expression="#{DestinatariSpisalAction.create()}"></action>
			</event>
			<transition to="../read aulss"></transition>
		</node>
	</super-state>

	<decision name="new?" expression="#{DestinatariSpisal.internalId le 0}">
		<transition to="eject and evict" name="true"></transition>
		<transition to="refresh" name="false"></transition>
	</decision>

	<node name="refresh">
		<event type="node-enter">
			<action name="1" expression="#{DestinatariSpisalAction.refresh()}"></action>
		</event>
		<transition to="eject"></transition>
	</node>

	<node name="delete comuni">
		<event type="node-enter">
			<action name="1" expression="#{AulssAction.deleteUlss(AulssList.list, DestinatariSpisal)}"></action>
		</event>
		<transition to="read aulss"></transition>
	</node>

	<node name="expire aulss">
		<event type="node-enter">
			<action name="1" expression="#{AulssAction.expireAulss(AulssList.list)}"></action>
		</event>
		<transition to="read aulss"></transition>
	</node>

	<node name="eject Aulss">
		<event type="node-enter">
			<action name="1" expression="#{AulssAction.eject()}"></action>
		</event>
		<transition to="destinatario edit"></transition>
	</node>

	<node name="add ulss">
		<event type="node-enter">
			<action name="1" expression="#{AulssAction.addUlss(AulssList.list, DestinatariSpisal)}"></action>
		</event>
		<transition to="read aulss"></transition>
	</node>

	<node name="read aulss">
		<event type="node-enter">
			<action name="1" expression="#{AulssAction.equal.put('destinatariSpisal',DestinatariSpisal)}"></action>
			<action name="2" expression="#{AulssAction.orderBy.put('serviceDeliveryLocation.name.giv','ascending')}"></action>
			<action name="3" expression="#{AulssAction.read()}"></action>
		</event>
		<transition to="eject Aulss"></transition>
	</node>

	<task-node name="del popup">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_Admin/CORE/FORMS/del_confirm_popup')}"></action>
		</event>
		<transition to="del button?"></transition>
	</task-node>

	<decision name="del button?" expression="#{button.mnemonic}">
		<transition to="super-state1/destinatario delete" name="BtnSave"></transition>
		<transition to="eject" name="BtnCancel"></transition>
	</decision>

	<end-state name="end-state1"></end-state>


</process-definition>