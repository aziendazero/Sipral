<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="adviseMessage">


	<start-state name="start-state1">
		<transition to="read"></transition>
	</start-state>


	<node name="read">
		<event type="node-enter">
			<action name="1" expression="#{AdviseMsgAction.cleanRestrictions()}"></action>
			<action name="2" expression="#{AdviseMsgAction.equal.put('isActive', true)}"></action>
			<action name="3" expression="#{AdviseMsgAction.read()}"></action>
		</event>
		<transition to="adviseMessage"></transition>
	</node>

	<task-node name="adviseMessage">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Admin/CORE/FORMS/adviseMessage')}"></action>
		</event>
		<transition to="decision1"></transition>
	</task-node>

	<decision name="decision1" expression="#{(button.getMnemonic())}">
		<transition to="injectNew" name="ADD"></transition>
		<transition to="edit" name="EDIT"></transition>
		<transition to="confirmDelete" name="CANCEL"></transition>
		<transition to="inject duplicate" name="DUPLICATE"></transition>
		<transition to="toggle active" name="TOGGLE_ACTIVE"></transition>
		<transition to="test" name="TEST"></transition>
		<transition to="super-state3/cleanAll" name="DISABLEALL"></transition>
	</decision>

	<node name="injectNew">
		<event type="node-enter">
			<action name="1" expression="#{AdviseMsgAction.inject(AdviseMsgAction.newEntity())}"></action>
		</event>
		<transition to="edit"></transition>
	</node>

	<task-node name="edit">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_Admin/CORE/FORMS/adviseMessageEdit')}"></action>
		</event>
		<transition to="decision4"></transition>
	</task-node>

	<super-state name="super-state1">
		<node name="delete">
			<event type="node-enter">
				<action name="1" expression="#{AdviseMsg.setIsActive(false)}"></action>
				<action name="2" expression="#{AdviseMsgAction.create()}"></action>
				<action name="3" expression="#{AdviseMsgAction.updateActiveMessage(AdviseMsg)}"></action>
			</event>
			<transition to="../delete  timerr"></transition>
		</node>
	</super-state>

	<decision name="decision2" expression="#{(button.getMnemonic())}">
		<transition to="super-state1/delete" name="YES"></transition>
		<transition to="adviseMessage" name="Btn_Cancel"></transition>
		<transition to="adviseMessage" name="NO"></transition>
	</decision>

	<task-node name="confirmDelete">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_Admin/CORE/FORMS/genericConfirm')}"></action>
		</event>
		<transition to="decision2"></transition>
	</task-node>

	<super-state name="super-state2">
		<node name="save">
			<event type="node-enter">
				<action name="1" expression="#{AdviseMsgAction.create()}"></action>
				<action name="2" expression="#{AdviseMsg.setAuthor(userBean.getCurrentEmployee())}"></action>
				<action name="3" expression="#{AdviseMsgAction.updateActiveMessage(AdviseMsg)}"></action>
				<action name="4" expression="#{AdviseMsgAction.updateTestMessage(AdviseMsg)}"></action>
			</event>
			<transition to="../decision3"></transition>
		</node>
	</super-state>

	<decision name="decision4" expression="#{(button.getMnemonic())}">
		<transition to="adviseMessage" name="Btn_Cancel"></transition>
		<transition to="super-state2/save" name="OK"></transition>
	</decision>

	<node name="inject duplicate">
		<event type="node-enter">
			<action name="1" expression="#{AdviseMsgAction.duplicate(AdviseMsg)}"></action>
		</event>
		<transition to="edit"></transition>
	</node>

	<node name="toggle active">
		<event type="node-enter">
			<action name="1" expression="#{AdviseMsg.setActive( AdviseMsg.active eq true ? false : true)}"></action>
		</event>
		<transition to="super-state2/save"></transition>
	</node>

	<node name="test">
		<event type="node-enter">
			<action name="1" expression="#{AdviseMsg.setTest( AdviseMsg.test eq true ? false : true)}"></action>
		</event>
		<transition to="super-state2/save"></transition>
	</node>

	<node name="init timer">
		<event type="node-enter">
			<action name="1" expression="#{AdviseMsgAction.initTimer(AdviseMsg)}"></action>
		</event>
		<transition to="read"></transition>
	</node>

	<node name="delete  timerr">
		<event type="node-enter">
			<action name="1" expression="#{AdviseMsgAction.deleteTimer(AdviseMsg)}"></action>
		</event>
		<transition to="read"></transition>
	</node>

	<decision name="decision3" expression="#{AdviseMsg.active eq true}">
		<transition to="init timer" name="true"></transition>
		<transition to="delete  timerr" name="false"></transition>
	</decision>

	<super-state name="super-state3">
		<node name="cleanAll">
			<event type="node-enter">
				<action name="1" expression="#{AdviseMsgAction.cleanAllMessage()}"></action>
			</event>
			<transition to="../read"></transition>
		</node>
	</super-state>


	<end-state name="end-state1"></end-state>

	<action name="security" expression="1;"></action>

</process-definition>