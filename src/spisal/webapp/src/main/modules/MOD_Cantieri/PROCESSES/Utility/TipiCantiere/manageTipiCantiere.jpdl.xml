<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="manageTipiCantiere">


	<start-state name="start-state1">
		<transition to="coming from?"></transition>
	</start-state>


	<decision name="coming from?" expression="#{(button.getMnemonic())}">
		<transition to="super-state1/delete" name="delType"></transition>
		<transition to="new type" name="newType"></transition>
		<transition to="set disabled" name="editType"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="delete">
			<event type="node-enter">
				<action name="1" expression="#{TipologiaCantiere.setServiceDeliveryLocation(null)}"></action>
				<action name="2" expression="#{TipologiaCantiereAction.delete()}"></action>
			</event>
			<transition to="../eject"></transition>
		</node>
	</super-state>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{TipologiaCantiereAction.eject()}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<node name="new type">
		<event type="node-enter">
			<action name="1" expression="#{TipologiaCantiereAction.inject(TipologiaCantiereAction.newEntity())}"></action>
		</event>
		<transition to="edit type"></transition>
	</node>

	<task-node name="edit type">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/edit_tipologia_cantiere')}"></action>
		</event>
		<transition to="next?"></transition>
	</task-node>

	<decision name="next?" expression="#{(button.getMnemonic())}">
		<transition to="refresh" name="BtnBack"></transition>
		<transition to="link ULSS" name="BtnSave"></transition>
	</decision>

	<node name="refresh">
		<event type="node-enter">
			<action name="1" expression="#{TipologiaCantiere.internalId gt 0 ? rimPdm2CA.refresh(TipologiaCantiere) : rimPdm2CA.evict(TipologiaCantiere)}"></action>
		</event>
		<transition to="eject"></transition>
	</node>

	<super-state name="super-state2">
		<node name="create">
			<event type="node-enter">
				<action name="1" expression="#{TipologiaCantiereAction.create()}"></action>
			</event>
			<transition to="../edit type"></transition>
		</node>
	</super-state>

	<node name="set disabled">
		<event type="node-enter">
			<action name="1" expression="#{TipologiaCantiereAction.temporary.put('disable',!TipologiaCantiereAction.isDeletable(TipologiaCantiere))}"></action>
		</event>
		<transition to="edit type"></transition>
	</node>

	<node name="link ULSS">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.equal.put('code.code','UOC')}"></action>
			<action name="2" expression="#{ServiceDeliveryLocationAction.read()}"></action>
			<action name="3" expression="#{ServiceDeliveryLocationAction.injectFirst()}"></action>
			<action name="4" expression="#{ServiceDeliveryLocationAction.inject(ServiceDeliveryLocation.parent)}"></action>
			<action name="5" expression="#{TipologiaCantiere.setServiceDeliveryLocation(ServiceDeliveryLocation)}"></action>
			<action name="6" expression="#{ServiceDeliveryLocationAction.cleanRestrictions()}"></action>
			<action name="7" expression="#{ServiceDeliveryLocationAction.ejectList()}"></action>
			<action name="8" expression="#{ServiceDeliveryLocationAction.eject()}"></action>
		</event>
		<transition to="super-state2/create"></transition>
	</node>


	<end-state name="end-state1"></end-state>


</process-definition>