<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="Storia Lista">


<start-state name="start">
		
		<transition to="backup lista"/>
	</start-state>	
		
		

	<task-node name="show details">
		<task>
			<assignment actor-id="#{userBean.username}"/>
		</task>
		<event type="node-enter">
		
		
			<action expression="#{ViewManager.setViewId('/MOD_Admin/CORE/FORMS/f_control_list_edit')}" name="main"/>
		</event>
		<transition to="next?"></transition>		
	</task-node>


	<task-node name="show history">
		<task>
			<assignment actor-id="#{userBean.username}"/>
		</task>
		<event type="node-enter">
		
			<action name="1" expression="#{ControlLsAction.eject()}"></action>
			<action expression="#{ViewManager.setViewId('/MOD_Admin/CORE/FORMS/f_list_history')}" name="main"/>
		</event>
		<transition to="backOrExit"/>		
	</task-node>

	
	<node name="read history">
		<event type="node-enter">
			<action name="1" expression="#{ControlLsAction.historyFiltered('description','descrCode','startValidity','endValidity','controlLs')}"></action>
		</event>
		<transition to="show history"/>
	</node>
			
	
	 
	<decision expression="#{(button.getMnemonic())}" name="backOrExit">
	<transition name="BACK" to="restore lista"/>
	<transition name="NEXT" to="inject sottoliste"/>
	
	</decision>

	<node name="backup lista">
		<event type="node-enter">
			<action name="1" expression="#{ControlLsAction.temporary.put('oldList',ControlLs)}"></action>
			<action name="2" expression="#{ControlLsAction.temporary.put('isForHistory',true)}"></action>
			<action name="3" expression="#{ControlSubLsAction.eject()}"></action>
			<action name="4" expression="#{ControlSubLsAction.ejectList()}"></action>
		</event>
		<transition to="read history"/>
	</node>

	<node name="restore lista">
		<event type="node-enter">
			<action name="1" expression="#{ControlLsAction.inject(ControlLsAction.temporary['oldList'])}"></action>
			<action name="2" expression="#{ControlLsAction.ejectList('ControlLsHistoryList')}"></action>
			<action name="3" expression="#{ControlLsAction.temporary.put('isForHistory',false)}"></action>
			<action name="4" expression="#{ControlSubLsAction.eject()}"></action>
			<action name="5" expression="#{ControlSubLsAction.ejectList()}"></action>
			<action name="6" expression="#{RequisitoAction.eject()}"></action>
			<action name="7" expression="#{RequisitoAction.ejectList()}"></action>
		</event>
		<transition to="end"/>
	</node>

	<node name="inject sottoliste">
		<event type="node-enter">
			<action name="1" expression="#{ControlSubLsAction.injectList(ControlLs.controlSubLs)}"></action>
			<action name="2" expression="#{ControlSubLsList.orderBy('listid')}"></action>
			<action name="3" expression="#{ControlSubLsList.orderBy('listid')}"></action>
		</event>
		<transition to="show details"></transition>
	</node>

	<decision name="next?" expression="#{(button.getMnemonic())}">
		<transition to="requisiti" name="SelSub"></transition>
		<transition to="show history" name="BACK"></transition>
	</decision>

	<node name="requisiti">
		<event type="node-enter">
			<action name="1" expression="#{not empty ControlSubLs ? RequisitoAction.injectList(ControlSubLs.requisito) : RequisitoAction.ejectList()}"></action>
			<action name="2" expression="#{RequisitoList.orderBy('ordering')}"></action>
			<action name="3" expression="#{RequisitoList.orderBy('ordering')}"></action>
		</event>
		<transition to="show details"></transition>
	</node>
	 
	 
	
	<end-state name="end">
	</end-state>
	
	

 <action expression="" name="security"/>


</process-definition>