<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="MacroTextManage">


	<description></description>


	<start-state name="start-state1">
		<description>
			2
		</description>
		<transition to="is subprocess?"></transition>
	</start-state>


	<node name="read macro text user">
		<event type="node-enter">
			<action name="1" expression="#{MacroTextSuggestionAction.select.add('context')}"></action>
			<action name="2" expression="#{MacroTextSuggestionAction.select.add('title.string')}"></action>
			<action name="3" expression="#{MacroTextSuggestionAction.select.add('languageCode')}"></action>
			<action name="4" expression="#{MacroTextSuggestionAction.select.add('employeeRole.code')}"></action>
			<action name="5" expression="#{MacroTextSuggestionAction.equal.put('author.internalId',userBean.currentEmployee.internalId)}"></action>
			<action name="6" expression="#{MacroTextSuggestionAction.read()}"></action>
		</event>
		<transition to="macro text UI"></transition>
	</node>

	<task-node name="macro text UI">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_HBS/CORE/FORMS/f_macro_text_manage')}"></action>
		</event>
		<transition to="decision1"></transition>
	</task-node>

	<decision name="decision1" expression="#{(button.getMnemonic())}">
		<transition to="MacroText update?" name="SAVE"></transition>
		<transition to="super-state4/delete mactoText" name="DELETE"></transition>
		<transition to="inject new entity" name="ADD"></transition>
		<transition to="enable label" name="MODIFY"></transition>
		<transition to="annulla inserimento" name="CANCEL"></transition>
		<transition to="eject macroText" name="BACK"></transition>
		<transition to="is subProcess 2?" name="READ"></transition>
	</decision>

	<node name="eject macroText">
		<event type="node-enter">
			<action name="1" expression="#{MacroTextSuggestionAction.equal.put('languageCode', null)}"></action>
			<action name="2" expression="#{MacroTextSuggestionAction.equal.put('context', null)}"></action>
			<action name="3" expression="#{MacroTextSuggestionAction.eject()}"></action>
			<action name="4" expression="#{MacroTextSuggestionAction.ejectList('MacroTextSuggestionList')}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<decision name="is SDL in conv?" expression="#{!empty ServiceDeliveryLocation}">
		<transition to="super-state2/link to Employee and Role" name="false"></transition>
		<transition to="sdl type?" name="true"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="link to WARD">
			<event type="node-enter">
				<action name="1" expression="#{MacroTextSuggestionAction.setCodeValue('code', 'PHIDIC','PHI_HOSPITAL_BREAKDOWN_STRUCTURE', 'WARD' )}"></action>
				<action name="2" expression="#{MacroTextSuggestionAction.create()}"></action>
				<action name="3" expression="#{MacroTextSuggestionAction.link('wardSDLOC',ServiceDeliveryLocation)}"></action>
			</event>
			<transition to="../ejectMacro"></transition>
		</node>
		<node name="link to UOF">
			<event type="node-enter">
				<action name="1" expression="#{MacroTextSuggestionAction.setCodeValue('code', 'PHIDIC','PHI_HOSPITAL_BREAKDOWN_STRUCTURE', 'UOF' )}"></action>
				<action name="2" expression="#{MacroTextSuggestionAction.create()}"></action>
				<action name="3" expression="#{MacroTextSuggestionAction.link('opUnitSDLOC',ServiceDeliveryLocation)}"></action>
			</event>
			<transition to="../ejectMacro"></transition>
		</node>
	</super-state>

	<super-state name="super-state2">
		<node name="link to Employee and Role">
			<event type="node-enter">
				<action name="1" expression="#{MacroTextSuggestionAction.create()}"></action>
				<action name="2" expression="#{MacroTextSuggestionAction.link('author',userBean.currentEmployee)}"></action>
				<action name="3" expression="#{MacroTextSuggestionAction.link('employeeRole',EmployeeRole)}"></action>
			</event>
			<transition to="../ejectMacro"></transition>
		</node>
	</super-state>

	<super-state name="super-state3">
		<node name="update macroText">
			<event type="node-enter">
				<action name="1" expression="#{MacroTextSuggestionAction.create()}"></action>
			</event>
			<transition to="../ejectMacro"></transition>
		</node>
	</super-state>

	<super-state name="super-state4">
		<node name="delete mactoText">
			<event type="node-enter">
				<action name="1" expression="#{MacroTextSuggestionAction.delete()}"></action>
			</event>
			<transition to="../is subProcess 2?"></transition>
		</node>
	</super-state>

	<decision name="is subprocess?" expression="#{processManager.currentProcess eq 'MOD_HBS/CORE/PROCESSES/WARD/WardMacroTextManage' or 
processManager.currentProcess eq 'MOD_HBS/CORE/PROCESSES/UOF/UOFMacroTextManage'}">
		<transition to="macro text UI" name="true"></transition>
		<transition to="eject sdl" name="false"></transition>
	</decision>

	<node name="eject sdl">
		<event type="node-enter">
			<action name="1" expression="#{ServiceDeliveryLocationAction.eject()}"></action>
		</event>
		<transition to="macro text UI"></transition>
	</node>

	<decision name="MacroText update?" expression="#{MacroTextSuggestion.getInternalId() &gt;0}">
		<transition to="is SDL in conv?" name="false"></transition>
		<transition to="super-state3/update macroText" name="true"></transition>
	</decision>

	<node name="enable label">
		<event type="node-enter">
			<action name="1" expression="#{MacroTextSuggestionAction.temporary.put('enableLabel',true)}"></action>
			<action name="2" expression="#{MacroTextSuggestionAction.temporary.put('save',true)}"></action>
		</event>
		<transition to="macro text UI"></transition>
	</node>

	<node name="ejectMacro">
		<event type="node-enter">
			<action name="1" expression="#{MacroTextSuggestionAction.temporary.put('enableLabel',false)}"></action>
			<action name="2" expression="#{MacroTextSuggestionAction.eject()}"></action>
		</event>
		<transition to="is subProcess 2?"></transition>
	</node>

	<node name="inject new entity">
		<event type="node-enter">
			<action name="1" expression="#{MacroTextSuggestionAction.inject(MacroTextSuggestionAction.newEntity())}"></action>
		</event>
		<transition to="enable label"></transition>
	</node>

	<node name="annulla inserimento">
		<event type="node-enter">
			<action name="1" expression="#{MacroTextSuggestionAction.eject()}"></action>
			<action name="2" expression="#{MacroTextSuggestionAction.temporary.put('enableLabel',false)}"></action>
		</event>
		<transition to="macro text UI"></transition>
	</node>

	<decision name="is subProcess 2?" expression="#{processManager.currentProcess eq 'MOD_HBS/CORE/PROCESSES/WARD/WardMacroTextManage' or 
processManager.currentProcess eq 'MOD_HBS/CORE/PROCESSES/UOF/UOFMacroTextManage'}">
		<transition to="read macro text user" name="false"></transition>
		<transition to="read macro text WARD or UOF" name="true"></transition>
	</decision>

	<node name="read macro text WARD or UOF">
		<event type="node-enter">
			<action name="1" expression="#{MacroTextSuggestionAction.select.add('context')}"></action>
			<action name="2" expression="#{MacroTextSuggestionAction.select.add('title.string')}"></action>
			<action name="3" expression="#{MacroTextSuggestionAction.select.add('languageCode')}"></action>
			<action name="4" expression="#{processManager.currentProcess eq 'MOD_HBS/CORE/PROCESSES/WARD/WardMacroTextManage' ? MacroTextSuggestionAction.equal.put('wardSDLOC.internalId',ServiceDeliveryLocation.internalId) : MacroTextSuggestionAction.equal.put('opUnitSDLOC.internalId',ServiceDeliveryLocation.internalId)}"></action>
			<action name="5" expression="#{MacroTextSuggestionAction.read()}"></action>
		</event>
		<transition to="macro text UI"></transition>
	</node>

	<decision name="sdl type?" expression="#{ServiceDeliveryLocation.code.code}">
		<transition to="super-state1/link to WARD" name="WARD"></transition>
		<transition to="super-state1/link to UOF" name="UOF"></transition>
	</decision>


	<end-state name="end-state1">
	</end-state>


	<action name="security" expression="MODENA:1;|TREVISO:1;|BOLZANO:1;11;"></action>


</process-definition>
