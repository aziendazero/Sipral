<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="gestioneTipologiaProdottoFinito">


	<start-state name="start-state1">
		<transition to="bottone"></transition>
	</start-state>


	<task-node name="task-node1">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/gestioneTipologiaProdottoFinito')}"></action>
		</event>
		<transition to="decision1"></transition>
	</task-node>

	<decision name="bottone" expression="#{(button.getMnemonic())}">
		<transition to="read" name="addTPF"></transition>
		<transition to="parent entity? 2" name="delTPF"></transition>
	</decision>

	<node name="unlink benessere">
		<event type="node-enter">
			<action name="1" expression="#{BenessereOrgAction.unLink('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state1/save benessere"></transition>
	</node>

	<decision name="decision1" expression="#{(button.getMnemonic())}">
		<transition to="end-state1" name="BtnBack"></transition>
		<transition to="parent entity?" name="BtnSave"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="save benessere">
			<event type="node-enter">
				<action name="1" expression="#{BenessereOrgAction.link('procpratiche',Procpratiche)}"></action>
				<action name="2" expression="#{BenessereOrgAction.create()}"></action>
				<action name="3" expression="#{BenessereOrgAction.eject()}"></action>
			</event>
			<transition to="../end-state2"></transition>
		</node>
	</super-state>

	<node name="read">
		<event type="node-enter">
			<action name="1" expression="#{TipoProdFinitoAction.inject(TipoProdFinitoAction.newEntity())}"></action>
		</event>
		<transition to="task-node1"></transition>
	</node>

	<node name="link benessere">
		<event type="node-enter">
			<action name="1" expression="#{BenessereOrgAction.link('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state1/save benessere"></transition>
	</node>

	<decision name="parent entity?" expression="#{TipoProdFinitoAction.temporary.get('parentEntity')}">
		<transition to="link benessere" name="COUNSELING"></transition>
		<transition to="link stili di vita" name="LIFESTYLE"></transition>
		<transition to="link formazione" name="TRAINING"></transition>
		<transition to="link informazione" name="INFORMATION"></transition>
	</decision>

	<node name="link stili di vita">
		<event type="node-enter">
			<action name="1" expression="#{LifestyleAction.link('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state2/save stili di vita"></transition>
	</node>

	<decision name="parent entity? 2" expression="#{TipoProdFinitoAction.temporary.get('parentEntity')}">
		<transition to="unlink benessere" name="COUNSELING"></transition>
		<transition to="unlink stili di vita" name="LIFESTYLE"></transition>
		<transition to="unilnk formazione" name="TRAINING"></transition>
		<transition to="unlink informazione" name="INFORMATION"></transition>
	</decision>

	<node name="unlink stili di vita">
		<event type="node-enter">
			<action name="1" expression="#{LifestyleAction.unLink('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state2/save stili di vita"></transition>
	</node>

	<super-state name="super-state2">
		<node name="save stili di vita">
			<event type="node-enter">
				<action name="1" expression="#{LifestyleAction.link('procpratiche',Procpratiche)}"></action>
				<action name="2" expression="#{LifestyleAction.create()}"></action>
				<action name="3" expression="#{LifestyleAction.eject()}"></action>
			</event>
			<transition to="../end-state2" name=""></transition>
		</node>
	</super-state>

	<node name="unilnk formazione">
		<event type="node-enter">
			<action name="1" expression="#{FormazioneAction.unLink('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state3/save formazione"></transition>
	</node>

	<super-state name="super-state3">
		<node name="save formazione">
			<event type="node-enter">
				<action name="1" expression="#{FormazioneAction.link('procpratiche',Procpratiche)}"></action>
				<action name="2" expression="#{FormazioneAction.create()}"></action>
				<action name="3" expression="#{FormazioneAction.eject()}"></action>
			</event>
			<transition to="../end-state4"></transition>
		</node>
	</super-state>

	<node name="link formazione">
		<event type="node-enter">
			<action name="1" expression="#{FormazioneAction.link('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state3/save formazione"></transition>
	</node>

	<node name="link informazione">
		<event type="node-enter">
			<action name="1" expression="#{InformazioneAction.link('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state4/save informazione"></transition>
	</node>

	<super-state name="super-state4">
		<node name="save informazione">
			<event type="node-enter">
				<action name="1" expression="#{InformazioneAction.link('procpratiche',Procpratiche)}"></action>
				<action name="2" expression="#{InformazioneAction.create()}"></action>
				<action name="3" expression="#{InformazioneAction.eject()}"></action>
			</event>
			<transition to="../end-state4"></transition>
		</node>
	</super-state>

	<node name="unlink informazione">
		<event type="node-enter">
			<action name="1" expression="#{InformazioneAction.unLink('tipoProdFinito', TipoProdFinito)}"></action>
		</event>
		<transition to="super-state4/save informazione"></transition>
	</node>


	<end-state name="end-state1"></end-state>

	<end-state name="end-state2"></end-state>

	<end-state name="end-state4"></end-state>


</process-definition>