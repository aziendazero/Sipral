package com.phi.entities.baseEntity;

// Generated 15-lug-2015 13.47.19 by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.ForeignKey;
import org.hibernate.annotations.Index;
import org.hibernate.envers.Audited;

import com.phi.cs.exception.DictionaryException;
import com.phi.cs.exception.PersistenceException;
import com.phi.cs.vocabulary.Vocabularies;
import com.phi.cs.vocabulary.VocabulariesImpl;
import com.phi.entities.baseEntity.BaseEntity;
import com.phi.entities.dataTypes.CodeValue;
import com.phi.entities.dataTypes.CodeValuePhi;

/**
 * Sopralluoghi generated by hbm2java
 */

import javax.persistence.CascadeType;
import javax.persistence.OneToOne;
import com.phi.entities.baseEntity.Attivita;

@Entity
@Table(name = "sopralluoghi")
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
@Audited
public class Sopralluoghi extends BaseEntity implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 5563797544253726698L;

	/**
	*  javadoc for noCompliance
	*/
	private Boolean noCompliance;

	@Column(name="no_compliance")
	public Boolean getNoCompliance(){
		return noCompliance;
	}

	public void setNoCompliance(Boolean noCompliance){
		this.noCompliance = noCompliance;
	}

	/**
	*  javadoc for tipoVigilanza
	*/
	private CodeValuePhi tipoVigilanza;

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="tipoVigilanza")
	@ForeignKey(name="FK_Sopralluoghi_tipoVigilanza")
	@Index(name="IX_Sopralluoghi_tipoVigilanza")
	public CodeValuePhi getTipoVigilanza(){
		return tipoVigilanza;
	}

	public void setTipoVigilanza(CodeValuePhi tipoVigilanza){
		this.tipoVigilanza = tipoVigilanza;
	}

	/**
	*  javadoc for motivoNonSPI
	*/
	private CodeValuePhi motivoNonSPI;

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="motivoNonSPI")
	@ForeignKey(name="FK_Sopralluoghi_motivoNonSPI")
	//@Index(name="IX_Sopralluoghi_motivoNonSPI")
	public CodeValuePhi getMotivoNonSPI(){
		return motivoNonSPI;
	}

	public void setMotivoNonSPI(CodeValuePhi motivoNonSPI){
		this.motivoNonSPI = motivoNonSPI;
	}

	/**
	*  javadoc for attivita
	*/
	private Attivita attivita;

	@OneToOne(fetch=FetchType.LAZY, mappedBy="sopralluogo", cascade=CascadeType.PERSIST)
	public Attivita getAttivita(){
		return attivita;
	}

	public void setAttivita(Attivita attivita){
		this.attivita = attivita;
	}

	@Override
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "Sopralluoghi_sequence")
	@SequenceGenerator(name = "Sopralluoghi_sequence", sequenceName = "Sopralluoghi_sequence")
	@Column(name = "internal_id")
	public long getInternalId() {
		return internalId;
	}
	
	@Override
	public void setInternalId(long internalId) {
		this.internalId = internalId;
	}
	
	private CodeValue tipoSopralluogo;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="tipo_sopralluogo")
	@ForeignKey(name="FK_Sopr_type")
	//@Index(name="IX_Sopr_type")
	public CodeValue getTipoSopralluogo() {
		return tipoSopralluogo;
	}

	public void setTipoSopralluogo(CodeValue tipoSopralluogo) {
		this.tipoSopralluogo = tipoSopralluogo;
	}
	
	private CodeValue tipoAttivita;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="tipo_attivita")
	@ForeignKey(name="FK_Sopr_att")
	//@Index(name="IX_Sopr_att")
	public CodeValue getTipoAttivita() {
		return tipoAttivita;
	}

	public void setTipoAttivita(CodeValue tipoAttivita) {
		this.tipoAttivita = tipoAttivita;
	}
	
	private CodeValue esito;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="esito")
	@ForeignKey(name="FK_Sopr_esito")
	//@Index(name="IX_Sopr_esitot")
	public CodeValue getEsito() {
		return esito;
	}

	public void setEsito(CodeValue esito) {
		this.esito = esito;
	}
	
	private String elencoTesti;
	
	@Column(name = "elenco_testi")
	public String getElencoTesti() {
		return this.elencoTesti;
	}

	public void setElencoTesti(String elencoTesti) {
		this.elencoTesti = elencoTesti;
	}
	
	private String allegati;
	
	@Column(name = "allegati")
	public String getAllegati() {
		return this.allegati;
	}

	public void setAllegati(String allegati) {
		this.allegati = allegati;
	}
	
	private String descrizioneLuoghi;
	
	@Column(name = "descrizione_luoghi", length=4000)
	public String getDescrizioneLuoghi() {
		return this.descrizioneLuoghi;
	}

	public void setDescrizioneLuoghi(String descrizioneLuoghi) {
		this.descrizioneLuoghi = descrizioneLuoghi;
	}
	
	private String descrizioneEvento;
	
	@Column(name = "descrizione_evento")
	public String getDescrizioneEvento() {
		return this.descrizioneEvento;
	}

	public void setDescrizioneEvento(String descrizioneEvento) {
		this.descrizioneEvento = descrizioneEvento;
	}
	
	private String attivitaSvolta;
	
	@Column(name = "attivita_svolta",length=2500)
	public String getAttivitaSvolta() {
		return this.attivitaSvolta;
	}

	public void setAttivitaSvolta(String attivitaSvolta) {
		this.attivitaSvolta = attivitaSvolta;
	}
	
	private boolean violazioni;
	
	@Column(name="violazioni")
	public boolean getViolazioni() {
		return violazioni;
	}

	public void setViolazioni(boolean violazioni) {
		this.violazioni = violazioni;
	}	
	
	private String considerazioni;
	
	@Column(name = "considerazioni", length=4000)
	public String getConsiderazioni() {
		return this.considerazioni;
	}

	public void setConsiderazioni(String considerazioni) {
		this.considerazioni = considerazioni;
	}

	private String conclusioni;
	
	@Column(name = "conclusioni")
	public String getConclusioni() {
		return this.conclusioni;
	}

	public void setConclusioni(String conclusioni) {
		this.conclusioni = conclusioni;
	}
	
	private String note;
	
	@Column(name = "note", length=4000)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}
	
	private String buonePratiche;
	
	@Column(name = "buone_pratiche")
	public String getBuonePratiche() {
		return this.buonePratiche;
	}

	public void setBuonePratiche(String buonePratiche) {
		this.buonePratiche = buonePratiche;
	}
	
	private String osservazioniDiMiglioramento;
	
	@Column(name = "osservazioni_miglioramento")
	public String getOsservazioniDiMiglioramento() {
		return this.osservazioniDiMiglioramento;
	}

	public void setOsservazioniDiMiglioramento(String osservazioniDiMiglioramento) {
		this.osservazioniDiMiglioramento = osservazioniDiMiglioramento;
	}
}
