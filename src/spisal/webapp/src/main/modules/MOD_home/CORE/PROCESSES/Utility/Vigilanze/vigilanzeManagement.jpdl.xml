<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="vigilanzeManagement">


	<start-state name="start-state1">
		<transition to="setTemp"></transition>
	</start-state>


	<decision name="Button1?" expression="#{button.value}">
		<transition to="Search Company" name="BtnNewPGS"></transition>
		<transition to="del popup 1" name="BtnDelPGS"></transition>
		<transition to="Search Person" name="BtnNewPR"></transition>
		<transition to="del popup 2" name="BtnDelPR"></transition>
		<transition to="setTemp3" name="BtnNewC"></transition>
		<transition to="del popup 3" name="BtnDelCAmianto"></transition>
		<transition to="setMnemonic1" name="BtnInfoC"></transition>
		<transition to="operaiManagement" name="BtnAddLavoratore"></transition>
		<transition to="Search Cantiere" name="BtnNewCAmianto"></transition>
		<transition to="inject" name="BtnInfoPGSAmianto"></transition>
		<transition to="del popup 3" name="BtnDelC"></transition>
		<transition to="Search Company" name="BtnNewPGSAmianto"></transition>
		<transition to="del popup 1" name="BtnDelPGSAmianto"></transition>
		<transition to="setMnemonic1" name="BtnInfoCAmianto"></transition>
		<transition to="set mnemonic3" name="BtnNewCommittenteAmianto"></transition>
		<transition to="del popup 4" name="BtnDelCommittenteAmianto"></transition>
		<transition to="del popup 5" name="BtnDelLavoratore"></transition>
		<transition to="changeMnemonic" name="BtnEditCAmianto"></transition>
		<transition to="set mnemonic editCantiere" name="BtnEditC"></transition>
		<transition to="InjectFromPGS" name="BtnInfPGS"></transition>
		<transition to="InjectFromPRS" name="BtnInfPRS"></transition>
		<transition to="InjectFromPGS" name="BtnInfPGS2"></transition>
		<transition to="InjectFromPRS" name="BtnInfPRS2"></transition>
		<transition to="del popup 2" name="BtnDelPR2"></transition>
		<transition to="Search Person" name="BtnNewPR2"></transition>
		<transition to="search for sito" name="BtnEditDAmianto"></transition>
		<transition to="sitoBonificaDittaPop" name="BtnInfoDAmianto"></transition>
		<transition to="delpopupD" name="BtnDelDAmianto"></transition>
		<transition to="inject ateco" name="compartoAteco"></transition>
		<transition to="InjectFromPGS 2" name="BtnPGManagement"></transition>
		<transition to="choose committente type" name="BtnCommittente"></transition>
		<transition to="InjectFromPGS" name="BtnInfPGS3"></transition>
		<transition to="read stuff last version" name="BtnUpdateC"></transition>
		<transition to="read stuff last version" name="BtnUpdateB"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="NewPGS">
			<event type="node-enter">
				<action name="1" expression="#{PersonaGiuridicaSedeAction.inject(PersonaGiuridicaSedeAction.newEntity())}"></action>
				<action name="2" expression="#{PersonaGiuridicaSedeAction.link('personaGiuridica',PersoneGiuridiche)}"></action>
				<action name="3" expression="#{PersonaGiuridicaSedeAction.link('sede',Sedi)}"></action>
				<action name="4" expression="#{PersonaGiuridicaSedeAction.link('vigilanza',Vigilanza)}"></action>
				<action name="5" expression="#{PersonaGiuridicaSedeAction.create()}"></action>
				<action name="6" expression="#{VigilanzaAction.copyAteco(PersoneGiuridiche,Sedi)}"></action>
			</event>
			<transition to="../end-state2"></transition>
		</node>
	</super-state>

	<process-state name="Search Company">
		<sub-process name="MOD_Company/CORE/PROCESSES/companies" binding="late"></sub-process>
		<transition to="remTemp1"></transition>
	</process-state>

	<decision name="Button2?" expression="#{(button.getMnemonic())}">
		<transition to="end-state2" name="BtnBack"></transition>
		<transition to="super-state1/NewPGS" name="BtnSave"></transition>
	</decision>

	<node name="setTemp">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="Button1?"></transition>
	</node>

	<node name="remTemp1">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="Button2?"></transition>
	</node>

	<task-node name="del popup 1">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="Button3?"></transition>
	</task-node>

	<decision name="Button3?" expression="#{(button.getMnemonic())}">
		<transition to="end-state2" name="BtnCancel"></transition>
		<transition to="super-state2/DelPGS" name="BtnDel"></transition>
	</decision>

	<super-state name="super-state2">
		<node name="DelPGS">
			<event type="node-enter">
				<action name="1" expression="#{PersonaGiuridicaSede.setPersonaGiuridica(null)}"></action>
				<action name="2" expression="#{PersonaGiuridicaSede.setSede(null)}"></action>
				<action name="3" expression="#{PersonaGiuridicaSede.setVigilanza(null)}"></action>
				<action name="4" expression="#{Vigilanza.personaGiuridicaSede.remove(PersonaGiuridicaSede)}"></action>
				<action name="5" expression="#{PersonaGiuridicaSedeAction.delete()}"></action>
				<action name="6" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state2"></transition>
		</node>
	</super-state>

	<node name="remTemp2">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="Button4?"></transition>
	</node>

	<process-state name="Search Person">
		<sub-process name="MOD_person/CORE/PROCESSES/ManageMulti" binding="late"></sub-process>
		<transition to="remTemp2"></transition>
	</process-state>

	<decision name="Button4?" expression="#{(button.getMnemonic())}">
		<transition to="end-state1" name="BtnBack"></transition>
		<transition to="super-state3/NewPR" name="BtnSave"></transition>
	</decision>

	<super-state name="super-state3">
		<node name="NewPR">
			<event type="node-enter">
				<action name="1" expression="#{PersonaRuoloAction.inject(PersonaRuoloAction.newEntity())}"></action>
				<action name="2" expression="#{PersonaRuoloAction.link('person',Person)}"></action>
				<action name="3" expression="#{PersonaRuoloAction.link('vigilanza',Vigilanza)}"></action>
				<action name="4" expression="#{PersonaRuoloAction.create()}"></action>
			</event>
			<transition to="../end-state1"></transition>
		</node>
	</super-state>

	<task-node name="del popup 2">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="Button5?"></transition>
	</task-node>

	<decision name="Button5?" expression="#{(button.getMnemonic())}">
		<transition to="end-state1" name="BtnCancel"></transition>
		<transition to="super-state4/DelPr" name="BtnDel"></transition>
	</decision>

	<super-state name="super-state4">
		<node name="DelPr">
			<event type="node-enter">
				<action name="1" expression="#{PersonaRuolo.setPerson(null)}"></action>
				<action name="2" expression="#{PersonaRuolo.setVigilanza(null)}"></action>
				<action name="3" expression="#{Vigilanza.personaRuolo.remove(PersonaRuolo)}"></action>
				<action name="4" expression="#{PersonaRuoloAction.delete()}"></action>
				<action name="5" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state1"></transition>
		</node>
		<node name="DelD">
			<event type="node-enter">
				<action name="1" expression="#{Vigilanza.setSitoBonificaDitta(null)}"></action>
				<action name="2" expression="#{Vigilanza.setSitoBonificaSede(null)}"></action>
				<action name="3" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state1"></transition>
		</node>
	</super-state>

	<node name="remTemp3">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
			<action name="2" expression="#{VigilanzaAction.temporary.remove('newCantiere')}"></action>
		</event>
		<transition to="Button6?"></transition>
	</node>

	<process-state name="Search Cantiere">
		<sub-process name="MOD_Cantieri/PROCESSES/GestioneCantieri" binding="late"></sub-process>
		<transition to="remTemp3"></transition>
	</process-state>

	<decision name="Button6?" expression="#{(button.getMnemonic())}">
		<transition to="end-state3" name="BtnBack"></transition>
		<transition to="super-state5/LinkC" name="BtnSave"></transition>
		<transition to="end-state3" name="BtnSelect"></transition>
	</decision>

	<super-state name="super-state5">
		<node name="LinkC">
			<event type="node-enter">
				<action name="1" expression="#{Vigilanza.setSitoBonificaDitta(null)}"></action>
				<action name="2" expression="#{Vigilanza.setSitoBonificaSede(null)}"></action>
				<action name="3" expression="#{VigilanzaAction.link('cantiere',Cantiere)}"></action>
				<action name="4" expression="#{Vigilanza.setEntita(null)}"></action>
				<action name="5" expression="#{Vigilanza.setSpecificazione(null)}"></action>
				<action name="6" expression="#{Vigilanza.setImo(null)}"></action>
				<action name="7" expression="#{Vigilanza.setTarga(null)}"></action>
				<action name="8" expression="#{Vigilanza.setAddr(null)}"></action>
				<action name="9" expression="#{Vigilanza.setLatitudine(null)}"></action>
				<action name="10" expression="#{Vigilanza.setLongitudine(null)}"></action>
				<action name="11" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state3"></transition>
		</node>
	</super-state>

	<task-node name="del popup 3">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="Button7?"></transition>
	</task-node>

	<decision name="Button7?" expression="#{(button.getMnemonic())}">
		<transition to="end-state1" name="BtnCancel"></transition>
		<transition to="super-state6/DelC" name="BtnDel"></transition>
	</decision>

	<super-state name="super-state6">
		<node name="DelC">
			<event type="node-enter">
				<action name="1" expression="#{Vigilanza.setCantiere(null)}"></action>
				<action name="2" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../eject Cantiere"></transition>
		</node>
	</super-state>

	<node name="eject Cantiere">
		<event type="node-enter">
			<action name="1" expression="#{CantiereAction.eject()}"></action>
			<action name="2" expression="#{CommittenteAction.ejectList('CommittenteList')}"></action>
			<action name="3" expression="#{CommittenteAction.ejectList('ToRemoveCommittenteList')}"></action>
			<action name="4" expression="#{PersoneCantiereAction.ejectList('PersoneCantiere1List')}"></action>
			<action name="5" expression="#{PersoneCantiereAction.ejectList('ToRemovePersoneCantiere1List')}"></action>
			<action name="6" expression="#{PersoneCantiereAction.ejectList('PersoneCantiere2List')}"></action>
			<action name="7" expression="#{PersoneCantiereAction.ejectList('ToRemovePersoneCantiere2List')}"></action>
			<action name="8" expression="#{PersoneCantiereAction.ejectList('PersoneCantiere3List')}"></action>
			<action name="9" expression="#{PersoneCantiereAction.ejectList('ToRemovePersoneCantiere3List')}"></action>
			<action name="10" expression="#{DitteCantiereAction.ejectList('DitteCantiereList')}"></action>
			<action name="11" expression="#{DitteCantiereAction.ejectList('ToRemoveDitteCantiereList')}"></action>
			<action name="12" expression="#{TagCantiereAction.ejectList('TagCantiereList')}"></action>
			<action name="13" expression="#{TagCantiereAction.ejectList('ToRemoveTagCantiereList')}"></action>
		</event>
		<transition to="end-state1"></transition>
	</node>

	<node name="setMnemonic1">
		<event type="node-enter">
			<action name="1" expression="#{button.setMnemonic('BtnCantiereDetails')}"></action>
		</event>
		<transition to="Details"></transition>
	</node>

	<process-state name="Details">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Generico/detailsPopUp" binding="late"></sub-process>
		<transition to="end-state4"></transition>
	</process-state>

	<process-state name="operaiManagement">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Vigilanze/operaiManagement" binding="late"></sub-process>
		<transition to="end-state3"></transition>
	</process-state>

	<node name="setMnemonic2">
		<event type="node-enter">
			<action name="1" expression="#{button.setMnemonic('BtnCompanyDetails')}"></action>
		</event>
		<transition to="Details"></transition>
	</node>

	<node name="inject">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.inject(PersonaGiuridicaSede.personaGiuridica)}"></action>
			<action name="2" expression="#{SediAction.inject(PersonaGiuridicaSede.sede)}"></action>
		</event>
		<transition to="setMnemonic2"></transition>
	</node>

	<process-state name="Committenti">
		<sub-process name="MOD_Cantieri/PROCESSES/Utility/committenti" binding="late"></sub-process>
		<transition to="super-state7/Save Committente"></transition>
	</process-state>

	<node name="set mnemonic3">
		<event type="node-enter">
			<action name="1" expression="#{button.setMnemonic('addCommittente')}"></action>
		</event>
		<transition to="Committenti"></transition>
	</node>

	<super-state name="super-state7">
		<node name="Save Committente">
			<event type="node-enter">
				<action name="1" expression="#{CommittenteAction.create()}"></action>
				<action name="2" expression="#{CommittenteAction.link('vigilanza',Vigilanza)}"></action>
			</event>
			<transition to="../end-state4"></transition>
		</node>
	</super-state>

	<super-state name="super-state8">
		<node name="Del Committente">
			<event type="node-enter">
				<action name="1" expression="#{Committente.setPerson(null)}"></action>
				<action name="2" expression="#{Committente.setPersoneGiuridiche(null)}"></action>
				<action name="3" expression="#{Committente.setVigilanza(null)}"></action>
				<action name="4" expression="#{Vigilanza.committenti.remove(Committente)}"></action>
				<action name="5" expression="#{CommittenteAction.delete()}"></action>
				<action name="6" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state4"></transition>
		</node>
	</super-state>

	<task-node name="del popup 4">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="Button8?"></transition>
	</task-node>

	<decision name="Button8?" expression="#{(button.getMnemonic())}">
		<transition to="super-state8/Del Committente" name="BtnDel"></transition>
		<transition to="end-state4" name="BtnCancel"></transition>
	</decision>

	<task-node name="del popup 5">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="Button9?"></transition>
	</task-node>

	<decision name="Button9?" expression="#{(button.getMnemonic())}">
		<transition to="end-state4" name="BtnCancel"></transition>
		<transition to="super-state9/Del Operaio" name="BtnDel"></transition>
	</decision>

	<super-state name="super-state9">
		<node name="Del Operaio">
			<event type="node-enter">
				<action name="1" expression="#{OperaioAmianto.setEsposto(null)}"></action>
				<action name="2" expression="#{OperaioAmianto.setPersona(null)}"></action>
				<action name="3" expression="#{OperaioAmianto.setVigilanza(null)}"></action>
				<action name="4" expression="#{Vigilanza.operaiAmianto.remove(OperaioAmianto)}"></action>
				<action name="5" expression="#{OperaioAmiantoAction.delete()}"></action>
				<action name="6" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state4"></transition>
		</node>
	</super-state>

	<process-state name="manage cantieri">
		<sub-process name="MOD_Cantieri/PROCESSES/Utility/manageCantieri" binding="late"></sub-process>
		<transition to="cloned Cantiere?"></transition>
	</process-state>

	<node name="set mnemonic editCantiere">
		<event type="node-enter">
			<action name="1" expression="#{button.setMnemonic('editCantiere')}"></action>
		</event>
		<transition to="manage cantieri"></transition>
	</node>

	<node name="InjectFromPGS">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.inject(PersonaGiuridicaSede.personaGiuridica)}"></action>
			<action name="2" expression="#{SediAction.inject(PersonaGiuridicaSede.sede)}"></action>
		</event>
		<transition to="datailsPopUp"></transition>
	</node>

	<process-state name="datailsPopUp">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Generico/detailsPopUp" binding="late"></sub-process>
		<transition to="end-state3"></transition>
	</process-state>

	<node name="InjectFromPRS">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.inject(PersonaRuolo.person)}"></action>
		</event>
		<transition to="datailsPopUp"></transition>
	</node>

	<node name="changeMnemonic">
		<event type="node-enter">
			<action name="1" expression="#{button.setMnemonic('editCantiere')}"></action>
		</event>
		<transition to="manage cantieri"></transition>
	</node>

	<node name="sitoBonificaDittaPop">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.inject(Vigilanza.sitoBonificaDitta)}"></action>
			<action name="2" expression="#{SediAction.inject(Vigilanza.sitoBonificaSede)}"></action>
		</event>
		<transition to="datailsPopUp"></transition>
	</node>

	<process-state name="search for sito">
		<sub-process name="MOD_Company/CORE/PROCESSES/companies" binding="late"></sub-process>
		<transition to="remTempz"></transition>
	</process-state>

	<node name="remTempz">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="Buttonz?"></transition>
	</node>

	<decision name="Buttonz?" expression="#{(button.getMnemonic())}">
		<transition to="super-state10/saveSito" name="BtnSave"></transition>
		<transition to="end-state5" name="BtnBack"></transition>
	</decision>

	<super-state name="super-state10">
		<node name="saveSito">
			<event type="node-enter">
				<action name="1" expression="#{Vigilanza.setCantiere(null)}"></action>
				<action name="2" expression="#{CantiereAction.eject()}"></action>
				<action name="3" expression="#{Vigilanza.setSitoBonificaDitta(PersoneGiuridiche)}"></action>
				<action name="4" expression="#{empty Sedi ? SediAction.injectSedePrincipale(PersoneGiuridiche.sedi) : ''}"></action>
				<action name="5" expression="#{Vigilanza.setSitoBonificaSede(Sedi)}"></action>
				<action name="6" expression="#{Vigilanza.setEntita(null)}"></action>
				<action name="7" expression="#{Vigilanza.setSpecificazione(null)}"></action>
				<action name="8" expression="#{Vigilanza.setImo(null)}"></action>
				<action name="9" expression="#{Vigilanza.setTarga(null)}"></action>
				<action name="10" expression="#{Vigilanza.setAddr(null)}"></action>
				<action name="11" expression="#{Vigilanza.setLatitudine(null)}"></action>
				<action name="12" expression="#{Vigilanza.setLongitudine(null)}"></action>
				<action name="13" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state5"></transition>
		</node>
	</super-state>

	<task-node name="delpopupD">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_home/CORE/FORMS/popup/Del_Oggetto_alert')}"></action>
		</event>
		<transition to="button5d?"></transition>
	</task-node>

	<decision name="button5d?" expression="#{(button.getMnemonic())}">
		<transition to="super-state4/DelD" name="BtnDel"></transition>
		<transition to="end-state1" name="BtnCancel"></transition>
	</decision>

	<process-state name="comparto ateco">
		<sub-process name="MOD_RegistroEsposti/CORE/PROCESSES/Utilities/filterAteco" binding="late"></sub-process>
		<transition to="set ateco"></transition>
	</process-state>

	<node name="inject ateco">
		<event type="node-enter">
			<action name="1" expression="#{CodeValueAtecoAction.inject(Vigilanza.comparto)}"></action>
		</event>
		<transition to="comparto ateco"></transition>
	</node>

	<node name="set ateco">
		<event type="node-enter">
			<action name="1" expression="#{not empty CodeValueAteco ? Vigilanza.setComparto(CodeValueAteco) : ''}"></action>
			<action name="2" expression="#{CodeValueAtecoAction.eject()}"></action>
		</event>
		<transition to="super-state11/SAVE VIGILANZA"></transition>
	</node>

	<super-state name="super-state11">
		<node name="SAVE VIGILANZA">
			<event type="node-enter">
				<action name="1" expression="#{VigilanzaAction.create()}"></action>
			</event>
			<transition to="../end-state5"></transition>
		</node>
	</super-state>

	<process-state name="CompanyManagement">
		<sub-process name="MOD_Company/CORE/PROCESSES/companyManagement?stateless=true" binding="late"></sub-process>
		<transition to="end-state3"></transition>
	</process-state>

	<node name="InjectFromPGS 2">
		<event type="node-enter">
			<action name="1" expression="#{PersoneGiuridicheAction.inject(PersonaGiuridicaSede.personaGiuridica)}"></action>
			<action name="2" expression="#{SediAction.inject(PersonaGiuridicaSede.sede)}"></action>
		</event>
		<transition to="CompanyManagement"></transition>
	</node>

	<task-node name="choose committente type">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_home/CORE/FORMS/chooseCommittenteType')}"></action>
		</event>
		<transition to="button name?"></transition>
	</task-node>

	<process-state name="operations">
		<sub-process name="MOD_home/CORE/PROCESSES/Utility/Generico/operations" binding="late"></sub-process>
		<transition to="end-state4"></transition>
	</process-state>

	<decision name="button name?" expression="#{button.value}">
		<transition to="operations" name="Utente"></transition>
		<transition to="operations" name="Ditta"></transition>
		<transition to="end-state4" name="BtnExit"></transition>
	</decision>

	<node name="setTemp3">
		<event type="node-enter">
			<action name="1" expression="#{VigilanzaAction.temporary.put('newCantiere',true)}"></action>
		</event>
		<transition to="Search Cantiere"></transition>
	</node>

	<node name="read stuff last version">
		<event type="node-enter">
			<action name="1" expression="#{CantiereLastAction.cleanRestrictions()}"></action>
			<action name="2" expression="#{CantiereLastAction.equal.put('isActive',true)}"></action>
			<action name="3" expression="#{CantiereLastAction.equal.put('id', Cantiere.id)}"></action>
			<action name="4" expression="#{CantiereLastAction.equal.put('lastVersion',true)}"></action>
			<action name="5" expression="#{CantiereLastAction.read()}"></action>
			<action name="6" expression="#{CantiereLastAction.cleanImported(CantiereLastList.list)}"></action>
			<action name="7" expression="#{CantiereLastList.list.size() eq 1 ? CantiereLastAction.injectFirst() : ''}"></action>
			<action name="8" expression="#{CommittenteAction.cleanRestrictions()}"></action>
			<action name="9" expression="#{not empty CantiereLast ? CommittenteAction.equal.put('cantiere.internalId', CantiereLast.internalId) : CommittenteAction.equal.put('cantiere.internalId', -1)}"></action>
			<action name="10" expression="#{CommittenteAction.injectList(CommittenteAction.select(),'CommittenteLastList')}"></action>
			<action name="11" expression="#{PersoneCantiereAction.cleanRestrictions()}"></action>
			<action name="12" expression="#{not empty CantiereLast ? PersoneCantiereAction.equal.put('cantiere.internalId',CantiereLast.internalId) : PersoneCantiereAction.equal.put('cantiere.internalId', -1)}"></action>
			<action name="13" expression="#{PersoneCantiereAction.equal.put('ruolo.code','RUOLOCANT01')}"></action>
			<action name="14" expression="#{PersoneCantiereAction.injectList(PersoneCantiereAction.select(),'PersoneCantiereLast1List')}"></action>
			<action name="15" expression="#{PersoneCantiereAction.equal.put('ruolo.code','RUOLOCANT02')}"></action>
			<action name="16" expression="#{PersoneCantiereAction.injectList(PersoneCantiereAction.select(),'PersoneCantiereLast2List')}"></action>
			<action name="17" expression="#{PersoneCantiereAction.equal.put('ruolo.code','RUOLOCANT03')}"></action>
			<action name="18" expression="#{PersoneCantiereAction.injectList(PersoneCantiereAction.select(),'PersoneCantiereLast3List')}"></action>
			<action name="19" expression="#{DitteCantiereAction.cleanRestrictions()}"></action>
			<action name="20" expression="#{not empty CantiereLast ? DitteCantiereAction.equal.put('cantiere.internalId',CantiereLast.internalId) : DitteCantiereAction.equal.put('cantiere.internalId',-1)}"></action>
			<action name="21" expression="#{DitteCantiereAction.injectList(DitteCantiereAction.select(),'DitteCantiereLastList')}"></action>
		</event>
		<transition to="Cantiere Last Details"></transition>
	</node>

	<task-node name="Cantiere Last Details">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setPopupViewId('/MOD_Cantieri/FORMS/show_cantiere_last_version')}"></action>
		</event>
		<transition to="popup cantiere button?"></transition>
	</task-node>

	<decision name="popup cantiere button?" expression="#{button.mnemonic}">
		<transition to="end-state4" name="BtnCancel"></transition>
		<transition to="super-state12/LinkCLast" name="BtnCantiereLastOK"></transition>
	</decision>

	<super-state name="super-state12">
		<node name="LinkCLast">
			<event type="node-enter">
				<action name="1" expression="#{VigilanzaAction.link('cantiere',CantiereLast)}"></action>
				<action name="2" expression="#{VigilanzaAction.create()}"></action>
				<action name="3" expression="#{CommittenteAction.ejectList('CommittenteLastList')}"></action>
				<action name="4" expression="#{PersoneCantiereAction.ejectList('PersoneCantiereLast1List')}"></action>
				<action name="5" expression="#{PersoneCantiereAction.ejectList('PersoneCantiereLast2List')}"></action>
				<action name="6" expression="#{PersoneCantiereAction.ejectList('PersoneCantiereLast3List')}"></action>
				<action name="7" expression="#{DitteCantiereAction.ejectList('DitteCantiereLastList')}"></action>
				<action name="8" expression="#{CantiereLastAction.eject()}"></action>
			</event>
			<transition to="../end-state4"></transition>
		</node>
	</super-state>

	<decision name="cloned Cantiere?" expression="#{CantiereAction.temporary['clonaImmediate'] ne null and CantiereAction.temporary['clonaImmediate'] eq true}">
		<transition to="super-state13/link clone" name="true"></transition>
		<transition to="end-state4" name="false"></transition>
	</decision>

	<super-state name="super-state13">
		<node name="link clone">
			<event type="node-enter">
				<action name="1" expression="#{VigilanzaAction.link('cantiere',Cantiere)}"></action>
				<action name="2" expression="#{VigilanzaAction.create()}"></action>
				<action name="3" expression="#{CantiereAction.temporary.remove('clonaImmediate')}"></action>
			</event>
			<transition to="../end-state4"></transition>
		</node>
	</super-state>


	<end-state name="end-state2"></end-state>

	<end-state name="end-state1"></end-state>

	<end-state name="end-state3"></end-state>

	<end-state name="end-state4"></end-state>

	<end-state name="end-state5"></end-state>


</process-definition>