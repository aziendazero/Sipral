<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="ProcessSecurity">


	<start-state name="start-state1">
		<transition to="ordering and filter macroprocesses"></transition>
	</start-state>


	<node name="read">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurityAction.temporary['macroprocess'] ? ProcSecurityAction.equal.put('macroprocess',true) : ProcSecurityAction.equal.remove('macroprocess')}"></action>
			<action name="2" expression="#{ProcSecurityAction.read()}"></action>
		</event>
		<transition to="empty?"></transition>
	</node>

	<task-node name="list processes">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Admin/CORE/FORMS/procSecurity')}"></action>
		</event>
		<transition to="decision1"></transition>
	</task-node>

	<decision name="decision1" expression="#{(button.getMnemonic())}">
		<transition to="end-state1"></transition>
		<transition to="edit security" name="EDIT"></transition>
		<transition to="customer?" name="RELOAD"></transition>
		<transition to="writeAll?" name="SAVE"></transition>
	</decision>

	<task-node name="edit security">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Admin/CORE/FORMS/editSecurity')}"></action>
		</event>
		<transition to="decision2"></transition>
	</task-node>

	<super-state name="super-state1">
		<node name="save">
			<event type="node-enter">
				<action name="1" expression="#{ProcSecurityAction.create()}"></action>
				<action name="2" expression="#{ProcSecurityAction.updateProcSecurityCache(ProcSecurity)}"></action>
			</event>
			<transition to="../customer?"></transition>
		</node>
	</super-state>

	<decision name="decision2" expression="#{(button.getMnemonic())}">
		<transition to="list processes" name="BACK"></transition>
		<transition to="writeAll?" name="OK"></transition>
		<transition to="add role" name="ADDROLE"></transition>
		<transition to="remove role" name="REMOVERLOE"></transition>
	</decision>

	<decision name="customer?" expression="#{!empty CUSTOMER}">
		<transition to="filterCust or Core" name="true"></transition>
		<transition to="filter core" name="false"></transition>
		<transition to="read from FS" name="false"></transition>
	</decision>

	<node name="filterCust or Core">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurityAction.equal.putOr('customer', CUSTOMER)}"></action>
		</event>
		<transition to="read"></transition>
	</node>

	<node name="filter core">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurityAction.equal.put('customer','CORE')}"></action>
		</event>
		<transition to="read"></transition>
	</node>

	<decision name="empty?" expression="#{ProcSecurityList.size() lt 1}">
		<transition to="inject ProcSecurityList first time from ProcessManager" name="true"></transition>
		<transition to="list processes" name="false"></transition>
	</decision>

	<node name="inject ProcSecurityList first time from ProcessManager">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurityAction.temporary.put('writeAll',true)}"></action>
			<action name="2" expression="#{ProcSecurityAction.injectFromProcessManager()}"></action>
		</event>
		<transition to="list processes"></transition>
	</node>

	<decision name="writeAll?" expression="#{!empty ProcSecurityAction.temporary['writeAll'] and ProcSecurityAction.temporary['writeAll']}">
		<transition to="super-state1/save" name="false"></transition>
		<transition to="super-state2/write all" name="true"></transition>
	</decision>

	<super-state name="super-state2">
		<node name="write all">
			<event type="node-enter">
				<action name="1" expression="#{ProcSecurityAction.createAll(ProcSecurityList.list)}"></action>
				<action name="2" expression="#{ProcSecurityAction.temporary.put('writeAll',false)}"></action>
			</event>
			<transition to="../customer?"></transition>
		</node>
	</super-state>

	<node name="read from FS">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurityAction.readFs()}"></action>
		</event>
		<transition to="list processes"></transition>
	</node>

	<node name="ordering and filter macroprocesses">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurityAction.orderBy.put('path','ascending')}"></action>
			<action name="2" expression="#{ProcSecurityAction.equal.put('macroprocess',true)}"></action>
			<action name="3" expression="#{ProcSecurityAction.temporary.put('macroprocess',true)}"></action>
		</event>
		<transition to="customer?"></transition>
	</node>

	<node name="add role">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurity.addProcSecurityRole(ProcSecurityRoleAction.newEntity())}"></action>
		</event>
		<transition to="edit security"></transition>
	</node>

	<node name="remove role">
		<event type="node-enter">
			<action name="1" expression="#{ProcSecurity.removeProcSecurityRole(ProcSecurityRole)}"></action>
		</event>
		<transition to="edit security"></transition>
	</node>


	<end-state name="end-state1"></end-state>


	<action name="security" expression="admin;1"></action>


</process-definition>