<?xml version="1.0" encoding="UTF-8"?>

<process-definition  xmlns=""  name="positionsManagement">


	<start-state name="start-state1">
		<transition to="button1?"></transition>
	</start-state>


	<task-node name="edit position">
		<task>
			<assignment actor-id="#{userBean.username}"></assignment>
		</task>
		<event type="node-enter">
			<action name="main" expression="#{ViewManager.setViewId('/MOD_Company/CORE/FORMS/positionEdit')}"></action>
		</event>
		<transition to="button2?"></transition>
	</task-node>

	<decision name="button2?" expression="#{button.value}">
		<transition to="super-state1/Save Position" name="BtnPosSPSave"></transition>
		<transition to="eject" name="BtnPosSPBack"></transition>
		<transition to="empty Person" name="BtnPosSPRefresh"></transition>
		<transition to="set temporary" name="BtnPosSPSelect"></transition>
	</decision>

	<super-state name="super-state1">
		<node name="Save Position">
			<event type="node-enter">
				<action name="1" expression="#{SediPersoneAction.create()}"></action>
				<action name="2" expression="#{CaricheAction.link('sediPersone', SediPersone)}"></action>
				<action name="3" expression="#{CaricheAction.link('sede', Sedi)}"></action>
				<action name="4" expression="#{CaricheAction.create()}"></action>
			</event>
			<transition to="../edit position"></transition>
		</node>
	</super-state>

	<decision name="button1?" expression="#{button.value}">
		<transition to="inject SediPersone" name="BtnPosMng"></transition>
		<transition to="nuovo incarico" name="BtnPosNew"></transition>
		<transition to="super-state2/delete" name="BtnPosDel"></transition>
		<transition to="nuovo incarico" name="BtnPosNew2"></transition>
	</decision>

	<node name="nuovo incarico">
		<event type="node-enter">
			<action name="1" expression="#{CaricheAction.inject(CaricheAction.newEntity())}"></action>
			<action name="2" expression="#{SediPersoneAction.inject(SediPersoneAction.newEntity())}"></action>
			<action name="3" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="personeFisicheSearch"></transition>
	</node>

	<node name="inject SediPersone">
		<event type="node-enter">
			<action name="1" expression="#{SediPersoneAction.inject(Cariche.sediPersone)}"></action>
		</event>
		<transition to="edit position"></transition>
	</node>

	<process-state name="personeFisicheSearch">
		<sub-process name="MOD_person/CORE/PROCESSES/ManageMulti" binding="late"></sub-process>
		<transition to="next from search?"></transition>
	</process-state>

	<node name="eject">
		<event type="node-enter">
			<action name="1" expression="#{CaricheAction.refresh()}"></action>
			<action name="2" expression="#{SediPersoneAction.refresh()}"></action>
			<action name="3" expression="#{CaricheAction.eject()}"></action>
			<action name="4" expression="#{SediPersoneAction.eject()}"></action>
			<action name="5" expression="#{PersonAction.eject()}"></action>
			<action name="6" expression="#{CaricheAction.cleanRestrictions()}"></action>
			<action name="7" expression="#{CaricheAction.equal.put('isActive',true)}"></action>
			<action name="8" expression="#{CaricheAction.equal.put('sede.internalId',Sedi.internalId)}"></action>
			<action name="9" expression="#{CaricheAction.read()}"></action>
		</event>
		<transition to="end-state2"></transition>
	</node>

	<node name="refresh from anag">
		<event type="node-enter">
			<action name="1" expression="#{SediPersoneAction.writeOver(Person,SediPersone)}"></action>
			<action name="2" expression="#{PersonAction.eject()}"></action>
		</event>
		<transition to="edit position"></transition>
	</node>

	<process-state name="Persone Fisiche">
		<sub-process name="MOD_person/CORE/PROCESSES/ManageMulti?stateless=true" binding="late"></sub-process>
		<transition to="manage data"></transition>
	</process-state>

	<node name="set temporary">
		<event type="node-enter">
			<action name="1" expression="#{ProtocolloAction.temporary.put('search',true)}"></action>
		</event>
		<transition to="Persone Fisiche"></transition>
	</node>

	<node name="manage data">
		<event type="node-enter">
			<action name="1" expression="#{SediPersoneAction.managePerson(Person)}"></action>
			<action name="2" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="edit position"></transition>
	</node>

	<decision name="empty Person" expression="#{empty SediPersone.person}">
		<transition to="getPerson" name="true"></transition>
		<transition to="inject" name="false"></transition>
	</decision>

	<node name="getPerson">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.backupRestrictions()}"></action>
			<action name="2" expression="#{PersonAction.cleanRestrictions()}"></action>
			<action name="3" expression="#{PersonAction.equal.put('isActive',true)}"></action>
			<action name="4" expression="#{PersonAction.equal.put('fiscalCode',SediPersone.fiscalCode)}"></action>
			<action name="5" expression="#{PersonAction.select.add('fiscalCode')}"></action>
			<action name="6" expression="#{not empty SediPersone.fiscalCode ? PersonAction.read() : ''}"></action>
			<action name="7" expression="#{not empty SediPersone.fiscalCode ? PersonAction.injectFirst() : ''}"></action>
			<action name="8" expression="#{PersonAction.ejectList()}"></action>
			<action name="9" expression="#{PersonAction.restoreRestrictions()}"></action>
		</event>
		<transition to="refresh from anag"></transition>
	</node>

	<node name="inject">
		<event type="node-enter">
			<action name="1" expression="#{PersonAction.inject(SediPersone.person)}"></action>
		</event>
		<transition to="refresh from anag"></transition>
	</node>

	<super-state name="super-state2">
		<node name="delete">
			<event type="node-enter">
				<action name="1" expression="#{SediPersoneAction.inject(Cariche.sediPersone)}"></action>
				<action name="2" expression="#{CaricheAction.removeFromProvvedimenti(Cariche)}"></action>
				<action name="3" expression="#{CaricheAction.unLink('sediPersone',Cariche.sediPersone)}"></action>
				<action name="4" expression="#{empty SediPersone.cariche or SediPersone.cariche.size() eq 0 ? SediPersoneAction.unLink('person',SediPersone.person) : ''}"></action>
				<action name="5" expression="#{empty SediPersone.cariche or SediPersone.cariche.size() eq 0 ? SediPersoneAction.delete() : ''}"></action>
				<action name="6" expression="#{CaricheAction.delete()}"></action>
			</event>
			<transition to="../end-state3"></transition>
		</node>
	</super-state>

	<decision name="next from search?" expression="#{(button.getMnemonic())}">
		<transition to="eject" name="BtnBack"></transition>
		<transition to="copy person" name="BtnSave"></transition>
	</decision>

	<node name="copy person">
		<event type="node-enter">
			<action name="1" expression="#{SediPersoneAction.managePerson(Person)}"></action>
			<action name="2" expression="#{ProtocolloAction.temporary.remove('search')}"></action>
		</event>
		<transition to="edit position"></transition>
	</node>


	<end-state name="end-state2"></end-state>

	<end-state name="end-state3"></end-state>


</process-definition>