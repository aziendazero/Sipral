====================================
  Release note 2.2.0
====================================

The release 2.2.0 contains following updates.




*******************************
  Main Catalog Server update:
*******************************

- Split code_value table in multiple different tables, to improve performance at runtime
- Fix automatic hibernate creation of fk/index/table names longer than 30 chars (fixed with hibernate library fix)  
- languages are now fixed column to have more performance
- changed behaviour for code extension

(datagrid)
- refactored id. Now header is fixed, and there is the possibility to set a specific column width for a data grid column.
- allow to process continue, and action execution on row click
- sort works on paged read
- allow to choose filter label text on data grid
- rendered datagrid also without binding

- fixed login/logout pagination management
- RimObject refactor to BaseEntity. BaseEntity can be managed from Catalog exploer
- fixed hibernate library which creates fk longer than 30 chars
- fixed js.js and home for breadcrumb reload
- fixed error messages rerender
- fixed home for validator error messages
- method getCodeValues to get multiple coded values from different dicitonary available
- Allow to enable/disable tooltip, using different home page.
- fixed rendering issue for some widget inside table
- allow to reverse history order


***************************
  Main Designer update:
***************************

- changed code_value management on Dictionary Manager. From final user point of view the change is not visible
- allow creation of 1:1, 1:N, N:1, N:N relationship with new relation action
- imrpoved check controls during new attribute/relationshiop creation
- allow to create Rim Object extensions, and CodeValue extensions. 
- new select operation to get only some object property instead of read entire objects

- special role "ALWAYS_EXECUTABLE" can be assigned to process, which can be executed by any user

- allow to set default value for widget instead of use process node to set values
- fixed ImageEl property
- fixed insertion of style elements for widget property
- allow to set render el on panel tab
- allow to decide if empty field must be present or not in combo box

- fixed memory leak for dictionary manager on startup
- fixed update of retired coded value 
- added information of db selected in any dictionary tab
- allow to create duplicated code inside the same top level domain 
- addded popup configuration
- fixed csv export


==========================================================================
   List of Mantis identification number solved with the release:
==========================================================================
12203
14230
13880
14518
14987
12778
14204
13855
13893
14670
14528
14215
12472
13861
14245
14695
14665
14674
14673
13819
14439
14369
14405
14236
14224
14220
14135
13959
11474
14390
14242
14271
14024
13914
13416
10426
14525
14519
13972
10803
14396
13423
14293
13400
13817
13748
14201
14108
14042



***********************************************
  Existing solution update instruction
***********************************************

TO DO:

update db.connections.xml inside the PHI Designer folder adding into "commons" tag: 
    hibernate.cache.provider_class="org.hibernate.cache.HashtableCacheProvider"
according to http://support.insielmercato.it/mantis/view.php?id=14528

Rename in your jboss-as/server/<production>/lib/ folder the hibernate3.jar to hibernate3.bak
Copy the provided \CATALOG_SERVER\lib\hibernate-core-phi-3.3.2.GA_CP04.jar 
This change contains an Hibernate fix to above automatic creation of FK/Index/table with name longer than 30 chars.


UPDATE CODE VALUE:
Your dictionary table must be updated. The Old codeValue class is actually mapped by a CodeValuePhi Class. 
Actually every code system must be mapped from a different class. E.g. CodeValueCity for Old CodeSystem containing cities.
According to this, you must create a new class for each new CodeSystem you have created in your solution.
If your solution never used any other code system except PhiDictionary, you do not have create new Classes/Code system tables.

Existing codeSystem must be updated with following instruction:

1) select from code_syste table to understand your current db status:
	select id, display_name, code_value_class from code_system;

Execute update according to your code_system / class mapping: (you must update code_value_class field)
e.g.
	update code_system set code_value_class='CodeValuePhi'  where display_name = 'PHI DICTIONARY'   
	update code_system set code_value_class='CodeValueCity' where display_name = 'COMUNI'
 
After that you must migrate from code_value table, the code to new table with provided script.
[this is not needed again, if you use only PHIDIC]

BASE SOLUTION FILE UPDATE:
Check into phi project template updated files: js.js, web.xml, default.css, home.xhtml, login.xhtml, faces-config.xml, home_main_container.xml, build.xml, build.properties.
In general these file can contains minimal changes, compared with previous version, but needed for bug fixing / functionality improvement.
Because every solution can have proper customization in these files (e.g. servlet declaration, specific style, and so on), must be merged manually.

Remember to: 
- export catalog server jar in solution backend lib. 
- Clean your project, and re-generate all the forms. 
- Clean deployment, removing war and jar of backend and cs, and redeploy them completely.
- Clean your browser cache, to reload properly pages and styles.



ISSUES ON UPDATING BACKEND OF EXISTING SOLUTION: 
- RimObject.java class is renamed into BaseEntity.java, and moved inside com.phi.entities.baseEntity. Existing classes using RimObject, must be refactored.
- Patient and Person is not more connected with relationship: person data are now transferred inside Patient class e.g. name, borntime, instead to be in Person class
  add a relationship OneToOne to person in backend classes which extends Patient, if needed, or use the existing attribute, or add them if needed.  
- RimPdm2CatalogAdapter class is updated, so class extending it must be checked.
- EmployeeRole has changed package: extends BaseEntity
- transientValue1 and transientValue2 of BaseEntity are removed, use instead temporary hashmap of BaseEntity to store temporary values.





====================================
  SVN TAG revisions relase 2.1.0: 
====================================