package com.phi.entities.baseEntity;

// Generated 15-lug-2015 13.47.19 by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.Audited;
import com.phi.entities.baseEntity.BaseEntity;

/**
 * InchiestaInfortunio generated by hbm2java
 */

import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import org.hibernate.annotations.Index;
import org.hibernate.annotations.ForeignKey;
import com.phi.entities.baseEntity.Procpratiche;
import com.phi.entities.dataTypes.CodeValue;
import com.phi.entities.dataTypes.CodeValuePhi;

@Entity
@Table(name = "inchiesta_infortunio")
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
@Audited
public class InchiestaInfortunio extends BaseEntity implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8984283329229883436L;


	/**
	*  javadoc for procpratiche
	*/
	private Procpratiche procpratiche;

	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.PERSIST)
	@JoinColumn(name="procpratiche_id")
	@ForeignKey(name="FK_nchstanfortuno_procprtch")
	//@Index(name="IX_nchstanfortuno_procprtch")
	public Procpratiche getProcpratiche(){
		return procpratiche;
	}

	public void setProcpratiche(Procpratiche procpratiche){
		this.procpratiche = procpratiche;
	}


	@Override
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "IncInf_sequence")
	@SequenceGenerator(name = "IncInf_sequence", sequenceName = "IncInf_sequence")
	@Column(name = "internal_id")
	public long getInternalId() {
		return internalId;
	}
	
	@Override
	public void setInternalId(long internalId) {
		this.internalId = internalId;
	}
	
	/**
	*  javadoc for date - Data Inizio Inchiesta
	*/

	private Date dataInizio;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="data_inizio", length=19)
	public Date getDataInizio() {
		return dataInizio;
	}

	public void setDataInizio(Date dataInizio) {
		this.dataInizio = dataInizio;
	}
	
	/**
	*  javadoc for date - Data Fine Inchiesta
	*/

	private Date dataFine;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="data_fine", length=19)
	public Date getDataFine() {
		return dataFine;
	}

	public void setDataFine(Date dataFine) {
		this.dataFine = dataFine;
	}
	
	/**
	*  javadoc for date - Data Inizio Inchiesta
	*/

	private Date dataAffidamento;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="data_affidamento", length=19)
	public Date getDataAffidamento() {
		return dataAffidamento;
	}

	public void setDataAffidamento(Date dataAffidamento) {
		this.dataAffidamento = dataAffidamento;
	}
	
	private Date dataSupplemento;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="data_supplemento", length=19)
	public Date getDataSupplemento() {
		return dataSupplemento;
	}

	public void setDataSupplemento(Date dataSupplemento) {
		this.dataSupplemento = dataSupplemento;
	}
	
	private Date dataFascicolo;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="data_fascicolo", length=19)
	public Date getDataFascicolo() {
		return dataFascicolo;
	}

	public void setDataFascicolo(Date dataFascicolo) {
		this.dataFascicolo = dataFascicolo;
	}
	
	private Date dataConclusione;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="data_conclusione", length=19)
	public Date getDataConclusione() {
		return dataConclusione;
	}

	public void setDataConclusione(Date dataConclusione) {
		this.dataConclusione = dataConclusione;
	}
	
	private CodeValue tipoIntervento;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="tipo_intervento")
	@ForeignKey(name="FK_Inc_tipoint")
	//@Index(name="IX_Inc_tipoint")
	public CodeValue getTipoIntervento() {
		return tipoIntervento;
	}

	public void setTipoIntervento(CodeValue tipoIntervento) {
		this.tipoIntervento = tipoIntervento;
	}
	
	private CodeValue procura;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="procura")
	@ForeignKey(name="FK_Inc_proc")
	//@Index(name="IX_Inc_proc")
	public CodeValue getProcura() {
		return procura;
	}

	public void setProcura(CodeValue procura) {
		this.procura = procura;
	}
	
	/*private CodeValue magistrato;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="magistrato")
	@ForeignKey(name="FK_Inc_mag")
	//@Index(name="IX_Inc_mag")
	public CodeValue getMagistrato() {
		return magistrato;
	}

	public void setMagistrato(CodeValue magistrato) {
		this.magistrato = magistrato;
	}*/
	
	private String magistrato;

	@Column(name = "magistrato"/*, length = 2500*/)
	public String getMagistrato() {
		return this.magistrato;
	}

	public void setMagistrato(String magistrato) {
		this.magistrato = magistrato;
	}
	
	private CodeValue esitoInchiesta;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="esito_inchiesta")
	@ForeignKey(name="FK_Inc_esito")
	//@Index(name="IX_Inc_esito")
	public CodeValue getEsitoInchiesta() {
		return esitoInchiesta;
	}

	public void setEsitoInchiesta(CodeValue esitoInchiesta) {
		this.esitoInchiesta = esitoInchiesta;
	}
	
	private String numeroFascicolo;

	@Column(name = "numero_fascicolo"/*, length = 2500*/)
	public String getNumeroFascicolo() {
		return this.numeroFascicolo;
	}

	public void setNumeroFascicolo(String numeroFascicolo) {
		this.numeroFascicolo = numeroFascicolo;
	}
	
	private String invioConclusione;

	@Column(name = "invio_conclusione"/*, length = 2500*/)
	public String getInvioConclusione() {
		return this.invioConclusione;
	}

	public void setInvioConclusione(String invioConclusione) {
		this.invioConclusione = invioConclusione;
	}
	
	private String note;

	@Column(name = "note", length = 2500)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}
	
	private String testi;

	@Column(name = "testi"/*, length = 2500*/)
	public String getTesti() {
		return this.testi;
	}

	public void setTesti(String testi) {
		this.testi = testi;
	}
	
	private String allegati;

	@Column(name = "allegati", length = 2500)
	public String getAllegati() {
		return this.allegati;
	}

	public void setAllegati(String allegati) {
		this.allegati = allegati;
	}
	
	private String descrizioneLuoghi;

	@Column(name = "descrizione_luoghi", length = 2500)
	public String getDescrizioneLuoghi() {
		return this.descrizioneLuoghi;
	}

	public void setDescrizioneLuoghi(String descrizioneLuoghi) {
		this.descrizioneLuoghi = descrizioneLuoghi;
	}
	
	private String descrizioneEvento;

	@Column(name = "descrizione_evento", length = 2500)
	public String getDescrizioneEvento() {
		return this.descrizioneEvento;
	}

	public void setDescrizioneEvento(String descrizioneEvento) {
		this.descrizioneEvento = descrizioneEvento;
	}
	
	private String attivitaPg;

	@Column(name = "attivita_pg", length = 2500)
	public String getAttivitaPg() {
		return this.attivitaPg;
	}

	public void setAttivitaPg(String attivitaPg) {
		this.attivitaPg = attivitaPg;
	}
	
	private String considerazioni;

	@Column(name = "considerazioni", length = 2500)
	public String getConsiderazioni() {
		return this.considerazioni;
	}

	public void setConsiderazioni(String considerazioni) {
		this.considerazioni = considerazioni;
	}
	
	private String conclusioni;

	@Column(name = "conclusioni", length = 2500)
	public String getConclusioni() {
		return this.conclusioni;
	}

	public void setConclusioni(String conclusioni) {
		this.conclusioni = conclusioni;
	}
	
	private String notaRelazione;

	@Column(name = "riferimento"/*, length = 2500*/)
	public String getNotaRelazione() {
		return this.notaRelazione;
	}

	public void setNotaRelazione(String notaRelazione) {
		this.notaRelazione = notaRelazione;
	}
	
	/**
	*  javadoc for violazioni
	*/
	private CodeValue violazioni;

	@ManyToOne(fetch=FetchType.LAZY, targetEntity=CodeValuePhi.class)
    @JoinColumn(name="violazioni")
	@ForeignKey(name="FK_Inc_violazioni")
	//@Index(name="IX_Inc_violazioni")
	public CodeValue getViolazioni() {
		return violazioni;
	}

	public void setViolazioni(CodeValue violazioni) {
		this.violazioni = violazioni;
	}
	
	/**
	*  javadoc for reati
	*/
	private Boolean reati = false;

	@Column(name="reati")
	public boolean getReati(){
		return reati;
	}

	public void setReati(boolean reati){
		this.reati = reati;
	}
}
