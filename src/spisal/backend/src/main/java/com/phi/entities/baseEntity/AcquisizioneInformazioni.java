package com.phi.entities.baseEntity;

// Generated 15-lug-2015 13.47.19 by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.ForeignKey;
import org.hibernate.annotations.IndexColumn;
import org.hibernate.envers.Audited;

import com.phi.entities.baseEntity.BaseEntity;

/**
 * Sopralluoghi generated by hbm2java
 */

import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.OneToOne;
import com.phi.entities.baseEntity.Attivita;
import com.phi.entities.baseEntity.Soggetto;
import com.phi.entities.dataTypes.CodeValuePhi;


import java.util.ArrayList;
import javax.persistence.OneToMany;

@Entity
@Table(name = "acquisizione_informazioni")
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
@Audited
public class AcquisizioneInformazioni extends BaseEntity implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3779921402923652796L;

	/**
	*  javadoc for riunioneComitato
	*/
	private Boolean riunioneComitato;

	@Column(name="riunione_comitato")
	public Boolean getRiunioneComitato(){
		return riunioneComitato;
	}

	public void setRiunioneComitato(Boolean riunioneComitato){
		this.riunioneComitato = riunioneComitato;
	}


	/**
	*  javadoc for attivita
	*/
	private List<Attivita> attivita;

	@OneToMany(fetch=FetchType.LAZY, mappedBy="acquisizioneInformazioni"/*, cascade=CascadeType.PERSIST*/)
	public List<Attivita> getAttivita(){
		return attivita;
	}

	public void setAttivita(List<Attivita> list){
		attivita = list;
	}

	public void addAttivita(Attivita attivita) {
		if (this.attivita == null) {
			this.attivita = new ArrayList<Attivita>();
		}
		// add the association
		if(!this.attivita.contains(attivita)) {
			this.attivita.add(attivita);
			// make the inverse link
			attivita.setAcquisizioneInformazioni(this);
		}
	}

	public void removeAttivita(Attivita attivita) {
		if (this.attivita == null) {
			this.attivita = new ArrayList<Attivita>();
			return;
		}
		//add the association
		if(this.attivita.contains(attivita)){
			this.attivita.remove(attivita);
			//make the inverse link
			attivita.setAcquisizioneInformazioni(null);
		}

	}


	/**
	*  javadoc for documentiVisionati
	*/
	private List<CodeValuePhi> documentiVisionati = new ArrayList<CodeValuePhi>();

	@ManyToMany(fetch=FetchType.LAZY, cascade = CascadeType.PERSIST)
	@JoinTable(name="acqinfo_docvisionati", joinColumns = { @JoinColumn(name="acqinfo_id") }, inverseJoinColumns = { @JoinColumn(name="docvisionati") })
	@ForeignKey(name="FK_docvisionati_acqinfo", inverseName="FK_acqinfo_docvisionati")
	@IndexColumn(name="list_index")
	public List<CodeValuePhi> getDocumentiVisionati(){
		return documentiVisionati;
	}

	public void setDocumentiVisionati(List<CodeValuePhi> documentiVisionati){
		this.documentiVisionati = documentiVisionati;
	}


	/**
	*  javadoc for soggetto
	*/
	private Soggetto soggetto;

	@OneToOne(fetch=FetchType.LAZY, mappedBy="acquisizioneInformazioni" /*, cascade=CascadeType.PERSIST*/)
	public Soggetto getSoggetto(){
		return soggetto;
	}

	public void setSoggetto(Soggetto soggetto){
		this.soggetto = soggetto;
	}


//	/**
//	*  javadoc for attivita
//	*/
//	private Attivita attivita;
//
//	@OneToOne(fetch=FetchType.LAZY, mappedBy="acquisizioneInformazioni", cascade=CascadeType.PERSIST)
//	public Attivita getAttivita(){
//		return attivita;
//	}
//
//	public void setAttivita(Attivita attivita){
//		this.attivita = attivita;
//	}

	@Override
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "Informazioni_sequence")
	@SequenceGenerator(name = "Informazioni_sequence", sequenceName = "Informazioni_sequence")
	@Column(name = "internal_id")
	public long getInternalId() {
		return internalId;
	}
	
	@Override
	public void setInternalId(long internalId) {
		this.internalId = internalId;
	}
	
	private String oggetto;
	
	@Column(name = "oggetto", length=4000)
	public String getOggetto() {
		return this.oggetto;
	}

	public void setOggetto(String oggetto) {
		this.oggetto = oggetto;
	}
	
	private String dichiarazione;
	
	@Column(name = "dichiarazione")
	public String getDichiarazione() {
		return this.dichiarazione;
	}

	public void setDichiarazione(String dichiarazione) {
		this.dichiarazione = dichiarazione;
	}
	
	private String allegati;
	
	@Column(name = "allegati", length=2500)
	public String getAllegati() {
		return this.allegati;
	}

	public void setAllegati(String allegati) {
		this.allegati = allegati;
	}
	
	private String conclusioni;
	
	@Column(name = "conclusioni", length=4000)
	public String getConclusioni() {
		return this.conclusioni;
	}

	public void setConclusioni(String conclusioni) {
		this.conclusioni = conclusioni;
	}

}
